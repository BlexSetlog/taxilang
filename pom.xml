<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
   <modelVersion>4.0.0</modelVersion>

   <groupId>lang.taxi</groupId>
   <artifactId>parent</artifactId>
   <packaging>pom</packaging>
   <version>0.5.0-SNAPSHOT</version>
   <description>taxi is a language for defining API contracts. A Dsl that sits atop RAML for resource definition. Taxi
      (short for Taxonomy)
   </description>


   <scm>
      <url>https://gitlab.com/taxi-lang/taxi-lang</url>
      <connection>scm:git:ssh://gitlab.com:taxi-lang/taxi-lang.git</connection>
      <developerConnection>scm:git:ssh://git@gitlab.com/taxi-lang/taxi-lang.git</developerConnection>
      <tag>v0.4.0</tag>
   </scm>

   <modules>
      <module>compiler</module>
      <module>taxi-annotations</module>
      <module>java2taxi</module>
      <module>taxi-annotation-processor</module>
      <module>swagger2taxi</module>
      <module>taxi-writer</module>
      <module>taxi-stdlib-annotations</module>
      <module>test-utils</module>
      <module>taxi-generator-api</module>
      <module>taxi-jvm-common</module>
      <module>taxi-cli</module>
      <module>taxi-plugin-api</module>
      <module>plugins</module>
      <module>kotlin</module>
      <module>lang-to-taxi-api</module>
      <module>taxi-typescript/kotlin-to-ts-emitter</module>
      <module>core-types</module>
      <module>package-importer</module>
      <module>package-repository-api</module>
   </modules>

   <properties>
      <kotlin.compiler.jvmTarget>1.8</kotlin.compiler.jvmTarget>
      <kotlin.version>1.3.50</kotlin.version>
      <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
      <arrow.version>0.10.4</arrow.version>
      <guava.version>28.2-jre</guava.version>
   </properties>

   <dependencies>
      <dependency>
         <groupId>org.jetbrains.kotlin</groupId>
         <artifactId>kotlin-stdlib-jdk8</artifactId>
         <version>${kotlin.version}</version>
      </dependency>
      <dependency>
         <groupId>org.jetbrains.kotlin</groupId>
         <artifactId>kotlin-test</artifactId>
         <version>${kotlin.version}</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.jetbrains.kotlin</groupId>
         <artifactId>kotlin-reflect</artifactId>
         <version>${kotlin.version}</version>
      </dependency>
      <dependency>
         <groupId>com.winterbe</groupId>
         <artifactId>expekt</artifactId>
         <version>0.5.0</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>junit</groupId>
         <artifactId>junit</artifactId>
         <version>4.12</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>com.nhaarman.mockitokotlin2</groupId>
         <artifactId>mockito-kotlin</artifactId>
         <version>2.2.0</version>
         <scope>test</scope>
      </dependency>
      <!-- https://mvnrepository.com/artifact/org.assertj/assertj-core -->
      <dependency>
         <groupId>org.assertj</groupId>
         <artifactId>assertj-core</artifactId>
         <version>3.14.0</version>
         <scope>test</scope>
      </dependency>

   </dependencies>

   <dependencyManagement>
      <dependencies>
         <dependency>
            <groupId>io.arrow-kt</groupId>
            <artifactId>arrow-core</artifactId>
            <version>${arrow.version}</version>
         </dependency>
         <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-stdlib</artifactId>
            <version>${kotlin.version}</version>
         </dependency>
         <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-stdlib-jdk8</artifactId>
            <version>${kotlin.version}</version>
         </dependency>
         <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-reflect</artifactId>
            <version>${kotlin.version}</version>
         </dependency>
         <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${guava.version}</version>
         </dependency>
      </dependencies>
   </dependencyManagement>
   <build>
      <extensions>
         <extension>
            <groupId>org.springframework.build</groupId>
            <artifactId>aws-maven</artifactId>
            <version>5.0.0.RELEASE</version>
         </extension>
      </extensions>
      <plugins>
         <plugin>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>2.22.0</version>
         </plugin>
         <plugin>
            <groupId>com.amashchenko.maven.plugin</groupId>
            <artifactId>gitflow-maven-plugin</artifactId>
            <version>1.14.0</version>
            <configuration>
               <!-- whether to push to the git remote. Very useful for testing locally -->
               <pushRemote>true</pushRemote>
               <!-- Set to true to immediately bump the development version when creating a release branch -->
               <commitDevelopmentVersionAtStart>false</commitDevelopmentVersionAtStart>
               <!-- Execute mvn compile before release -->
               <preReleaseGoals>compile</preReleaseGoals>
               <commitMessages>
                  <releaseStartMessage>Update versions for release @{version}</releaseStartMessage>
                  <releaseFinishMessage>Update for next development version @{version}</releaseFinishMessage>
                  <releaseVersionUpdateMessage>Update for next development version @{version}</releaseVersionUpdateMessage>
               </commitMessages>
               <!-- Configure branches -->
               <gitFlowConfig>
                  <productionBranch>master</productionBranch>
                  <!-- default is develop, but we use development -->
                  <developmentBranch>develop</developmentBranch>
               </gitFlowConfig>
            </configuration>
         </plugin>
         <plugin>
            <artifactId>kotlin-maven-plugin</artifactId>
            <groupId>org.jetbrains.kotlin</groupId>
            <version>${kotlin.version}</version>
            <executions>
               <execution>
                  <id>kapt</id>
                  <goals>
                     <goal>kapt</goal>
                  </goals>
                  <configuration>
                     <sourceDirs>
                        <sourceDir>${project.basedir}/target/generated-sources/antlr4</sourceDir>
                        <sourceDir>src/main/java</sourceDir>
                     </sourceDirs>
                  </configuration>
               </execution>
               <execution>
                  <id>compile</id>
                  <goals>
                     <goal>compile</goal>
                  </goals>
                  <configuration>
                     <sourceDirs>
                        <sourceDir>${project.basedir}/target/generated-sources/antlr4</sourceDir>
                        <sourceDir>src/main/java</sourceDir>
                     </sourceDirs>
                  </configuration>
               </execution>

               <execution>
                  <id>test-compile</id>
                  <goals>
                     <goal>test-compile</goal>
                  </goals>
                  <configuration>
                     <sourceDirs>
                        <sourceDir>src/test/kotlin</sourceDir>
                        <sourceDir>src/test/java</sourceDir>
                        <sourceDir>target/generated-sources/kaptKotlin/test</sourceDir>
                     </sourceDirs>
                  </configuration>
               </execution>
            </executions>
         </plugin>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>3.8.0</version>
            <configuration>
               <!--<proc>none</proc>-->
               <source>1.8</source>
               <target>1.8</target>
            </configuration>
            <executions>
               <!-- Replacing default-compile as it is treated specially by maven -->
               <execution>
                  <id>default-compile</id>
                  <phase>none</phase>
               </execution>
               <!-- Replacing default-testCompile as it is treated specially by maven -->
               <execution>
                  <id>default-testCompile</id>
                  <phase>none</phase>
               </execution>
               <execution>
                  <id>java-compile</id>
                  <phase>compile</phase>
                  <goals>
                     <goal>compile</goal>
                  </goals>
               </execution>
               <execution>
                  <id>java-test-compile</id>
                  <phase>test-compile</phase>
                  <goals>
                     <goal>testCompile</goal>
                  </goals>
               </execution>
            </executions>
         </plugin>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
            <version>3.0.1</version>
            <executions>
               <execution>
                  <id>attach-sources</id>
                  <goals>
                     <goal>jar</goal>
                  </goals>
               </execution>
            </executions>
         </plugin>
      </plugins>
      <pluginManagement>
         <plugins>
            <plugin>
               <groupId>io.fabric8</groupId>
               <artifactId>docker-maven-plugin</artifactId>
               <version>0.27.2</version>
            </plugin>
         </plugins>
      </pluginManagement>
   </build>
   <distributionManagement>
      <repository>
         <id>bintray-taxi-lang-releases</id>
         <name>taxi-lang-releases</name>
         <url>https://api.bintray.com/maven/taxi-lang/releases/${project.artifactId}/;publish=1</url>
      </repository>
      <snapshotRepository>
         <id>repo.vyne.co</id>
         <url>s3://repo.vyne.co/snapshot</url>
      </snapshotRepository>
   </distributionManagement>
</project>
