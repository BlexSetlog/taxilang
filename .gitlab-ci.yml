variables:
  # This will supress any download for dependencies and plugins or upload messages which would clutter the console log.
  # `showDateTime` will show the passed time in milliseconds. You need to specify `--batch-mode` to make this work.
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
  # As of Maven 3.3.0 instead of this you may define these options in `.mvn/maven.config` so the same config is used
  # when running from the command line.
  # `installAtEnd` and `deployAtEnd` are only effective with recent version of the corresponding plugins.
  MAVEN_CLI_OPTS: "-s mvn-settings.xml --batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true"
  # Used during gitflow interaction.
  MAJOR_RELEASE_DIGIT: 0
  MINOR_RELEASE_DIGIT: 1
  PATCH_RELEASE_DIGIT: 2

.git_template: &git_setup |
   git remote set-url --push origin "https://oauth2:${GITLAB_TOKEN}@${CI_SERVER_HOST}/${CI_PROJECT_PATH}.git"
   git config user.name "taxi-cd"
   git config user.email taxi-cd@vyne.co

# Cache downloaded dependencies and plugins between builds.
# To keep cache across branches add 'key: "$CI_JOB_REF_NAME"'
cache:
  paths:
    - .m2/repository


stages:
   - build
   - release
   - deploy

# This will only validate and compile stuff and run e.g. maven-enforcer-plugin.
# Because some enforcer rules might check dependency convergence and class duplications
# we use `test-compile` here instead of `validate`, so the correct classpath is picked up.
validate:
  image: maven:3.3.9-jdk-8
  stage: build
  except:
     - tags
  script:
    - 'mvn $MAVEN_CLI_OPTS install'
  artifacts:
    reports:
      junit:
      # Note:This won't actually work, b/c of https://gitlab.com/gitlab-org/gitlab-runner/issues/2620
      # However, leaving this here to pick up later
        - "*/target/surefire-reports/TEST-*.xml"

release-major:
   variables:
      GIT_STRATEGY: none
   image: maven:3.3.9-jdk-8
   stage: release
   script:
      - *git_setup
      - 'mvn gitflow:release -B -DversionDigitToIncrement=$MAJOR_RELEASE_DIGIT'
   only:
      - develop
   when: manual

release-minor:
   variables:
      GIT_STRATEGY: none
   image: maven:3.3.9-jdk-8
   stage: release
   script:
      - *git_setup
      - 'mvn gitflow:release -B -DversionDigitToIncrement=$MINOR_RELEASE_DIGIT'
   only:
      - develop
   when: manual

release-patch:
   variables:
      GIT_STRATEGY: none
   image: maven:3.3.9-jdk-8
   stage: release
   script:
      - *git_setup
      - 'mvn gitflow:release -B -DversionDigitToIncrement=$PATCH_RELEASE_DIGIT'
   only:
      - develop
   when: manual

publish-snapshot:
   stage: deploy
   script:
      - docker login -u vynecd -p $DOCKER_HUB_PASSWORD
      - 'mvn $MAVEN_CLI_OPTS -DskipTests deploy -P snapshot-release,deploy-only ' # Skip UI and tests. Already there from previous stages and artifacts
   only:
      - develop
   artifacts:
      paths:
         - "taxi-cli/target/*.zip"

publish-release:
   #image: maven:3.6.3-jdk-8
   stage: deploy
   script:
      - docker login -u vynecd -p $DOCKER_HUB_PASSWORD
      - 'mvn $MAVEN_CLI_OPTS -DskipTests -Dmaven.test.skip=true deploy -P release,deploy-only'

   only:
      - master
   artifacts:
      paths:
         - "taxi-cli/target/*.zip"

