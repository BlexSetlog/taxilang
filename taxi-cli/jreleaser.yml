project:
   description: Taxi Cli
   longDescription: Taxi is a language for data.  Build enterprise taxonomies, tag data & services, or enrich existing schemas.
   website: https://taxilang.org
   authors:
      - Marty Pitt
      - Serhat Tuncay
      - The Vyne Team (https://vyne.co)
   license: Apache-2

release:
   gitlab:
      owner: taxi-lang
      name: taxi-lang
      username: martypitt
      branch: master

distributions:
   taxi-cli:
      java:
         mainClass: lang.taxi.cli.TaxiCli
#      type: JAVA_BINARY
        # Name of the executable launcher.
        # If left undefined, will use ${distribution.name}.
      #
      executable: taxi/bin/taxi
      artifacts:
         -  path: target/taxi.zip

packagers:
   #
   sdkman:
      # Enables or disables Sdkman.
      # Valid values are [`NEVER`, `ALWAYS`, `RELEASE`, `SNAPSHOT`].
      # Defaults to `NEVER`.
      #
      active: ALWAYS

      # Let the release continue if the packager fails.
      # Defaults to `false`.
      #
      continueOnError: true

      # Custom download URL.
      #
      #      downloadUrl: https://my.server.com/{{projectName}}/{{tagName}}/{{artifactFile}}

      # Additional properties used when evaluating templates.
      #
#      extraProperties:
      # Key will be capitalized and prefixed with `sdkman`, i.e, `sdkmanFoo`.
      #         foo: bar

      # Defines the connection timeout in seconds.
      # Defaults to `20`.
      #
      connectTimeout: 20

      # Defines the read timeout in seconds.
      # Defaults to `60`.
      #
      readTimeout: 60

      # The name of the candidate registered in the Sdkman database.
      # If unspecified, will use `${distribution.name}`.
      #
      candidate: taxi

      # Sdkman command to use.
      # Valid values are [`MAJOR`, `MINOR`]
      # Defaults to `MAJOR`.
      #
      command: MINOR

      # The release notes URL to use.
      # Defaults to `${release.${git}.releaseNotesUrl}`.
      #
      releaseNotesUrl: https://host.com/{{projectName}}/{{tagName}}

      # The consumer key for publishing to Sdkman.
      # If left unspecified, the `JRELEASER_SDKMAN_CONSUMER_KEY`
      # environment variable must be defined.
      #
      #      consumerKey: __DO_NOT_SET_HERE__

      # The consumer token for publishing to Sdkman.
      # If left unspecified, the `JRELEASER_SDKMAN_CONSUMER_TOKEN`
      # environment variable must be defined.
      #
#      consumerToken: __DO_NOT_SET_HERE__
