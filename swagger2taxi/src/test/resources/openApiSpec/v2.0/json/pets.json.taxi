namespace vyne.openApi {
   model Pet {
      id : Int?
      category : Category?
      name : String
      photoUrls : String[]
      tags : Tag[]?
      [[ pet status in the store ]]
      status : String?
   }
   
   model Category {
      id : Int?
      name : String?
   }
   
   model Tag {
      id : Int?
      name : String?
   }
   
   model Order {
      id : Int?
      petId : Int?
      quantity : Int?
      shipDate : DateTime?
      [[ Order Status ]]
      status : String?
      complete : Boolean?
   }
   
   model User {
      id : Int?
      username : String?
      firstName : String?
      lastName : String?
      email : String?
      password : String?
      phone : String?
      [[ User Status ]]
      userStatus : Int?
   }
   
   model ApiResponse {
      code : Int?
      `type` : String?
      message : String?
   }
   
   service PetService {
      @HttpOperation(method = "PUT" , url = "https://petstore.swagger.io/v2/pet")
      operation updatePet( @RequestBody body : Pet )
      @HttpOperation(method = "POST" , url = "https://petstore.swagger.io/v2/pet")
      operation addPet( @RequestBody body : Pet )
   }
   service PetFindByStatusService {
      [[ Multiple status values can be provided with comma separated strings ]]
      @HttpOperation(method = "GET" , url = "https://petstore.swagger.io/v2/pet/findByStatus")
      operation findPetsByStatus(  status : String ) : Pet[]
   }
   service PetFindByTagsService {
      [[ Muliple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing. ]]
      @HttpOperation(method = "GET" , url = "https://petstore.swagger.io/v2/pet/findByTags")
      operation findPetsByTags(  tags : String ) : Pet[]
   }
   service PetPetIdService {
      [[ Returns a single pet ]]
      @HttpOperation(method = "GET" , url = "https://petstore.swagger.io/v2/pet/{petId}")
      operation getPetById( @PathVariable(value = "petId") petId : Int ) : Pet
   }
   service PetPetIdUploadImageService {
      
   }
   service StoreInventoryService {
      [[ Returns a map of status codes to quantities ]]
      @HttpOperation(method = "GET" , url = "https://petstore.swagger.io/v2/store/inventory")
      operation getInventory(  ) : Any
   }
   service StoreOrderService {
      @HttpOperation(method = "POST" , url = "https://petstore.swagger.io/v2/store/order")
      operation placeOrder( @RequestBody body : Order ) : Order
   }
   service StoreOrderOrderIdService {
      [[ For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions ]]
      @HttpOperation(method = "GET" , url = "https://petstore.swagger.io/v2/store/order/{orderId}")
      operation getOrderById( @PathVariable(value = "orderId") orderId : Int ) : Order
      [[ For valid response try integer IDs with positive integer value. Negative or non-integer values will generate API errors ]]
      @HttpOperation(method = "DELETE" , url = "https://petstore.swagger.io/v2/store/order/{orderId}")
      operation deleteOrder( @PathVariable(value = "orderId") orderId : Int )
   }
   service UserService {
      [[ This can only be done by the logged in user. ]]
      @HttpOperation(method = "POST" , url = "https://petstore.swagger.io/v2/user")
      operation createUser( @RequestBody body : User )
   }
   service UserCreateWithArrayService {
      @HttpOperation(method = "POST" , url = "https://petstore.swagger.io/v2/user/createWithArray")
      operation createUsersWithArrayInput( @RequestBody body : User[] )
   }
   service UserCreateWithListService {
      @HttpOperation(method = "POST" , url = "https://petstore.swagger.io/v2/user/createWithList")
      operation createUsersWithListInput( @RequestBody body : User[] )
   }
   service UserLoginService {
      @HttpOperation(method = "GET" , url = "https://petstore.swagger.io/v2/user/login")
      operation loginUser(  username : String,  password : String ) : String
   }
   service UserLogoutService {
      @HttpOperation(method = "GET" , url = "https://petstore.swagger.io/v2/user/logout")
      operation logoutUser(  )
   }
   service UserUsernameService {
      @HttpOperation(method = "GET" , url = "https://petstore.swagger.io/v2/user/{username}")
      operation getUserByName( @PathVariable(value = "username") username : String ) : User
      [[ This can only be done by the logged in user. ]]
      @HttpOperation(method = "PUT" , url = "https://petstore.swagger.io/v2/user/{username}")
      operation updateUser( @PathVariable(value = "username") username : String, @RequestBody body : User )
      [[ This can only be done by the logged in user. ]]
      @HttpOperation(method = "DELETE" , url = "https://petstore.swagger.io/v2/user/{username}")
      operation deleteUser( @PathVariable(value = "username") username : String )
   }
}