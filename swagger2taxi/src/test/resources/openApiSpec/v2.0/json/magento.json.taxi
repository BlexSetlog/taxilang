namespace vyne.openApi {
   [[ Store interface ]]
   model store_data_store_interface {
      id : Int
      code : String
      [[ Store name ]]
      name : String
      website_id : Int
      store_group_id : Int
      is_active : Int
      extension_attributes : store_data_store_extension_interface?
   }
   
   [[ ExtensionInterface class for @see \Magento\Store\Api\Data\StoreInterface ]]
   type store_data_store_extension_interface
   
   [[ Group interface ]]
   model store_data_group_interface {
      id : Int
      website_id : Int
      root_category_id : Int
      default_store_id : Int
      name : String
      [[ Group code. ]]
      code : String
      extension_attributes : store_data_group_extension_interface?
   }
   
   [[ ExtensionInterface class for @see \Magento\Store\Api\Data\GroupInterface ]]
   type store_data_group_extension_interface
   
   [[ Website interface ]]
   model store_data_website_interface {
      id : Int
      code : String
      [[ Website name ]]
      name : String
      default_group_id : Int
      extension_attributes : store_data_website_extension_interface?
   }
   
   [[ ExtensionInterface class for @see \Magento\Store\Api\Data\WebsiteInterface ]]
   type store_data_website_extension_interface
   
   [[ Interface for store config ]]
   model store_data_store_config_interface {
      [[ Store id ]]
      id : Int
      [[ Store code ]]
      code : String
      [[ Website id of the store ]]
      website_id : Int
      [[ Store locale ]]
      locale : String
      [[ Base currency code ]]
      base_currency_code : String
      [[ Default display currency code ]]
      default_display_currency_code : String
      [[ Timezone of the store ]]
      timezone : String
      [[ The unit of weight ]]
      weight_unit : String
      [[ Base URL for the store ]]
      base_url : String
      [[ Base link URL for the store ]]
      base_link_url : String
      [[ Base static URL for the store ]]
      base_static_url : String
      [[ Base media URL for the store ]]
      base_media_url : String
      [[ Secure base URL for the store ]]
      secure_base_url : String
      [[ Secure base link URL for the store ]]
      secure_base_link_url : String
      [[ Secure base static URL for the store ]]
      secure_base_static_url : String
      [[ Secure base media URL for the store ]]
      secure_base_media_url : String
      extension_attributes : store_data_store_config_extension_interface?
   }
   
   [[ ExtensionInterface class for @see \Magento\Store\Api\Data\StoreConfigInterface ]]
   type store_data_store_config_extension_interface
   
   [[ Interface SearchResultInterface ]]
   model framework_search_search_result_interface {
      items : framework_search_document_interface[]
      aggregations : framework_search_aggregation_interface
      search_criteria : framework_search_search_criteria_interface
      [[ Total count. ]]
      total_count : Int
   }
   
   [[ Interface \Magento\Framework\Api\Search\DocumentInterface ]]
   model framework_search_document_interface {
      id : Int
      [[ Custom attributes values. ]]
      custom_attributes : framework_attribute_interface[]?
   }
   
   [[ Interface for custom attribute value. ]]
   model framework_attribute_interface {
      [[ Attribute code ]]
      attribute_code : String
      [[ Attribute value ]]
      value : String
   }
   
   [[ Faceted data ]]
   model framework_search_aggregation_interface {
      [[ All Document fields ]]
      buckets : framework_search_bucket_interface[]
      [[ Document field names ]]
      bucket_names : String[]
   }
   
   [[ Facet Bucket ]]
   model framework_search_bucket_interface {
      [[ Field name ]]
      name : String
      [[ Field values ]]
      values : framework_search_aggregation_value_interface[]
   }
   
   [[ Interface \Magento\Framework\Api\Search\AggregationValueInterface ]]
   model framework_search_aggregation_value_interface {
      [[ Aggregation ]]
      value : String
      [[ Metrics ]]
      metrics : String[]
   }
   
   [[ Interface SearchCriteriaInterface ]]
   model framework_search_search_criteria_interface {
      request_name : String
      [[ A list of filter groups. ]]
      filter_groups : framework_search_filter_group[]
      [[ Sort order. ]]
      sort_orders : framework_sort_order[]?
      [[ Page size. ]]
      page_size : Int?
      [[ Current page. ]]
      current_page : Int?
   }
   
   [[ Groups two or more filters together using a logical OR ]]
   model framework_search_filter_group {
      [[ A list of filters in this group ]]
      filters : framework_filter[]?
   }
   
   [[ Filter which can be used by any methods from service layer. ]]
   model framework_filter {
      [[ Field ]]
      field : String
      [[ Value ]]
      value : String
      [[ Condition type ]]
      condition_type : String?
   }
   
   [[ Data object for sort order. ]]
   model framework_sort_order {
      [[ Sorting field. ]]
      field : String
      [[ Sorting direction. ]]
      direction : String
   }
   
   [[ Currency Information interface. ]]
   model directory_data_currency_information_interface {
      [[ The base currency code for the store. ]]
      base_currency_code : String
      [[ The currency symbol of the base currency for the store. ]]
      base_currency_symbol : String
      [[ The default display currency code for the store. ]]
      default_display_currency_code : String
      [[ The currency symbol of the default display currency for the store. ]]
      default_display_currency_symbol : String
      [[ The list of allowed currency codes for the store. ]]
      available_currency_codes : String[]
      [[ The list of exchange rate information for the store. ]]
      exchange_rates : directory_data_exchange_rate_interface[]
      extension_attributes : directory_data_currency_information_extension_interface?
   }
   
   [[ Exchange Rate interface. ]]
   model directory_data_exchange_rate_interface {
      [[ The currency code associated with the exchange rate. ]]
      currency_to : String
      [[ The exchange rate for the associated currency and the store's base currency. ]]
      rate : Decimal
      extension_attributes : directory_data_exchange_rate_extension_interface?
   }
   
   [[ ExtensionInterface class for @see \Magento\Directory\Api\Data\ExchangeRateInterface ]]
   type directory_data_exchange_rate_extension_interface
   
   [[ ExtensionInterface class for @see \Magento\Directory\Api\Data\CurrencyInformationInterface ]]
   type directory_data_currency_information_extension_interface
   
   [[ Country Information interface. ]]
   model directory_data_country_information_interface {
      [[ The country id for the store. ]]
      id : String
      [[ The country 2 letter abbreviation for the store. ]]
      two_letter_abbreviation : String
      [[ The country 3 letter abbreviation for the store. ]]
      three_letter_abbreviation : String
      [[ The country full name (in store locale) for the store. ]]
      full_name_locale : String
      [[ The country full name (in English) for the store. ]]
      full_name_english : String
      [[ The available regions for the store. ]]
      available_regions : directory_data_region_information_interface[]?
      extension_attributes : directory_data_country_information_extension_interface?
   }
   
   [[ Region Information interface. ]]
   model directory_data_region_information_interface {
      [[ Region id ]]
      id : String
      [[ Region code ]]
      code : String
      [[ Region name ]]
      name : String
      extension_attributes : directory_data_region_information_extension_interface?
   }
   
   [[ ExtensionInterface class for @see \Magento\Directory\Api\Data\RegionInformationInterface ]]
   type directory_data_region_information_extension_interface
   
   [[ ExtensionInterface class for @see \Magento\Directory\Api\Data\CountryInformationInterface ]]
   type directory_data_country_information_extension_interface
   
   [[ Interface AttributeSetSearchResultsInterface ]]
   model eav_data_attribute_set_search_results_interface {
      [[ Attribute sets list. ]]
      items : eav_data_attribute_set_interface[]
      search_criteria : framework_search_criteria_interface
      [[ Total count. ]]
      total_count : Int
   }
   
   [[ Interface AttributeSetInterface ]]
   model eav_data_attribute_set_interface {
      [[ Attribute set ID ]]
      attribute_set_id : Int?
      [[ Attribute set name ]]
      attribute_set_name : String
      [[ Attribute set sort order index ]]
      sort_order : Int
      [[ Attribute set entity type id ]]
      entity_type_id : Int?
      extension_attributes : eav_data_attribute_set_extension_interface?
   }
   
   [[ ExtensionInterface class for @see \Magento\Eav\Api\Data\AttributeSetInterface ]]
   type eav_data_attribute_set_extension_interface
   
   [[ Search criteria interface. ]]
   model framework_search_criteria_interface {
      [[ A list of filter groups. ]]
      filter_groups : framework_search_filter_group[]
      [[ Sort order. ]]
      sort_orders : framework_sort_order[]?
      [[ Page size. ]]
      page_size : Int?
      [[ Current page. ]]
      current_page : Int?
   }
   
   model AnonymousType_eavAttributeSetRepositoryV1SavePutBody {
      attributeSet : eav_data_attribute_set_interface
   }
   
   model AnonymousType_eavAttributeSetManagementV1CreatePostBody {
      entityTypeCode : String
      attributeSet : eav_data_attribute_set_interface
      skeletonId : Int
   }
   
   [[ Customer group interface. ]]
   model customer_data_group_interface {
      [[ Id ]]
      id : Int?
      [[ Code ]]
      code : String
      [[ Tax class id ]]
      tax_class_id : Int
      [[ Tax class name ]]
      tax_class_name : String?
      extension_attributes : customer_data_group_extension_interface?
   }
   
   [[ ExtensionInterface class for @see \Magento\Customer\Api\Data\GroupInterface ]]
   type customer_data_group_extension_interface
   
   model AnonymousType_customerGroupRepositoryV1SavePutBody {
      group : customer_data_group_interface
   }
   
   [[ Interface for customer groups search results. ]]
   model customer_data_group_search_results_interface {
      [[ Customer groups list. ]]
      items : customer_data_group_interface[]
      search_criteria : framework_search_criteria_interface
      [[ Total count. ]]
      total_count : Int
   }
   
   model AnonymousType_customerGroupRepositoryV1SavePostBody {
      group : customer_data_group_interface
   }
   
   [[ Customer attribute metadata interface. ]]
   model customer_data_attribute_metadata_interface {
      [[ HTML for input element. ]]
      frontend_input : String
      [[ Template used for input (e.g. "date") ]]
      input_filter : String
      [[ Label of the store. ]]
      store_label : String
      [[ Validation rules. ]]
      validation_rules : customer_data_validation_rule_interface[]
      [[ Of lines of the attribute value. ]]
      multiline_count : Int
      [[ Attribute is visible on frontend. ]]
      visible : Boolean
      [[ Attribute is required. ]]
      required : Boolean
      [[ Data model for attribute. ]]
      data_model : String
      [[ Options of the attribute (key => value pairs for select) ]]
      options : customer_data_option_interface[]
      [[ Class which is used to display the attribute on frontend. ]]
      frontend_class : String
      [[ Current attribute has been defined by a user. ]]
      user_defined : Boolean
      [[ Attributes sort order. ]]
      sort_order : Int
      [[ Label which supposed to be displayed on frontend. ]]
      frontend_label : String
      [[ The note attribute for the element. ]]
      note : String
      [[ This is a system attribute. ]]
      system : Boolean
      [[ Backend type. ]]
      backend_type : String
      [[ It is used in customer grid ]]
      is_used_in_grid : Boolean?
      [[ It is visible in customer grid ]]
      is_visible_in_grid : Boolean?
      [[ It is filterable in customer grid ]]
      is_filterable_in_grid : Boolean?
      [[ It is searchable in customer grid ]]
      is_searchable_in_grid : Boolean?
      [[ Code of the attribute. ]]
      attribute_code : String
   }
   
   [[ Validation rule interface. ]]
   model customer_data_validation_rule_interface {
      [[ Validation rule name ]]
      name : String
      [[ Validation rule value ]]
      value : String
   }
   
   [[ Option interface. ]]
   model customer_data_option_interface {
      [[ Option label ]]
      label : String
      [[ Option value ]]
      value : String?
      [[ Nested options ]]
      options : customer_data_option_interface[]?
   }
   
   [[ Customer interface. ]]
   model customer_data_customer_interface {
      [[ Customer id ]]
      id : Int?
      [[ Group id ]]
      group_id : Int?
      [[ Default billing address id ]]
      default_billing : String?
      [[ Default shipping address id ]]
      default_shipping : String?
      [[ Confirmation ]]
      confirmation : String?
      [[ Created at time ]]
      created_at : String?
      [[ Updated at time ]]
      updated_at : String?
      [[ Created in area ]]
      created_in : String?
      [[ Date of birth ]]
      dob : String?
      [[ Email address ]]
      email : String
      [[ First name ]]
      firstname : String
      [[ Last name ]]
      lastname : String
      [[ Middle name ]]
      middlename : String?
      [[ Prefix ]]
      prefix : String?
      [[ Suffix ]]
      suffix : String?
      [[ Gender ]]
      gender : Int?
      [[ Store id ]]
      store_id : Int?
      [[ Tax Vat ]]
      taxvat : String?
      [[ Website id ]]
      website_id : Int?
      [[ Customer addresses. ]]
      addresses : customer_data_address_interface[]?
      [[ Disable auto group change flag. ]]
      disable_auto_group_change : Int?
      extension_attributes : customer_data_customer_extension_interface?
      [[ Custom attributes values. ]]
      custom_attributes : framework_attribute_interface[]?
   }
   
   [[ Customer address interface. ]]
   model customer_data_address_interface {
      [[ ID ]]
      id : Int?
      [[ Customer ID ]]
      customer_id : Int?
      region : customer_data_region_interface?
      [[ Region ID ]]
      region_id : Int?
      [[ Country code in ISO_3166-2 format ]]
      country_id : String?
      [[ Street ]]
      street : String[]?
      [[ Company ]]
      company : String?
      [[ Telephone number ]]
      telephone : String?
      [[ Fax number ]]
      fax : String?
      [[ Postcode ]]
      postcode : String?
      [[ City name ]]
      city : String?
      [[ First name ]]
      firstname : String?
      [[ Last name ]]
      lastname : String?
      [[ Middle name ]]
      middlename : String?
      [[ Prefix ]]
      prefix : String?
      [[ Suffix ]]
      suffix : String?
      [[ Vat id ]]
      vat_id : String?
      [[ If this address is default shipping address. ]]
      default_shipping : Boolean?
      [[ If this address is default billing address ]]
      default_billing : Boolean?
      extension_attributes : customer_data_address_extension_interface?
      [[ Custom attributes values. ]]
      custom_attributes : framework_attribute_interface[]?
   }
   
   [[ Customer address region interface. ]]
   model customer_data_region_interface {
      [[ Region code ]]
      region_code : String
      [[ Region ]]
      region : String
      [[ Region id ]]
      region_id : Int
      extension_attributes : customer_data_region_extension_interface?
   }
   
   [[ ExtensionInterface class for @see \Magento\Customer\Api\Data\RegionInterface ]]
   type customer_data_region_extension_interface
   
   [[ ExtensionInterface class for @see \Magento\Customer\Api\Data\AddressInterface ]]
   type customer_data_address_extension_interface
   
   [[ ExtensionInterface class for @see \Magento\Customer\Api\Data\CustomerInterface ]]
   model customer_data_customer_extension_interface {
      assistance_allowed : Int?
      is_subscribed : Boolean?
      amazon_id : String?
      vertex_customer_code : String?
      vertex_customer_country : String?
   }
   
   model AnonymousType_customerCustomerRepositoryV1SavePutBody {
      customer : customer_data_customer_interface
      passwordHash : String?
   }
   
   [[ Interface for customer search results. ]]
   model customer_data_customer_search_results_interface {
      [[ Customers list. ]]
      items : customer_data_customer_interface[]
      search_criteria : framework_search_criteria_interface
      [[ Total count. ]]
      total_count : Int
   }
   
   model AnonymousType_customerAccountManagementV1CreateAccountPostBody {
      customer : customer_data_customer_interface
      password : String?
      redirectUrl : String?
   }
   
   model AnonymousType_customerAccountManagementV1ActivateByIdPutBody {
      confirmationKey : String
   }
   
   model AnonymousType_customerAccountManagementV1ActivatePutBody {
      confirmationKey : String
   }
   
   model AnonymousType_customerAccountManagementV1ChangePasswordByIdPutBody {
      currentPassword : String
      newPassword : String
   }
   
   model AnonymousType_customerAccountManagementV1InitiatePasswordResetPutBody {
      email : String
      template : String
      websiteId : Int?
   }
   
   model AnonymousType_customerAccountManagementV1ResetPasswordPostBody {
      [[ If empty value given then the customer will be matched by the RP token. ]]
      email : String
      resetToken : String
      newPassword : String
   }
   
   model AnonymousType_customerAccountManagementV1ResendConfirmationPostBody {
      email : String
      websiteId : Int
      redirectUrl : String?
   }
   
   model AnonymousType_customerAccountManagementV1ValidatePutBody {
      customer : customer_data_customer_interface
   }
   
   [[ Validation results interface. ]]
   model customer_data_validation_results_interface {
      [[ If the provided data is valid. ]]
      valid : Boolean
      [[ Error messages as array in case of validation failure, else return empty array. ]]
      messages : String[]
   }
   
   model AnonymousType_customerAccountManagementV1IsEmailAvailablePostBody {
      customerEmail : String
      [[ If not set, will use the current websiteId ]]
      websiteId : Int?
   }
   
   [[ CMS page interface. ]]
   model cms_data_page_interface {
      [[ ID ]]
      id : Int?
      [[ Identifier ]]
      identifier : String
      [[ Title ]]
      title : String?
      [[ Page layout ]]
      page_layout : String?
      [[ Meta title ]]
      meta_title : String?
      [[ Meta keywords ]]
      meta_keywords : String?
      [[ Meta description ]]
      meta_description : String?
      [[ Content heading ]]
      content_heading : String?
      [[ Content ]]
      content : String?
      [[ Creation time ]]
      creation_time : String?
      [[ Update time ]]
      update_time : String?
      [[ Sort order ]]
      sort_order : String?
      [[ Layout update xml ]]
      layout_update_xml : String?
      [[ Custom theme ]]
      custom_theme : String?
      [[ Custom root template ]]
      custom_root_template : String?
      [[ Custom layout update xml ]]
      custom_layout_update_xml : String?
      [[ Custom theme from ]]
      custom_theme_from : String?
      [[ Custom theme to ]]
      custom_theme_to : String?
      [[ Active ]]
      active : Boolean?
   }
   
   [[ Interface for cms page search results. ]]
   model cms_data_page_search_results_interface {
      [[ Pages list. ]]
      items : cms_data_page_interface[]
      search_criteria : framework_search_criteria_interface
      [[ Total count. ]]
      total_count : Int
   }
   
   model AnonymousType_cmsPageRepositoryV1SavePostBody {
      page : cms_data_page_interface
   }
   
   model AnonymousType_cmsPageRepositoryV1SavePutBody {
      page : cms_data_page_interface
   }
   
   [[ CMS block interface. ]]
   model cms_data_block_interface {
      [[ ID ]]
      id : Int?
      [[ Identifier ]]
      identifier : String
      [[ Title ]]
      title : String?
      [[ Content ]]
      content : String?
      [[ Creation time ]]
      creation_time : String?
      [[ Update time ]]
      update_time : String?
      [[ Active ]]
      active : Boolean?
   }
   
   [[ Interface for cms block search results. ]]
   model cms_data_block_search_results_interface {
      [[ Blocks list. ]]
      items : cms_data_block_interface[]
      search_criteria : framework_search_criteria_interface
      [[ Total count. ]]
      total_count : Int
   }
   
   model AnonymousType_cmsBlockRepositoryV1SavePostBody {
      block : cms_data_block_interface
   }
   
   model AnonymousType_cmsBlockRepositoryV1SavePutBody {
      block : cms_data_block_interface
   }
   
   model catalog_data_product_search_results_interface {
      [[ Attributes list. ]]
      items : catalog_data_product_interface[]
      search_criteria : framework_search_criteria_interface
      [[ Total count. ]]
      total_count : Int
   }
   
   model catalog_data_product_interface {
      [[ Id ]]
      id : Int?
      [[ Sku ]]
      sku : String
      [[ Name ]]
      name : String?
      [[ Attribute set id ]]
      attribute_set_id : Int?
      [[ Price ]]
      price : Decimal?
      [[ Status ]]
      status : Int?
      [[ Visibility ]]
      visibility : Int?
      [[ Type id ]]
      type_id : String?
      [[ Created date ]]
      created_at : String?
      [[ Updated date ]]
      updated_at : String?
      [[ Weight ]]
      weight : Decimal?
      extension_attributes : catalog_data_product_extension_interface?
      [[ Product links info ]]
      product_links : catalog_data_product_link_interface[]?
      [[ List of product options ]]
      options : catalog_data_product_custom_option_interface[]?
      [[ Media gallery entries ]]
      media_gallery_entries : catalog_data_product_attribute_media_gallery_entry_interface[]?
      [[ List of product tier prices ]]
      tier_prices : catalog_data_product_tier_price_interface[]?
      [[ Custom attributes values. ]]
      custom_attributes : framework_attribute_interface[]?
   }
   
   [[ ExtensionInterface class for @see \Magento\Catalog\Api\Data\ProductInterface ]]
   model catalog_data_product_extension_interface {
      website_ids : Int[]?
      category_links : catalog_data_category_link_interface[]?
      stock_item : catalog_inventory_data_stock_item_interface?
      bundle_product_options : bundle_data_option_interface[]?
      downloadable_product_links : downloadable_data_link_interface[]?
      downloadable_product_samples : downloadable_data_sample_interface[]?
      configurable_product_options : configurable_product_data_option_interface[]?
      configurable_product_links : Int[]?
      vertex_commodity_code : vertex_tax_data_commodity_code_interface?
   }
   
   model catalog_data_category_link_interface {
      position : Int?
      [[ Category id ]]
      category_id : String
      extension_attributes : catalog_data_category_link_extension_interface?
   }
   
   [[ ExtensionInterface class for @see \Magento\Catalog\Api\Data\CategoryLinkInterface ]]
   type catalog_data_category_link_extension_interface
   
   [[ Interface StockItem ]]
   model catalog_inventory_data_stock_item_interface {
      item_id : Int?
      product_id : Int?
      [[ Stock identifier ]]
      stock_id : Int?
      qty : Decimal
      [[ Stock Availability ]]
      is_in_stock : Boolean
      is_qty_decimal : Boolean
      show_default_notification_message : Boolean
      use_config_min_qty : Boolean
      [[ Minimal quantity available for item status in stock ]]
      min_qty : Decimal
      use_config_min_sale_qty : Int
      [[ Minimum Qty Allowed in Shopping Cart or NULL when there is no limitation ]]
      min_sale_qty : Decimal
      use_config_max_sale_qty : Boolean
      [[ Maximum Qty Allowed in Shopping Cart data wrapper ]]
      max_sale_qty : Decimal
      use_config_backorders : Boolean
      [[ Backorders status ]]
      backorders : Int
      use_config_notify_stock_qty : Boolean
      [[ Notify for Quantity Below data wrapper ]]
      notify_stock_qty : Decimal
      use_config_qty_increments : Boolean
      [[ Quantity Increments data wrapper ]]
      qty_increments : Decimal
      use_config_enable_qty_inc : Boolean
      [[ Whether Quantity Increments is enabled ]]
      enable_qty_increments : Boolean
      use_config_manage_stock : Boolean
      [[ Can Manage Stock ]]
      manage_stock : Boolean
      low_stock_date : String
      is_decimal_divided : Boolean
      stock_status_changed_auto : Int
      extension_attributes : catalog_inventory_data_stock_item_extension_interface?
   }
   
   [[ ExtensionInterface class for @see \Magento\CatalogInventory\Api\Data\StockItemInterface ]]
   type catalog_inventory_data_stock_item_extension_interface
   
   [[ Interface OptionInterface ]]
   model bundle_data_option_interface {
      [[ Option id ]]
      option_id : Int?
      [[ Option title ]]
      title : String?
      [[ Is required option ]]
      required : Boolean?
      [[ Input type ]]
      `type` : String?
      [[ Option position ]]
      position : Int?
      [[ Product sku ]]
      sku : String?
      [[ Product links ]]
      product_links : bundle_data_link_interface[]?
      extension_attributes : bundle_data_option_extension_interface?
   }
   
   [[ Interface LinkInterface ]]
   model bundle_data_link_interface {
      [[ The identifier ]]
      id : String?
      [[ Linked product sku ]]
      sku : String?
      [[ Option id ]]
      option_id : Int?
      [[ Qty ]]
      qty : Decimal?
      [[ Position ]]
      position : Int?
      [[ Is default ]]
      is_default : Boolean
      [[ Price ]]
      price : Decimal
      [[ Price type ]]
      price_type : Int
      [[ Whether quantity could be changed ]]
      can_change_quantity : Int?
      extension_attributes : bundle_data_link_extension_interface?
   }
   
   [[ ExtensionInterface class for @see \Magento\Bundle\Api\Data\LinkInterface ]]
   type bundle_data_link_extension_interface
   
   [[ ExtensionInterface class for @see \Magento\Bundle\Api\Data\OptionInterface ]]
   type bundle_data_option_extension_interface
   
   model downloadable_data_link_interface {
      [[ Sample(or link) id ]]
      id : Int?
      title : String?
      sort_order : Int
      [[ Shareable status ]]
      is_shareable : Int
      [[ Price ]]
      price : Decimal
      [[ Of downloads per user ]]
      number_of_downloads : Int?
      link_type : String
      [[ relative file path ]]
      link_file : String?
      link_file_content : downloadable_data_file_content_interface?
      [[ Link url or null when type is 'file' ]]
      link_url : String?
      sample_type : String
      [[ relative file path ]]
      sample_file : String?
      sample_file_content : downloadable_data_file_content_interface?
      [[ file URL ]]
      sample_url : String?
      extension_attributes : downloadable_data_link_extension_interface?
   }
   
   model downloadable_data_file_content_interface {
      [[ Data (base64 encoded content) ]]
      file_data : String
      [[ File name ]]
      name : String
      extension_attributes : downloadable_data_file_content_extension_interface?
   }
   
   [[ ExtensionInterface class for @see \Magento\Downloadable\Api\Data\File\ContentInterface ]]
   type downloadable_data_file_content_extension_interface
   
   [[ ExtensionInterface class for @see \Magento\Downloadable\Api\Data\LinkInterface ]]
   type downloadable_data_link_extension_interface
   
   model downloadable_data_sample_interface {
      [[ Sample(or link) id ]]
      id : Int?
      [[ Title ]]
      title : String
      [[ Order index for sample ]]
      sort_order : Int
      sample_type : String
      [[ relative file path ]]
      sample_file : String?
      sample_file_content : downloadable_data_file_content_interface?
      [[ file URL ]]
      sample_url : String?
      extension_attributes : downloadable_data_sample_extension_interface?
   }
   
   [[ ExtensionInterface class for @see \Magento\Downloadable\Api\Data\SampleInterface ]]
   type downloadable_data_sample_extension_interface
   
   [[ Interface OptionInterface ]]
   model configurable_product_data_option_interface {
      id : Int?
      attribute_id : String?
      label : String?
      position : Int?
      is_use_default : Boolean?
      values : configurable_product_data_option_value_interface[]?
      extension_attributes : configurable_product_data_option_extension_interface?
      product_id : Int?
   }
   
   [[ Interface OptionValueInterface ]]
   model configurable_product_data_option_value_interface {
      value_index : Int
      extension_attributes : configurable_product_data_option_value_extension_interface?
   }
   
   [[ ExtensionInterface class for @see \Magento\ConfigurableProduct\Api\Data\OptionValueInterface ]]
   type configurable_product_data_option_value_extension_interface
   
   [[ ExtensionInterface class for @see \Magento\ConfigurableProduct\Api\Data\OptionInterface ]]
   type configurable_product_data_option_extension_interface
   
   [[ Data model representing a Commmodity Code ]]
   model vertex_tax_data_commodity_code_interface {
      [[ Commodity code ]]
      code : String?
      [[ Commodity code type ]]
      `type` : String?
   }
   
   model catalog_data_product_link_interface {
      [[ SKU ]]
      sku : String
      [[ Link type ]]
      link_type : String
      [[ Linked product sku ]]
      linked_product_sku : String
      [[ Linked product type (simple, virtual, etc) ]]
      linked_product_type : String
      [[ Linked item position ]]
      position : Int
      extension_attributes : catalog_data_product_link_extension_interface?
   }
   
   [[ ExtensionInterface class for @see \Magento\Catalog\Api\Data\ProductLinkInterface ]]
   model catalog_data_product_link_extension_interface {
      qty : Decimal?
   }
   
   model catalog_data_product_custom_option_interface {
      [[ Product SKU ]]
      product_sku : String
      [[ Option id ]]
      option_id : Int?
      [[ Option title ]]
      title : String
      [[ Option type ]]
      `type` : String
      [[ Sort order ]]
      sort_order : Int
      [[ Is require ]]
      is_require : Boolean
      [[ Price ]]
      price : Decimal?
      [[ Price type ]]
      price_type : String?
      [[ Sku ]]
      sku : String?
      file_extension : String?
      max_characters : Int?
      image_size_x : Int?
      image_size_y : Int?
      values : catalog_data_product_custom_option_values_interface[]?
      extension_attributes : catalog_data_product_custom_option_extension_interface?
   }
   
   model catalog_data_product_custom_option_values_interface {
      [[ Option title ]]
      title : String
      [[ Sort order ]]
      sort_order : Int
      [[ Price ]]
      price : Decimal
      [[ Price type ]]
      price_type : String
      [[ Sku ]]
      sku : String?
      [[ Option type id ]]
      option_type_id : Int?
   }
   
   [[ ExtensionInterface class for @see \Magento\Catalog\Api\Data\ProductCustomOptionInterface ]]
   model catalog_data_product_custom_option_extension_interface {
      vertex_flex_field : String?
   }
   
   model catalog_data_product_attribute_media_gallery_entry_interface {
      [[ Gallery entry ID ]]
      id : Int?
      [[ Media type ]]
      media_type : String
      [[ Gallery entry alternative text ]]
      label : String
      [[ Gallery entry position (sort order) ]]
      position : Int
      [[ If gallery entry is hidden from product page ]]
      disabled : Boolean
      [[ Gallery entry image types (thumbnail, image, small_image etc) ]]
      types : String[]
      [[ File path ]]
      file : String?
      content : framework_data_image_content_interface?
      extension_attributes : catalog_data_product_attribute_media_gallery_entry_extension_interface?
   }
   
   [[ Image Content data interface ]]
   model framework_data_image_content_interface {
      [[ Media data (base64 encoded content) ]]
      base64_encoded_data : String
      [[ MIME type ]]
      `type` : String
      [[ Image name ]]
      name : String
   }
   
   [[ ExtensionInterface class for @see \Magento\Catalog\Api\Data\ProductAttributeMediaGalleryEntryInterface ]]
   model catalog_data_product_attribute_media_gallery_entry_extension_interface {
      video_content : framework_data_video_content_interface?
   }
   
   [[ Video Content data interface ]]
   model framework_data_video_content_interface {
      [[ MIME type ]]
      media_type : String
      [[ Provider ]]
      video_provider : String
      [[ Video URL ]]
      video_url : String
      [[ Title ]]
      video_title : String
      [[ Video Description ]]
      video_description : String
      [[ Metadata ]]
      video_metadata : String
   }
   
   model catalog_data_product_tier_price_interface {
      [[ Customer group id ]]
      customer_group_id : Int
      [[ Tier qty ]]
      qty : Decimal
      [[ Price value ]]
      value : Decimal
      extension_attributes : catalog_data_product_tier_price_extension_interface?
   }
   
   [[ ExtensionInterface class for @see \Magento\Catalog\Api\Data\ProductTierPriceInterface ]]
   model catalog_data_product_tier_price_extension_interface {
      percentage_value : Decimal?
      website_id : Int?
   }
   
   model AnonymousType_catalogProductRepositoryV1SavePostBody {
      product : catalog_data_product_interface
      saveOptions : Boolean?
   }
   
   model AnonymousType_catalogProductRepositoryV1SavePutBody {
      product : catalog_data_product_interface
      saveOptions : Boolean?
   }
   
   model catalog_data_product_attribute_type_interface {
      [[ Value ]]
      value : String
      [[ Type label ]]
      label : String
      extension_attributes : catalog_data_product_attribute_type_extension_interface?
   }
   
   [[ ExtensionInterface class for @see \Magento\Catalog\Api\Data\ProductAttributeTypeInterface ]]
   type catalog_data_product_attribute_type_extension_interface
   
   model catalog_data_product_attribute_interface {
      extension_attributes : eav_data_attribute_extension_interface?
      [[ WYSIWYG flag ]]
      is_wysiwyg_enabled : Boolean?
      [[ The HTML tags are allowed on the frontend ]]
      is_html_allowed_on_front : Boolean?
      [[ It is used for sorting in product listing ]]
      used_for_sort_by : Boolean?
      [[ It used in layered navigation ]]
      is_filterable : Boolean?
      [[ It is used in search results layered navigation ]]
      is_filterable_in_search : Boolean?
      [[ It is used in catalog product grid ]]
      is_used_in_grid : Boolean?
      [[ It is visible in catalog product grid ]]
      is_visible_in_grid : Boolean?
      [[ It is filterable in catalog product grid ]]
      is_filterable_in_grid : Boolean?
      [[ Position ]]
      position : Int?
      [[ Apply to value for the element ]]
      apply_to : String[]?
      [[ The attribute can be used in Quick Search ]]
      is_searchable : String?
      [[ The attribute can be used in Advanced Search ]]
      is_visible_in_advanced_search : String?
      [[ The attribute can be compared on the frontend ]]
      is_comparable : String?
      [[ The attribute can be used for promo rules ]]
      is_used_for_promo_rules : String?
      [[ The attribute is visible on the frontend ]]
      is_visible_on_front : String?
      [[ The attribute can be used in product listing ]]
      used_in_product_listing : String?
      [[ Attribute is visible on frontend. ]]
      is_visible : Boolean?
      [[ Attribute scope ]]
      scope : String?
      [[ Id of the attribute. ]]
      attribute_id : Int?
      [[ Code of the attribute. ]]
      attribute_code : String
      [[ HTML for input element. ]]
      frontend_input : String
      [[ Entity type id ]]
      entity_type_id : String
      [[ Attribute is required. ]]
      is_required : Boolean
      [[ Options of the attribute (key => value pairs for select) ]]
      options : eav_data_attribute_option_interface[]?
      [[ Current attribute has been defined by a user. ]]
      is_user_defined : Boolean?
      [[ Frontend label for default store ]]
      default_frontend_label : String?
      [[ Frontend label for each store ]]
      frontend_labels : eav_data_attribute_frontend_label_interface[]
      [[ The note attribute for the element. ]]
      note : String?
      [[ Backend type. ]]
      backend_type : String?
      [[ Backend model ]]
      backend_model : String?
      [[ Source model ]]
      source_model : String?
      [[ Default value for the element. ]]
      default_value : String?
      [[ This is a unique attribute ]]
      is_unique : String?
      [[ Frontend class of attribute ]]
      frontend_class : String?
      [[ Validation rules. ]]
      validation_rules : eav_data_attribute_validation_rule_interface[]?
      [[ Custom attributes values. ]]
      custom_attributes : framework_attribute_interface[]?
   }
   
   [[ ExtensionInterface class for @see \Magento\Eav\Api\Data\AttributeInterface ]]
   type eav_data_attribute_extension_interface
   
   [[ Created from: ]]
   model eav_data_attribute_option_interface {
      [[ Option label ]]
      label : String
      [[ Option value ]]
      value : String
      [[ Option order ]]
      sort_order : Int?
      [[ Default ]]
      is_default : Boolean?
      [[ Option label for store scopes ]]
      store_labels : eav_data_attribute_option_label_interface[]?
   }
   
   [[ Interface AttributeOptionLabelInterface ]]
   model eav_data_attribute_option_label_interface {
      [[ Store id ]]
      store_id : Int?
      [[ Option label ]]
      label : String?
   }
   
   [[ Interface AttributeFrontendLabelInterface ]]
   model eav_data_attribute_frontend_label_interface {
      [[ Store id ]]
      store_id : Int?
      [[ Option label ]]
      label : String?
   }
   
   [[ Interface AttributeValidationRuleInterface ]]
   model eav_data_attribute_validation_rule_interface {
      [[ Object key ]]
      key : String
      [[ Object value ]]
      value : String
   }
   
   model AnonymousType_catalogProductAttributeRepositoryV1SavePutBody {
      attribute : catalog_data_product_attribute_interface
   }
   
   model catalog_data_product_attribute_search_results_interface {
      [[ Attributes list. ]]
      items : catalog_data_product_attribute_interface[]
      search_criteria : framework_search_criteria_interface
      [[ Total count. ]]
      total_count : Int
   }
   
   model AnonymousType_catalogProductAttributeRepositoryV1SavePostBody {
      attribute : catalog_data_product_attribute_interface
   }
   
   model catalog_data_category_attribute_interface {
      [[ WYSIWYG flag ]]
      is_wysiwyg_enabled : Boolean?
      [[ The HTML tags are allowed on the frontend ]]
      is_html_allowed_on_front : Boolean?
      [[ It is used for sorting in product listing ]]
      used_for_sort_by : Boolean?
      [[ It used in layered navigation ]]
      is_filterable : Boolean?
      [[ It is used in search results layered navigation ]]
      is_filterable_in_search : Boolean?
      [[ It is used in catalog product grid ]]
      is_used_in_grid : Boolean?
      [[ It is visible in catalog product grid ]]
      is_visible_in_grid : Boolean?
      [[ It is filterable in catalog product grid ]]
      is_filterable_in_grid : Boolean?
      [[ Position ]]
      position : Int?
      [[ Apply to value for the element ]]
      apply_to : String[]?
      [[ The attribute can be used in Quick Search ]]
      is_searchable : String?
      [[ The attribute can be used in Advanced Search ]]
      is_visible_in_advanced_search : String?
      [[ The attribute can be compared on the frontend ]]
      is_comparable : String?
      [[ The attribute can be used for promo rules ]]
      is_used_for_promo_rules : String?
      [[ The attribute is visible on the frontend ]]
      is_visible_on_front : String?
      [[ The attribute can be used in product listing ]]
      used_in_product_listing : String?
      [[ Attribute is visible on frontend. ]]
      is_visible : Boolean?
      [[ Attribute scope ]]
      scope : String?
      extension_attributes : catalog_data_eav_attribute_extension_interface?
      [[ Id of the attribute. ]]
      attribute_id : Int?
      [[ Code of the attribute. ]]
      attribute_code : String
      [[ HTML for input element. ]]
      frontend_input : String
      [[ Entity type id ]]
      entity_type_id : String
      [[ Attribute is required. ]]
      is_required : Boolean
      [[ Options of the attribute (key => value pairs for select) ]]
      options : eav_data_attribute_option_interface[]?
      [[ Current attribute has been defined by a user. ]]
      is_user_defined : Boolean?
      [[ Frontend label for default store ]]
      default_frontend_label : String?
      [[ Frontend label for each store ]]
      frontend_labels : eav_data_attribute_frontend_label_interface[]
      [[ The note attribute for the element. ]]
      note : String?
      [[ Backend type. ]]
      backend_type : String?
      [[ Backend model ]]
      backend_model : String?
      [[ Source model ]]
      source_model : String?
      [[ Default value for the element. ]]
      default_value : String?
      [[ This is a unique attribute ]]
      is_unique : String?
      [[ Frontend class of attribute ]]
      frontend_class : String?
      [[ Validation rules. ]]
      validation_rules : eav_data_attribute_validation_rule_interface[]?
      [[ Custom attributes values. ]]
      custom_attributes : framework_attribute_interface[]?
   }
   
   [[ ExtensionInterface class for @see \Magento\Catalog\Api\Data\EavAttributeInterface ]]
   type catalog_data_eav_attribute_extension_interface
   
   model catalog_data_category_attribute_search_results_interface {
      [[ Attributes list. ]]
      items : catalog_data_category_attribute_interface[]
      search_criteria : framework_search_criteria_interface
      [[ Total count. ]]
      total_count : Int
   }
   
   [[ Product type details ]]
   model catalog_data_product_type_interface {
      [[ Product type code ]]
      name : String
      [[ Product type label ]]
      label : String
      extension_attributes : catalog_data_product_type_extension_interface?
   }
   
   [[ ExtensionInterface class for @see \Magento\Catalog\Api\Data\ProductTypeInterface ]]
   type catalog_data_product_type_extension_interface
   
   model AnonymousType_catalogAttributeSetRepositoryV1SavePutBody {
      attributeSet : eav_data_attribute_set_interface
   }
   
   model AnonymousType_catalogAttributeSetManagementV1CreatePostBody {
      attributeSet : eav_data_attribute_set_interface
      skeletonId : Int
   }
   
   model AnonymousType_catalogProductAttributeManagementV1AssignPostBody {
      attributeSetId : Int
      attributeGroupId : Int
      attributeCode : String
      sortOrder : Int
   }
   
   [[ Interface AttributeGroupSearchResultsInterface ]]
   model eav_data_attribute_group_search_results_interface {
      [[ Attribute sets list. ]]
      items : eav_data_attribute_group_interface[]
      search_criteria : framework_search_criteria_interface
      [[ Total count. ]]
      total_count : Int
   }
   
   [[ Interface AttributeGroupInterface ]]
   model eav_data_attribute_group_interface {
      [[ Id ]]
      attribute_group_id : String?
      [[ Name ]]
      attribute_group_name : String?
      [[ Attribute set id ]]
      attribute_set_id : Int?
      extension_attributes : eav_data_attribute_group_extension_interface?
   }
   
   [[ ExtensionInterface class for @see \Magento\Eav\Api\Data\AttributeGroupInterface ]]
   model eav_data_attribute_group_extension_interface {
      attribute_group_code : String?
      sort_order : String?
   }
   
   model AnonymousType_catalogProductAttributeGroupRepositoryV1SavePostBody {
      group : eav_data_attribute_group_interface
   }
   
   model AnonymousType_catalogProductAttributeGroupRepositoryV1SavePutBody {
      group : eav_data_attribute_group_interface
   }
   
   model AnonymousType_catalogProductAttributeOptionManagementV1AddPostBody {
      option : eav_data_attribute_option_interface
   }
   
   model AnonymousType_catalogProductAttributeOptionUpdateV1UpdatePutBody {
      option : eav_data_attribute_option_interface
   }
   
   model AnonymousType_catalogProductAttributeMediaGalleryManagementV1UpdatePutBody {
      entry : catalog_data_product_attribute_media_gallery_entry_interface
   }
   
   model AnonymousType_catalogProductAttributeMediaGalleryManagementV1CreatePostBody {
      entry : catalog_data_product_attribute_media_gallery_entry_interface
   }
   
   model AnonymousType_catalogTierPriceStorageV1GetPostBody {
      skus : String[]
   }
   
   [[ Tier price interface. ]]
   model catalog_data_tier_price_interface {
      [[ Tier price. ]]
      price : Decimal
      [[ Tier price type. ]]
      price_type : String
      [[ Website id. ]]
      website_id : Int
      [[ SKU. ]]
      sku : String
      [[ Customer group. ]]
      customer_group : String
      [[ Quantity. ]]
      quantity : Decimal
      extension_attributes : catalog_data_tier_price_extension_interface?
   }
   
   [[ ExtensionInterface class for @see \Magento\Catalog\Api\Data\TierPriceInterface ]]
   type catalog_data_tier_price_extension_interface
   
   model AnonymousType_catalogTierPriceStorageV1ReplacePutBody {
      prices : catalog_data_tier_price_interface[]
   }
   
   [[ Interface returned in case of incorrect price passed to efficient price API. ]]
   model catalog_data_price_update_result_interface {
      [[ Error message, that contains description of error occurred during price update. ]]
      message : String
      [[ Parameters, that could be displayed in error message placeholders. ]]
      parameters : String[]
      extension_attributes : catalog_data_price_update_result_extension_interface?
   }
   
   [[ ExtensionInterface class for @see \Magento\Catalog\Api\Data\PriceUpdateResultInterface ]]
   type catalog_data_price_update_result_extension_interface
   
   model AnonymousType_catalogTierPriceStorageV1UpdatePostBody {
      prices : catalog_data_tier_price_interface[]
   }
   
   model AnonymousType_catalogTierPriceStorageV1DeletePostBody {
      prices : catalog_data_tier_price_interface[]
   }
   
   model AnonymousType_catalogBasePriceStorageV1GetPostBody {
      skus : String[]
   }
   
   [[ Price interface. ]]
   model catalog_data_base_price_interface {
      [[ Price. ]]
      price : Decimal
      [[ Store id. ]]
      store_id : Int
      [[ SKU. ]]
      sku : String
      extension_attributes : catalog_data_base_price_extension_interface?
   }
   
   [[ ExtensionInterface class for @see \Magento\Catalog\Api\Data\BasePriceInterface ]]
   type catalog_data_base_price_extension_interface
   
   model AnonymousType_catalogBasePriceStorageV1UpdatePostBody {
      prices : catalog_data_base_price_interface[]
   }
   
   model AnonymousType_catalogCostStorageV1GetPostBody {
      skus : String[]
   }
   
   [[ Cost interface. ]]
   model catalog_data_cost_interface {
      [[ Cost value. ]]
      cost : Decimal
      [[ Store id. ]]
      store_id : Int
      [[ SKU. ]]
      sku : String
      extension_attributes : catalog_data_cost_extension_interface?
   }
   
   [[ ExtensionInterface class for @see \Magento\Catalog\Api\Data\CostInterface ]]
   type catalog_data_cost_extension_interface
   
   model AnonymousType_catalogCostStorageV1UpdatePostBody {
      prices : catalog_data_cost_interface[]
   }
   
   model AnonymousType_catalogCostStorageV1DeletePostBody {
      skus : String[]
   }
   
   model AnonymousType_catalogSpecialPriceStorageV1GetPostBody {
      skus : String[]
   }
   
   [[ Product Special Price Interface is used to encapsulate data that can be processed by efficient price API. ]]
   model catalog_data_special_price_interface {
      [[ Product special price value. ]]
      price : Decimal
      [[ ID of store, that contains special price value. ]]
      store_id : Int
      [[ SKU of product, that contains special price value. ]]
      sku : String
      [[ Start date for special price in Y-m-d H:i:s format. ]]
      price_from : String
      [[ End date for special price in Y-m-d H:i:s format. ]]
      price_to : String
      extension_attributes : catalog_data_special_price_extension_interface?
   }
   
   [[ ExtensionInterface class for @see \Magento\Catalog\Api\Data\SpecialPriceInterface ]]
   type catalog_data_special_price_extension_interface
   
   model AnonymousType_catalogSpecialPriceStorageV1UpdatePostBody {
      prices : catalog_data_special_price_interface[]
   }
   
   model AnonymousType_catalogSpecialPriceStorageV1DeletePostBody {
      prices : catalog_data_special_price_interface[]
   }
   
   [[ Category data interface. ]]
   model catalog_data_category_interface {
      [[ Category id. ]]
      id : Int?
      [[ Parent category ID ]]
      parent_id : Int?
      [[ Category name ]]
      name : String?
      [[ Whether category is active ]]
      is_active : Boolean?
      [[ Category position ]]
      position : Int?
      [[ Category level ]]
      level : Int?
      [[ Children ids comma separated. ]]
      children : String?
      [[ Category creation date and time. ]]
      created_at : String?
      [[ Category last update date and time. ]]
      updated_at : String?
      [[ Category full path. ]]
      path : String?
      [[ Available sort by for category. ]]
      available_sort_by : String[]?
      [[ Category is included in menu. ]]
      include_in_menu : Boolean?
      extension_attributes : catalog_data_category_extension_interface?
      [[ Custom attributes values. ]]
      custom_attributes : framework_attribute_interface[]?
   }
   
   [[ ExtensionInterface class for @see \Magento\Catalog\Api\Data\CategoryInterface ]]
   type catalog_data_category_extension_interface
   
   model catalog_data_category_tree_interface {
      id : Int?
      [[ Parent category ID ]]
      parent_id : Int
      [[ Category name ]]
      name : String
      [[ Whether category is active ]]
      is_active : Boolean
      [[ Category position ]]
      position : Int
      [[ Category level ]]
      level : Int
      [[ Product count ]]
      product_count : Int
      children_data : catalog_data_category_tree_interface[]
   }
   
   model AnonymousType_catalogCategoryRepositoryV1SavePostBody {
      category : catalog_data_category_interface
   }
   
   model AnonymousType_catalogCategoryRepositoryV1SavePutBody {
      category : catalog_data_category_interface
   }
   
   model AnonymousType_catalogCategoryManagementV1MovePutBody {
      parentId : Int
      afterId : Int?
   }
   
   model catalog_data_category_search_results_interface {
      [[ Categories ]]
      items : catalog_data_category_interface[]
      search_criteria : framework_search_criteria_interface
      [[ Total count. ]]
      total_count : Int
   }
   
   model catalog_data_product_custom_option_type_interface {
      [[ Option type label ]]
      label : String
      [[ Option type code ]]
      code : String
      [[ Option type group ]]
      group : String
      extension_attributes : catalog_data_product_custom_option_type_extension_interface?
   }
   
   [[ ExtensionInterface class for @see \Magento\Catalog\Api\Data\ProductCustomOptionTypeInterface ]]
   type catalog_data_product_custom_option_type_extension_interface
   
   model AnonymousType_catalogProductCustomOptionRepositoryV1SavePostBody {
      option : catalog_data_product_custom_option_interface
   }
   
   model AnonymousType_catalogProductCustomOptionRepositoryV1SavePutBody {
      option : catalog_data_product_custom_option_interface
   }
   
   model catalog_data_product_link_type_interface {
      [[ Link type code ]]
      code : Int
      [[ Link type name ]]
      name : String
      extension_attributes : catalog_data_product_link_type_extension_interface?
   }
   
   [[ ExtensionInterface class for @see \Magento\Catalog\Api\Data\ProductLinkTypeInterface ]]
   type catalog_data_product_link_type_extension_interface
   
   model catalog_data_product_link_attribute_interface {
      [[ Attribute code ]]
      code : String
      [[ Attribute type ]]
      `type` : String
      extension_attributes : catalog_data_product_link_attribute_extension_interface?
   }
   
   [[ ExtensionInterface class for @see \Magento\Catalog\Api\Data\ProductLinkAttributeInterface ]]
   type catalog_data_product_link_attribute_extension_interface
   
   model AnonymousType_catalogProductLinkRepositoryV1SavePutBody {
      entity : catalog_data_product_link_interface
   }
   
   model AnonymousType_catalogProductLinkManagementV1SetProductLinksPostBody {
      items : catalog_data_product_link_interface[]
   }
   
   model catalog_data_category_product_link_interface {
      sku : String?
      position : Int?
      [[ Category id ]]
      category_id : String
      extension_attributes : catalog_data_category_product_link_extension_interface?
   }
   
   [[ ExtensionInterface class for @see \Magento\Catalog\Api\Data\CategoryProductLinkInterface ]]
   type catalog_data_category_product_link_extension_interface
   
   model AnonymousType_catalogCategoryLinkRepositoryV1SavePutBody {
      productLink : catalog_data_category_product_link_interface
   }
   
   model AnonymousType_catalogCategoryLinkRepositoryV1SavePostBody {
      productLink : catalog_data_category_product_link_interface
   }
   
   model catalog_data_product_website_link_interface {
      sku : String
      [[ Website ids ]]
      website_id : Int
   }
   
   model AnonymousType_catalogProductWebsiteLinkRepositoryV1SavePutBody {
      productWebsiteLink : catalog_data_product_website_link_interface
   }
   
   model AnonymousType_catalogProductWebsiteLinkRepositoryV1SavePostBody {
      productWebsiteLink : catalog_data_product_website_link_interface
   }
   
   [[ Dto that holds render information about products ]]
   model catalog_data_product_render_search_results_interface {
      [[ List of products rendered information ]]
      items : catalog_data_product_render_interface[]
   }
   
   [[ Represents Data Object which holds enough information to render product This information is put into part as Add To Cart or Add to Compare Data or Price Data ]]
   model catalog_data_product_render_interface {
      add_to_cart_button : catalog_data_product_render_button_interface
      add_to_compare_button : catalog_data_product_render_button_interface
      price_info : catalog_data_product_render_price_info_interface
      [[ Enough information, that needed to render image on front ]]
      images : catalog_data_product_render_image_interface[]
      [[ Product url ]]
      url : String
      [[ Product identifier ]]
      id : Int
      [[ Product name ]]
      name : String
      [[ Product type. Such as bundle, grouped, simple, etc... ]]
      `type` : String
      [[ Information about product saleability (In Stock) ]]
      is_salable : String
      [[ Information about current store id or requested store id ]]
      store_id : Int
      [[ Current or desired currency code to product ]]
      currency_code : String
      extension_attributes : catalog_data_product_render_extension_interface
   }
   
   [[ Button interface. This interface represents all manner of product buttons: add to cart, add to compare, etc... The buttons describes by this interface should have interaction with backend ]]
   model catalog_data_product_render_button_interface {
      [[ Post data ]]
      post_data : String
      [[ Url, needed to add product to cart ]]
      url : String
      [[ Flag whether a product has options or not ]]
      required_options : Boolean
      extension_attributes : catalog_data_product_render_button_extension_interface?
   }
   
   [[ ExtensionInterface class for @see \Magento\Catalog\Api\Data\ProductRender\ButtonInterface ]]
   type catalog_data_product_render_button_extension_interface
   
   [[ Price interface. ]]
   model catalog_data_product_render_price_info_interface {
      [[ Final price ]]
      final_price : Decimal
      [[ Max price of a product ]]
      max_price : Decimal
      [[ Max regular price ]]
      max_regular_price : Decimal
      [[ Minimal regular price ]]
      minimal_regular_price : Decimal
      [[ Special price ]]
      special_price : Decimal
      [[ Minimal price ]]
      minimal_price : Decimal
      [[ Regular price ]]
      regular_price : Decimal
      formatted_prices : catalog_data_product_render_formatted_price_info_interface
      extension_attributes : catalog_data_product_render_price_info_extension_interface?
   }
   
   [[ Formatted Price interface. Aggregate formatted html with price representations. E.g.: <span class="price">$9.00</span> Consider currency, rounding and html ]]
   model catalog_data_product_render_formatted_price_info_interface {
      [[ Html with final price ]]
      final_price : String
      [[ Max price of a product ]]
      max_price : String
      [[ The minimal price of the product or variation ]]
      minimal_price : String
      [[ Max regular price ]]
      max_regular_price : String
      [[ Minimal regular price ]]
      minimal_regular_price : String
      [[ Special price ]]
      special_price : String
      [[ Price - is price of product without discounts and special price with taxes and fixed product tax ]]
      regular_price : String
      extension_attributes : catalog_data_product_render_formatted_price_info_extension_interface?
   }
   
   [[ ExtensionInterface class for @see \Magento\Catalog\Api\Data\ProductRender\FormattedPriceInfoInterface ]]
   type catalog_data_product_render_formatted_price_info_extension_interface
   
   [[ ExtensionInterface class for @see \Magento\Catalog\Api\Data\ProductRender\PriceInfoInterface ]]
   model catalog_data_product_render_price_info_extension_interface {
      msrp : msrp_data_product_render_msrp_price_info_interface?
      tax_adjustments : catalog_data_product_render_price_info_interface?
      weee_attributes : weee_data_product_render_weee_adjustment_attribute_interface[]?
      weee_adjustment : String?
   }
   
   [[ Price interface. ]]
   model msrp_data_product_render_msrp_price_info_interface {
      msrp_price : String
      is_applicable : String
      is_shown_price_on_gesture : String
      msrp_message : String
      explanation_message : String
      extension_attributes : msrp_data_product_render_msrp_price_info_extension_interface?
   }
   
   [[ ExtensionInterface class for @see \Magento\Msrp\Api\Data\ProductRender\MsrpPriceInfoInterface ]]
   type msrp_data_product_render_msrp_price_info_extension_interface
   
   [[ List of all weee attributes, their amounts, etc.., that product has ]]
   model weee_data_product_render_weee_adjustment_attribute_interface {
      [[ Weee attribute amount ]]
      amount : String
      [[ Tax which is calculated to fixed product tax attribute ]]
      tax_amount : String
      [[ Tax amount of weee attribute ]]
      tax_amount_incl_tax : String
      [[ Product amount exclude tax ]]
      amount_excl_tax : String
      [[ Weee attribute code ]]
      attribute_code : String
      extension_attributes : weee_data_product_render_weee_adjustment_attribute_extension_interface
   }
   
   [[ ExtensionInterface class for @see \Magento\Weee\Api\Data\ProductRender\WeeeAdjustmentAttributeInterface ]]
   type weee_data_product_render_weee_adjustment_attribute_extension_interface
   
   [[ Product Render image interface. Represents physical characteristics of image, that can be used in product listing or product view ]]
   model catalog_data_product_render_image_interface {
      [[ Image url ]]
      url : String
      [[ Image code ]]
      code : String
      [[ Image height ]]
      height : Decimal
      [[ Image width in px ]]
      width : Decimal
      [[ Image label ]]
      label : String
      [[ Resize width ]]
      resized_width : Decimal
      [[ Resize height ]]
      resized_height : Decimal
      extension_attributes : catalog_data_product_render_image_extension_interface?
   }
   
   [[ ExtensionInterface class for @see \Magento\Catalog\Api\Data\ProductRender\ImageInterface ]]
   type catalog_data_product_render_image_extension_interface
   
   [[ ExtensionInterface class for @see \Magento\Catalog\Api\Data\ProductRenderInterface ]]
   model catalog_data_product_render_extension_interface {
      review_html : String?
      wishlist_button : catalog_data_product_render_button_interface?
      ddg_brand : String?
      ddg_description : String?
      ddg_sku : String?
      ddg_image : String?
      ddg_categories : String[]?
   }
   
   model AnonymousType_catalogInventoryStockRegistryV1UpdateStockItemBySkuPutBody {
      stockItem : catalog_inventory_data_stock_item_interface
   }
   
   [[ Interface StockItemCollectionInterface ]]
   model catalog_inventory_data_stock_item_collection_interface {
      [[ Items ]]
      items : catalog_inventory_data_stock_item_interface[]
      search_criteria : catalog_inventory_stock_item_criteria_interface
      [[ Total count. ]]
      total_count : Int
   }
   
   [[ Interface StockItemCriteriaInterface ]]
   model catalog_inventory_stock_item_criteria_interface {
      [[ Associated Mapper Interface name ]]
      mapper_interface_name : String
      [[ Criteria objects added to current Composite Criteria ]]
      criteria_list : framework_criteria_interface[]
      [[ List of filters ]]
      filters : String[]
      [[ Ordering criteria ]]
      orders : String[]
      [[ Limit ]]
      limit : String[]
   }
   
   [[ Interface CriteriaInterface ]]
   model framework_criteria_interface {
      [[ Associated Mapper Interface name ]]
      mapper_interface_name : String
      [[ Criteria objects added to current Composite Criteria ]]
      criteria_list : framework_criteria_interface[]
      [[ List of filters ]]
      filters : String[]
      [[ Ordering criteria ]]
      orders : String[]
      [[ Limit ]]
      limit : String[]
   }
   
   [[ Interface StockStatusInterface ]]
   model catalog_inventory_data_stock_status_interface {
      product_id : Int
      stock_id : Int
      qty : Int
      stock_status : Int
      stock_item : catalog_inventory_data_stock_item_interface
      extension_attributes : catalog_inventory_data_stock_status_extension_interface?
   }
   
   [[ ExtensionInterface class for @see \Magento\CatalogInventory\Api\Data\StockStatusInterface ]]
   type catalog_inventory_data_stock_status_extension_interface
   
   [[ Interface CartInterface ]]
   model quote_data_cart_interface {
      [[ Cart/quote ID. ]]
      id : Int
      [[ Cart creation date and time. Otherwise, null. ]]
      created_at : String?
      [[ Cart last update date and time. Otherwise, null. ]]
      updated_at : String?
      [[ Cart conversion date and time. Otherwise, null. ]]
      converted_at : String?
      [[ Active status flag value. Otherwise, null. ]]
      is_active : Boolean?
      [[ Virtual flag value. Otherwise, null. ]]
      is_virtual : Boolean?
      [[ Array of items. Otherwise, null. ]]
      items : quote_data_cart_item_interface[]?
      [[ Number of different items or products in the cart. Otherwise, null. ]]
      items_count : Int?
      [[ Total quantity of all cart items. Otherwise, null. ]]
      items_qty : Decimal?
      customer : customer_data_customer_interface
      billing_address : quote_data_address_interface?
      [[ Reserved order ID. Otherwise, null. ]]
      reserved_order_id : String?
      [[ Original order ID. Otherwise, null. ]]
      orig_order_id : Int?
      currency : quote_data_currency_interface?
      [[ For guest customers, false for logged in customers ]]
      customer_is_guest : Boolean?
      [[ Notice text ]]
      customer_note : String?
      [[ Customer notification flag ]]
      customer_note_notify : Boolean?
      [[ Customer tax class ID. ]]
      customer_tax_class_id : Int?
      [[ Store identifier ]]
      store_id : Int
      extension_attributes : quote_data_cart_extension_interface?
   }
   
   [[ Interface CartItemInterface ]]
   model quote_data_cart_item_interface {
      [[ Item ID. Otherwise, null. ]]
      item_id : Int?
      [[ Product SKU. Otherwise, null. ]]
      sku : String?
      [[ Product quantity. ]]
      qty : Decimal
      [[ Product name. Otherwise, null. ]]
      name : String?
      [[ Product price. Otherwise, null. ]]
      price : Decimal?
      [[ Product type. Otherwise, null. ]]
      product_type : String?
      [[ Quote id. ]]
      quote_id : String
      product_option : quote_data_product_option_interface?
      extension_attributes : quote_data_cart_item_extension_interface?
   }
   
   [[ Product option interface ]]
   model quote_data_product_option_interface {
      extension_attributes : quote_data_product_option_extension_interface?
   }
   
   [[ ExtensionInterface class for @see \Magento\Quote\Api\Data\ProductOptionInterface ]]
   model quote_data_product_option_extension_interface {
      custom_options : catalog_data_custom_option_interface[]?
      bundle_options : bundle_data_bundle_option_interface[]?
      downloadable_option : downloadable_data_downloadable_option_interface?
      configurable_item_options : configurable_product_data_configurable_item_option_value_interface[]?
   }
   
   [[ Interface CustomOptionInterface ]]
   model catalog_data_custom_option_interface {
      [[ Option id ]]
      option_id : String
      [[ Option value ]]
      option_value : String
      extension_attributes : catalog_data_custom_option_extension_interface?
   }
   
   [[ ExtensionInterface class for @see \Magento\Catalog\Api\Data\CustomOptionInterface ]]
   model catalog_data_custom_option_extension_interface {
      file_info : framework_data_image_content_interface?
   }
   
   [[ Interface BundleOptionInterface ]]
   model bundle_data_bundle_option_interface {
      [[ Bundle option id. ]]
      option_id : Int
      [[ Bundle option quantity. ]]
      option_qty : Int
      [[ Bundle option selection ids. ]]
      option_selections : Int[]
      extension_attributes : bundle_data_bundle_option_extension_interface?
   }
   
   [[ ExtensionInterface class for @see \Magento\Bundle\Api\Data\BundleOptionInterface ]]
   type bundle_data_bundle_option_extension_interface
   
   [[ Downloadable Option ]]
   model downloadable_data_downloadable_option_interface {
      [[ The list of downloadable links ]]
      downloadable_links : Int[]
   }
   
   [[ Interface ConfigurableItemOptionValueInterface ]]
   model configurable_product_data_configurable_item_option_value_interface {
      [[ Option SKU ]]
      option_id : String
      [[ Item id ]]
      option_value : Int?
      extension_attributes : configurable_product_data_configurable_item_option_value_extension_interface?
   }
   
   [[ ExtensionInterface class for @see \Magento\ConfigurableProduct\Api\Data\ConfigurableItemOptionValueInterface ]]
   type configurable_product_data_configurable_item_option_value_extension_interface
   
   [[ ExtensionInterface class for @see \Magento\Quote\Api\Data\CartItemInterface ]]
   model quote_data_cart_item_extension_interface {
      discounts : sales_rule_data_rule_discount_interface[]?
   }
   
   [[ Rule discount Interface ]]
   model sales_rule_data_rule_discount_interface {
      discount_data : sales_rule_data_discount_data_interface
      [[ Rule Label ]]
      rule_label : String
      [[ Rule ID ]]
      rule_id : Int
   }
   
   [[ Discount Data Interface ]]
   model sales_rule_data_discount_data_interface {
      [[ Amount ]]
      amount : Decimal
      [[ Base Amount ]]
      base_amount : Decimal
      [[ Original Amount ]]
      original_amount : Decimal
      [[ Base Original Amount ]]
      base_original_amount : Decimal
   }
   
   [[ Interface AddressInterface ]]
   model quote_data_address_interface {
      [[ Id ]]
      id : Int?
      [[ Region name ]]
      region : String
      [[ Region id ]]
      region_id : Int
      [[ Region code ]]
      region_code : String
      [[ Country id ]]
      country_id : String
      [[ Street ]]
      street : String[]
      [[ Company ]]
      company : String?
      [[ Telephone number ]]
      telephone : String
      [[ Fax number ]]
      fax : String?
      [[ Postcode ]]
      postcode : String
      [[ City name ]]
      city : String
      [[ First name ]]
      firstname : String
      [[ Last name ]]
      lastname : String
      [[ Middle name ]]
      middlename : String?
      [[ Prefix ]]
      prefix : String?
      [[ Suffix ]]
      suffix : String?
      [[ Vat id ]]
      vat_id : String?
      [[ Customer id ]]
      customer_id : Int?
      [[ Billing/shipping email ]]
      email : String
      [[ Same as billing flag ]]
      same_as_billing : Int?
      [[ Customer address id ]]
      customer_address_id : Int?
      [[ Save in address book flag ]]
      save_in_address_book : Int?
      extension_attributes : quote_data_address_extension_interface?
      [[ Custom attributes values. ]]
      custom_attributes : framework_attribute_interface[]?
   }
   
   [[ ExtensionInterface class for @see \Magento\Quote\Api\Data\AddressInterface ]]
   model quote_data_address_extension_interface {
      pickup_location_code : String?
      discounts : sales_rule_data_rule_discount_interface[]?
   }
   
   [[ Interface CurrencyInterface ]]
   model quote_data_currency_interface {
      [[ Global currency code ]]
      global_currency_code : String?
      [[ Base currency code ]]
      base_currency_code : String?
      [[ Store currency code ]]
      store_currency_code : String?
      [[ Quote currency code ]]
      quote_currency_code : String?
      [[ Store currency to base currency rate ]]
      store_to_base_rate : Decimal?
      [[ Store currency to quote currency rate ]]
      store_to_quote_rate : Decimal?
      [[ Base currency to global currency rate ]]
      base_to_global_rate : Decimal?
      [[ Base currency to quote currency rate ]]
      base_to_quote_rate : Decimal?
      extension_attributes : quote_data_currency_extension_interface?
   }
   
   [[ ExtensionInterface class for @see \Magento\Quote\Api\Data\CurrencyInterface ]]
   type quote_data_currency_extension_interface
   
   [[ ExtensionInterface class for @see \Magento\Quote\Api\Data\CartInterface ]]
   model quote_data_cart_extension_interface {
      shipping_assignments : quote_data_shipping_assignment_interface[]?
      amazon_order_reference_id : amazon_payment_data_quote_link_interface?
   }
   
   [[ Interface ShippingAssignmentInterface ]]
   model quote_data_shipping_assignment_interface {
      shipping : quote_data_shipping_interface
      items : quote_data_cart_item_interface[]
      extension_attributes : quote_data_shipping_assignment_extension_interface?
   }
   
   [[ Interface ShippingInterface ]]
   model quote_data_shipping_interface {
      address : quote_data_address_interface
      [[ Shipping method ]]
      method : String
      extension_attributes : quote_data_shipping_extension_interface?
   }
   
   [[ ExtensionInterface class for @see \Magento\Quote\Api\Data\ShippingInterface ]]
   type quote_data_shipping_extension_interface
   
   [[ ExtensionInterface class for @see \Magento\Quote\Api\Data\ShippingAssignmentInterface ]]
   type quote_data_shipping_assignment_extension_interface
   
   model amazon_payment_data_quote_link_interface {
      id : String
      [[ Amazon order reference id ]]
      amazon_order_reference_id : String
      [[ Quote id ]]
      quote_id : Int
      [[ Sandbox simulation reference ]]
      sandbox_simulation_reference : String
      [[ Quote confirmed with amazon ]]
      confirmed : Boolean
   }
   
   model AnonymousType_quoteCartManagementV1AssignCustomerPutBody {
      [[ The customer ID. ]]
      customerId : Int
      storeId : Int
   }
   
   [[ Interface CartSearchResultsInterface ]]
   model quote_data_cart_search_results_interface {
      [[ Carts list. ]]
      items : quote_data_cart_interface[]
      search_criteria : framework_search_criteria_interface
      [[ Total count. ]]
      total_count : Int
   }
   
   model AnonymousType_quoteCartRepositoryV1SavePutBody {
      quote : quote_data_cart_interface
   }
   
   [[ Interface PaymentInterface ]]
   model quote_data_payment_interface {
      [[ Purchase order number ]]
      po_number : String?
      [[ Payment method code ]]
      method : String
      [[ Payment additional details ]]
      additional_data : String[]?
      extension_attributes : quote_data_payment_extension_interface?
   }
   
   [[ ExtensionInterface class for @see \Magento\Quote\Api\Data\PaymentInterface ]]
   model quote_data_payment_extension_interface {
      agreement_ids : String[]?
   }
   
   model AnonymousType_quoteCartManagementV1PlaceOrderPutBody {
      paymentMethod : quote_data_payment_interface?
   }
   
   model AnonymousType_quoteGuestCartManagementV1AssignCustomerPutBody {
      [[ The customer ID. ]]
      customerId : Int
      storeId : Int
   }
   
   model AnonymousType_quoteGuestCartManagementV1PlaceOrderPutBody {
      paymentMethod : quote_data_payment_interface?
   }
   
   [[ Interface ShippingMethodInterface ]]
   model quote_data_shipping_method_interface {
      [[ Shipping carrier code. ]]
      carrier_code : String
      [[ Shipping method code. ]]
      method_code : String
      [[ Shipping carrier title. Otherwise, null. ]]
      carrier_title : String?
      [[ Shipping method title. Otherwise, null. ]]
      method_title : String?
      [[ Shipping amount in store currency. ]]
      amount : Decimal
      [[ Shipping amount in base currency. ]]
      base_amount : Decimal
      [[ The value of the availability flag for the current shipping method. ]]
      available : Boolean
      extension_attributes : quote_data_shipping_method_extension_interface?
      [[ Shipping Error message. ]]
      error_message : String
      [[ Shipping price excl tax. ]]
      price_excl_tax : Decimal
      [[ Shipping price incl tax. ]]
      price_incl_tax : Decimal
   }
   
   [[ ExtensionInterface class for @see \Magento\Quote\Api\Data\ShippingMethodInterface ]]
   type quote_data_shipping_method_extension_interface
   
   model AnonymousType_quoteShippingMethodManagementV1EstimateByAddressIdPostBody {
      [[ The estimate address id ]]
      addressId : Int
   }
   
   model AnonymousType_quoteShipmentEstimationV1EstimateByExtendedAddressPostBody {
      address : quote_data_address_interface
   }
   
   model AnonymousType_quoteGuestShipmentEstimationV1EstimateByExtendedAddressPostBody {
      address : quote_data_address_interface
   }
   
   model AnonymousType_quoteCartItemRepositoryV1SavePostBody {
      cartItem : quote_data_cart_item_interface
   }
   
   model AnonymousType_quoteCartItemRepositoryV1SavePutBody {
      cartItem : quote_data_cart_item_interface
   }
   
   model AnonymousType_quoteGuestCartItemRepositoryV1SavePostBody {
      cartItem : quote_data_cart_item_interface
   }
   
   model AnonymousType_quoteGuestCartItemRepositoryV1SavePutBody {
      cartItem : quote_data_cart_item_interface
   }
   
   model AnonymousType_quotePaymentMethodManagementV1SetPutBody {
      method : quote_data_payment_interface
   }
   
   [[ Interface PaymentMethodInterface ]]
   model quote_data_payment_method_interface {
      [[ Payment method code ]]
      code : String
      [[ Payment method title ]]
      title : String
   }
   
   model AnonymousType_quoteGuestPaymentMethodManagementV1SetPutBody {
      method : quote_data_payment_interface
   }
   
   model AnonymousType_quoteBillingAddressManagementV1AssignPostBody {
      address : quote_data_address_interface
      useForShipping : Boolean?
   }
   
   model AnonymousType_quoteGuestBillingAddressManagementV1AssignPostBody {
      address : quote_data_address_interface
      useForShipping : Boolean?
   }
   
   [[ Interface TotalsInterface ]]
   model quote_data_totals_interface {
      [[ Grand total in quote currency ]]
      grand_total : Decimal?
      [[ Grand total in base currency ]]
      base_grand_total : Decimal?
      [[ Subtotal in quote currency ]]
      subtotal : Decimal?
      [[ Subtotal in base currency ]]
      base_subtotal : Decimal?
      [[ Discount amount in quote currency ]]
      discount_amount : Decimal?
      [[ Discount amount in base currency ]]
      base_discount_amount : Decimal?
      [[ Subtotal in quote currency with applied discount ]]
      subtotal_with_discount : Decimal?
      [[ Subtotal in base currency with applied discount ]]
      base_subtotal_with_discount : Decimal?
      [[ Shipping amount in quote currency ]]
      shipping_amount : Decimal?
      [[ Shipping amount in base currency ]]
      base_shipping_amount : Decimal?
      [[ Shipping discount amount in quote currency ]]
      shipping_discount_amount : Decimal?
      [[ Shipping discount amount in base currency ]]
      base_shipping_discount_amount : Decimal?
      [[ Tax amount in quote currency ]]
      tax_amount : Decimal?
      [[ Tax amount in base currency ]]
      base_tax_amount : Decimal?
      [[ Item weee tax applied amount in quote currency. ]]
      weee_tax_applied_amount : Decimal
      [[ Shipping tax amount in quote currency ]]
      shipping_tax_amount : Decimal?
      [[ Shipping tax amount in base currency ]]
      base_shipping_tax_amount : Decimal?
      [[ Subtotal including tax in quote currency ]]
      subtotal_incl_tax : Decimal?
      [[ Subtotal including tax in base currency ]]
      base_subtotal_incl_tax : Decimal?
      [[ Shipping including tax in quote currency ]]
      shipping_incl_tax : Decimal?
      [[ Shipping including tax in base currency ]]
      base_shipping_incl_tax : Decimal?
      [[ Base currency code ]]
      base_currency_code : String?
      [[ Quote currency code ]]
      quote_currency_code : String?
      [[ Applied coupon code ]]
      coupon_code : String?
      [[ Items qty ]]
      items_qty : Int?
      [[ Totals by items ]]
      items : quote_data_totals_item_interface[]?
      [[ Dynamically calculated totals ]]
      total_segments : quote_data_total_segment_interface[]
      extension_attributes : quote_data_totals_extension_interface?
   }
   
   [[ Interface TotalsItemInterface ]]
   model quote_data_totals_item_interface {
      [[ Item id ]]
      item_id : Int
      [[ Item price in quote currency. ]]
      price : Decimal
      [[ Item price in base currency. ]]
      base_price : Decimal
      [[ Item quantity. ]]
      qty : Decimal
      [[ Row total in quote currency. ]]
      row_total : Decimal
      [[ Row total in base currency. ]]
      base_row_total : Decimal
      [[ Row total with discount in quote currency. Otherwise, null. ]]
      row_total_with_discount : Decimal?
      [[ Tax amount in quote currency. Otherwise, null. ]]
      tax_amount : Decimal?
      [[ Tax amount in base currency. Otherwise, null. ]]
      base_tax_amount : Decimal?
      [[ Tax percent. Otherwise, null. ]]
      tax_percent : Decimal?
      [[ Discount amount in quote currency. Otherwise, null. ]]
      discount_amount : Decimal?
      [[ Discount amount in base currency. Otherwise, null. ]]
      base_discount_amount : Decimal?
      [[ Discount percent. Otherwise, null. ]]
      discount_percent : Decimal?
      [[ Price including tax in quote currency. Otherwise, null. ]]
      price_incl_tax : Decimal?
      [[ Price including tax in base currency. Otherwise, null. ]]
      base_price_incl_tax : Decimal?
      [[ Row total including tax in quote currency. Otherwise, null. ]]
      row_total_incl_tax : Decimal?
      [[ Row total including tax in base currency. Otherwise, null. ]]
      base_row_total_incl_tax : Decimal?
      [[ Item price in quote currency. ]]
      options : String
      [[ Item weee tax applied amount in quote currency. ]]
      weee_tax_applied_amount : Decimal
      [[ Item weee tax applied in quote currency. ]]
      weee_tax_applied : String
      extension_attributes : quote_data_totals_item_extension_interface?
      [[ Product name. Otherwise, null. ]]
      name : String?
   }
   
   [[ ExtensionInterface class for @see \Magento\Quote\Api\Data\TotalsItemInterface ]]
   type quote_data_totals_item_extension_interface
   
   [[ Interface TotalsInterface ]]
   model quote_data_total_segment_interface {
      [[ Code ]]
      code : String
      [[ Total title ]]
      title : String?
      [[ Total value ]]
      value : Decimal
      [[ Display area code. ]]
      area : String?
      extension_attributes : quote_data_total_segment_extension_interface?
   }
   
   [[ ExtensionInterface class for @see \Magento\Quote\Api\Data\TotalSegmentInterface ]]
   model quote_data_total_segment_extension_interface {
      tax_grandtotal_details : tax_data_grand_total_details_interface[]?
      vertex_tax_calculation_messages : String[]?
   }
   
   [[ Interface GrandTotalDetailsInterface ]]
   model tax_data_grand_total_details_interface {
      [[ Tax amount value ]]
      amount : Decimal
      [[ Tax rates info ]]
      rates : tax_data_grand_total_rates_interface[]
      [[ Group identifier ]]
      group_id : Int
   }
   
   [[ Interface GrandTotalRatesInterface ]]
   model tax_data_grand_total_rates_interface {
      [[ Tax percentage value ]]
      percent : String
      [[ Rate title ]]
      title : String
   }
   
   [[ ExtensionInterface class for @see \Magento\Quote\Api\Data\TotalsInterface ]]
   model quote_data_totals_extension_interface {
      coupon_label : String?
   }
   
   [[ Additional data for totals collection. ]]
   model quote_data_totals_additional_data_interface {
      extension_attributes : quote_data_totals_additional_data_extension_interface?
      [[ Custom attributes values. ]]
      custom_attributes : framework_attribute_interface[]?
   }
   
   [[ ExtensionInterface class for @see \Magento\Quote\Api\Data\TotalsAdditionalDataInterface ]]
   model quote_data_totals_additional_data_extension_interface {
      gift_messages : gift_message_data_message_interface[]?
   }
   
   [[ Interface MessageInterface ]]
   model gift_message_data_message_interface {
      [[ Gift message ID. Otherwise, null. ]]
      gift_message_id : Int?
      [[ Customer ID. Otherwise, null. ]]
      customer_id : Int?
      [[ Sender name. ]]
      sender : String
      [[ Recipient name. ]]
      recipient : String
      [[ Message text. ]]
      message : String
      extension_attributes : gift_message_data_message_extension_interface?
   }
   
   [[ ExtensionInterface class for @see \Magento\GiftMessage\Api\Data\MessageInterface ]]
   model gift_message_data_message_extension_interface {
      entity_id : String?
      entity_type : String?
   }
   
   model AnonymousType_quoteGuestCartTotalManagementV1CollectTotalsPutBody {
      paymentMethod : quote_data_payment_interface
      [[ The carrier code. ]]
      shippingCarrierCode : String?
      [[ The shipping method code. ]]
      shippingMethodCode : String?
      additionalData : quote_data_totals_additional_data_interface?
   }
   
   model AnonymousType_quoteCartTotalManagementV1CollectTotalsPutBody {
      paymentMethod : quote_data_payment_interface
      [[ The carrier code. ]]
      shippingCarrierCode : String?
      [[ The shipping method code. ]]
      shippingMethodCode : String?
      additionalData : quote_data_totals_additional_data_interface?
   }
   
   [[ Order interface. An order is a document that a web store issues to a customer. Magento generates a sales order that lists the product items, billing and shipping addresses, and shipping and payment methods. A corresponding external document, known as a purchase order, is emailed to the customer. ]]
   model sales_data_order_interface {
      [[ Negative adjustment value. ]]
      adjustment_negative : Decimal?
      [[ Positive adjustment value. ]]
      adjustment_positive : Decimal?
      [[ Applied rule IDs. ]]
      applied_rule_ids : String?
      [[ Base negative adjustment value. ]]
      base_adjustment_negative : Decimal?
      [[ Base positive adjustment value. ]]
      base_adjustment_positive : Decimal?
      [[ Base currency code. ]]
      base_currency_code : String?
      [[ Base discount amount. ]]
      base_discount_amount : Decimal?
      [[ Base discount canceled. ]]
      base_discount_canceled : Decimal?
      [[ Base discount invoiced. ]]
      base_discount_invoiced : Decimal?
      [[ Base discount refunded. ]]
      base_discount_refunded : Decimal?
      [[ Base grand total. ]]
      base_grand_total : Decimal
      [[ Base discount tax compensation amount. ]]
      base_discount_tax_compensation_amount : Decimal?
      [[ Base discount tax compensation invoiced. ]]
      base_discount_tax_compensation_invoiced : Decimal?
      [[ Base discount tax compensation refunded. ]]
      base_discount_tax_compensation_refunded : Decimal?
      [[ Base shipping amount. ]]
      base_shipping_amount : Decimal?
      [[ Base shipping canceled. ]]
      base_shipping_canceled : Decimal?
      [[ Base shipping discount amount. ]]
      base_shipping_discount_amount : Decimal?
      [[ Base shipping discount tax compensation amount. ]]
      base_shipping_discount_tax_compensation_amnt : Decimal?
      [[ Base shipping including tax. ]]
      base_shipping_incl_tax : Decimal?
      [[ Base shipping invoiced. ]]
      base_shipping_invoiced : Decimal?
      [[ Base shipping refunded. ]]
      base_shipping_refunded : Decimal?
      [[ Base shipping tax amount. ]]
      base_shipping_tax_amount : Decimal?
      [[ Base shipping tax refunded. ]]
      base_shipping_tax_refunded : Decimal?
      [[ Base subtotal. ]]
      base_subtotal : Decimal?
      [[ Base subtotal canceled. ]]
      base_subtotal_canceled : Decimal?
      [[ Base subtotal including tax. ]]
      base_subtotal_incl_tax : Decimal?
      [[ Base subtotal invoiced. ]]
      base_subtotal_invoiced : Decimal?
      [[ Base subtotal refunded. ]]
      base_subtotal_refunded : Decimal?
      [[ Base tax amount. ]]
      base_tax_amount : Decimal?
      [[ Base tax canceled. ]]
      base_tax_canceled : Decimal?
      [[ Base tax invoiced. ]]
      base_tax_invoiced : Decimal?
      [[ Base tax refunded. ]]
      base_tax_refunded : Decimal?
      [[ Base total canceled. ]]
      base_total_canceled : Decimal?
      [[ Base total due. ]]
      base_total_due : Decimal?
      [[ Base total invoiced. ]]
      base_total_invoiced : Decimal?
      [[ Base total invoiced cost. ]]
      base_total_invoiced_cost : Decimal?
      [[ Base total offline refunded. ]]
      base_total_offline_refunded : Decimal?
      [[ Base total online refunded. ]]
      base_total_online_refunded : Decimal?
      [[ Base total paid. ]]
      base_total_paid : Decimal?
      [[ Base total quantity ordered. ]]
      base_total_qty_ordered : Decimal?
      [[ Base total refunded. ]]
      base_total_refunded : Decimal?
      [[ Base-to-global rate. ]]
      base_to_global_rate : Decimal?
      [[ Base-to-order rate. ]]
      base_to_order_rate : Decimal?
      [[ Billing address ID. ]]
      billing_address_id : Int?
      [[ Can-ship-partially flag value. ]]
      can_ship_partially : Int?
      [[ Can-ship-partially-item flag value. ]]
      can_ship_partially_item : Int?
      [[ Coupon code. ]]
      coupon_code : String?
      [[ Created-at timestamp. ]]
      created_at : String?
      [[ Customer date-of-birth (DOB). ]]
      customer_dob : String?
      [[ Customer email address. ]]
      customer_email : String
      [[ Customer first name. ]]
      customer_firstname : String?
      [[ Customer gender. ]]
      customer_gender : Int?
      [[ Customer group ID. ]]
      customer_group_id : Int?
      [[ Customer ID. ]]
      customer_id : Int?
      [[ Customer-is-guest flag value. ]]
      customer_is_guest : Int?
      [[ Customer last name. ]]
      customer_lastname : String?
      [[ Customer middle name. ]]
      customer_middlename : String?
      [[ Customer note. ]]
      customer_note : String?
      [[ Customer-note-notify flag value. ]]
      customer_note_notify : Int?
      [[ Customer prefix. ]]
      customer_prefix : String?
      [[ Customer suffix. ]]
      customer_suffix : String?
      [[ Customer value-added tax (VAT). ]]
      customer_taxvat : String?
      [[ Discount amount. ]]
      discount_amount : Decimal?
      [[ Discount canceled. ]]
      discount_canceled : Decimal?
      [[ Discount description. ]]
      discount_description : String?
      [[ Discount invoiced. ]]
      discount_invoiced : Decimal?
      [[ Discount refunded amount. ]]
      discount_refunded : Decimal?
      [[ Edit increment value. ]]
      edit_increment : Int?
      [[ Email-sent flag value. ]]
      email_sent : Int?
      [[ Order ID. ]]
      entity_id : Int?
      [[ External customer ID. ]]
      ext_customer_id : String?
      [[ External order ID. ]]
      ext_order_id : String?
      [[ Forced-shipment-with-invoice flag value. ]]
      forced_shipment_with_invoice : Int?
      [[ Global currency code. ]]
      global_currency_code : String?
      [[ Grand total. ]]
      grand_total : Decimal
      [[ Discount tax compensation amount. ]]
      discount_tax_compensation_amount : Decimal?
      [[ Discount tax compensation invoiced amount. ]]
      discount_tax_compensation_invoiced : Decimal?
      [[ Discount tax compensation refunded amount. ]]
      discount_tax_compensation_refunded : Decimal?
      [[ Hold before state. ]]
      hold_before_state : String?
      [[ Hold before status. ]]
      hold_before_status : String?
      [[ Increment ID. ]]
      increment_id : String?
      [[ Is-virtual flag value. ]]
      is_virtual : Int?
      [[ Order currency code. ]]
      order_currency_code : String?
      [[ Original increment ID. ]]
      original_increment_id : String?
      [[ Payment authorization amount. ]]
      payment_authorization_amount : Decimal?
      [[ Payment authorization expiration date. ]]
      payment_auth_expiration : Int?
      [[ Protect code. ]]
      protect_code : String?
      [[ Quote address ID. ]]
      quote_address_id : Int?
      [[ Quote ID. ]]
      quote_id : Int?
      [[ Relation child ID. ]]
      relation_child_id : String?
      [[ Relation child real ID. ]]
      relation_child_real_id : String?
      [[ Relation parent ID. ]]
      relation_parent_id : String?
      [[ Relation parent real ID. ]]
      relation_parent_real_id : String?
      [[ Remote IP address. ]]
      remote_ip : String?
      [[ Shipping amount. ]]
      shipping_amount : Decimal?
      [[ Shipping canceled amount. ]]
      shipping_canceled : Decimal?
      [[ Shipping description. ]]
      shipping_description : String?
      [[ Shipping discount amount. ]]
      shipping_discount_amount : Decimal?
      [[ Shipping discount tax compensation amount. ]]
      shipping_discount_tax_compensation_amount : Decimal?
      [[ Shipping including tax amount. ]]
      shipping_incl_tax : Decimal?
      [[ Shipping invoiced amount. ]]
      shipping_invoiced : Decimal?
      [[ Shipping refunded amount. ]]
      shipping_refunded : Decimal?
      [[ Shipping tax amount. ]]
      shipping_tax_amount : Decimal?
      [[ Shipping tax refunded amount. ]]
      shipping_tax_refunded : Decimal?
      [[ State. ]]
      state : String?
      [[ Status. ]]
      status : String?
      [[ Store currency code. ]]
      store_currency_code : String?
      [[ Store ID. ]]
      store_id : Int?
      [[ Store name. ]]
      store_name : String?
      [[ Store-to-base rate. ]]
      store_to_base_rate : Decimal?
      [[ Store-to-order rate. ]]
      store_to_order_rate : Decimal?
      [[ Subtotal. ]]
      subtotal : Decimal?
      [[ Subtotal canceled amount. ]]
      subtotal_canceled : Decimal?
      [[ Subtotal including tax amount. ]]
      subtotal_incl_tax : Decimal?
      [[ Subtotal invoiced amount. ]]
      subtotal_invoiced : Decimal?
      [[ Subtotal refunded amount. ]]
      subtotal_refunded : Decimal?
      [[ Tax amount. ]]
      tax_amount : Decimal?
      [[ Tax canceled amount. ]]
      tax_canceled : Decimal?
      [[ Tax invoiced amount. ]]
      tax_invoiced : Decimal?
      [[ Tax refunded amount. ]]
      tax_refunded : Decimal?
      [[ Total canceled. ]]
      total_canceled : Decimal?
      [[ Total due. ]]
      total_due : Decimal?
      [[ Total invoiced amount. ]]
      total_invoiced : Decimal?
      [[ Total item count. ]]
      total_item_count : Int?
      [[ Total offline refunded amount. ]]
      total_offline_refunded : Decimal?
      [[ Total online refunded amount. ]]
      total_online_refunded : Decimal?
      [[ Total paid. ]]
      total_paid : Decimal?
      [[ Total quantity ordered. ]]
      total_qty_ordered : Decimal?
      [[ Total amount refunded. ]]
      total_refunded : Decimal?
      [[ Updated-at timestamp. ]]
      updated_at : String?
      [[ Weight. ]]
      weight : Decimal?
      [[ X-Forwarded-For field value. ]]
      x_forwarded_for : String?
      [[ Array of items. ]]
      items : sales_data_order_item_interface[]
      billing_address : sales_data_order_address_interface?
      payment : sales_data_order_payment_interface?
      [[ Array of status histories. ]]
      status_histories : sales_data_order_status_history_interface[]?
      extension_attributes : sales_data_order_extension_interface?
   }
   
   [[ Order item interface. An order is a document that a web store issues to a customer. Magento generates a sales order that lists the product items, billing and shipping addresses, and shipping and payment methods. A corresponding external document, known as a purchase order, is emailed to the customer. ]]
   model sales_data_order_item_interface {
      [[ Additional data. ]]
      additional_data : String?
      [[ Amount refunded. ]]
      amount_refunded : Decimal?
      [[ Applied rule IDs. ]]
      applied_rule_ids : String?
      [[ Base amount refunded. ]]
      base_amount_refunded : Decimal?
      [[ Base cost. ]]
      base_cost : Decimal?
      [[ Base discount amount. ]]
      base_discount_amount : Decimal?
      [[ Base discount invoiced. ]]
      base_discount_invoiced : Decimal?
      [[ Base discount refunded. ]]
      base_discount_refunded : Decimal?
      [[ Base discount tax compensation amount. ]]
      base_discount_tax_compensation_amount : Decimal?
      [[ Base discount tax compensation invoiced. ]]
      base_discount_tax_compensation_invoiced : Decimal?
      [[ Base discount tax compensation refunded. ]]
      base_discount_tax_compensation_refunded : Decimal?
      [[ Base original price. ]]
      base_original_price : Decimal?
      [[ Base price. ]]
      base_price : Decimal?
      [[ Base price including tax. ]]
      base_price_incl_tax : Decimal?
      [[ Base row invoiced. ]]
      base_row_invoiced : Decimal?
      [[ Base row total. ]]
      base_row_total : Decimal?
      [[ Base row total including tax. ]]
      base_row_total_incl_tax : Decimal?
      [[ Base tax amount. ]]
      base_tax_amount : Decimal?
      [[ Base tax before discount. ]]
      base_tax_before_discount : Decimal?
      [[ Base tax invoiced. ]]
      base_tax_invoiced : Decimal?
      [[ Base tax refunded. ]]
      base_tax_refunded : Decimal?
      [[ Base WEEE tax applied amount. ]]
      base_weee_tax_applied_amount : Decimal?
      [[ Base WEEE tax applied row amount. ]]
      base_weee_tax_applied_row_amnt : Decimal?
      [[ Base WEEE tax disposition. ]]
      base_weee_tax_disposition : Decimal?
      [[ Base WEEE tax row disposition. ]]
      base_weee_tax_row_disposition : Decimal?
      [[ Created-at timestamp. ]]
      created_at : String?
      [[ Description. ]]
      description : String?
      [[ Discount amount. ]]
      discount_amount : Decimal?
      [[ Discount invoiced. ]]
      discount_invoiced : Decimal?
      [[ Discount percent. ]]
      discount_percent : Decimal?
      [[ Discount refunded. ]]
      discount_refunded : Decimal?
      [[ Event ID. ]]
      event_id : Int?
      [[ External order item ID. ]]
      ext_order_item_id : String?
      [[ Free-shipping flag value. ]]
      free_shipping : Int?
      [[ GW base price. ]]
      gw_base_price : Decimal?
      [[ GW base price invoiced. ]]
      gw_base_price_invoiced : Decimal?
      [[ GW base price refunded. ]]
      gw_base_price_refunded : Decimal?
      [[ GW base tax amount. ]]
      gw_base_tax_amount : Decimal?
      [[ GW base tax amount invoiced. ]]
      gw_base_tax_amount_invoiced : Decimal?
      [[ GW base tax amount refunded. ]]
      gw_base_tax_amount_refunded : Decimal?
      [[ GW ID. ]]
      gw_id : Int?
      [[ GW price. ]]
      gw_price : Decimal?
      [[ GW price invoiced. ]]
      gw_price_invoiced : Decimal?
      [[ GW price refunded. ]]
      gw_price_refunded : Decimal?
      [[ GW tax amount. ]]
      gw_tax_amount : Decimal?
      [[ GW tax amount invoiced. ]]
      gw_tax_amount_invoiced : Decimal?
      [[ GW tax amount refunded. ]]
      gw_tax_amount_refunded : Decimal?
      [[ Discount tax compensation amount. ]]
      discount_tax_compensation_amount : Decimal?
      [[ Discount tax compensation canceled. ]]
      discount_tax_compensation_canceled : Decimal?
      [[ Discount tax compensation invoiced. ]]
      discount_tax_compensation_invoiced : Decimal?
      [[ Discount tax compensation refunded. ]]
      discount_tax_compensation_refunded : Decimal?
      [[ Is-quantity-decimal flag value. ]]
      is_qty_decimal : Int?
      [[ Is-virtual flag value. ]]
      is_virtual : Int?
      [[ Item ID. ]]
      item_id : Int?
      [[ Locked DO invoice flag value. ]]
      locked_do_invoice : Int?
      [[ Locked DO ship flag value. ]]
      locked_do_ship : Int?
      [[ Name. ]]
      name : String?
      [[ No-discount flag value. ]]
      no_discount : Int?
      [[ Order ID. ]]
      order_id : Int?
      [[ Original price. ]]
      original_price : Decimal?
      [[ Parent item ID. ]]
      parent_item_id : Int?
      [[ Price. ]]
      price : Decimal?
      [[ Price including tax. ]]
      price_incl_tax : Decimal?
      [[ Product ID. ]]
      product_id : Int?
      [[ Product type. ]]
      product_type : String?
      [[ Quantity backordered. ]]
      qty_backordered : Decimal?
      [[ Quantity canceled. ]]
      qty_canceled : Decimal?
      [[ Quantity invoiced. ]]
      qty_invoiced : Decimal?
      [[ Quantity ordered. ]]
      qty_ordered : Decimal?
      [[ Quantity refunded. ]]
      qty_refunded : Decimal?
      [[ Quantity returned. ]]
      qty_returned : Decimal?
      [[ Quantity shipped. ]]
      qty_shipped : Decimal?
      [[ Quote item ID. ]]
      quote_item_id : Int?
      [[ Row invoiced. ]]
      row_invoiced : Decimal?
      [[ Row total. ]]
      row_total : Decimal?
      [[ Row total including tax. ]]
      row_total_incl_tax : Decimal?
      [[ Row weight. ]]
      row_weight : Decimal?
      [[ SKU. ]]
      sku : String
      [[ Store ID. ]]
      store_id : Int?
      [[ Tax amount. ]]
      tax_amount : Decimal?
      [[ Tax before discount. ]]
      tax_before_discount : Decimal?
      [[ Tax canceled. ]]
      tax_canceled : Decimal?
      [[ Tax invoiced. ]]
      tax_invoiced : Decimal?
      [[ Tax percent. ]]
      tax_percent : Decimal?
      [[ Tax refunded. ]]
      tax_refunded : Decimal?
      [[ Updated-at timestamp. ]]
      updated_at : String?
      [[ WEEE tax applied. ]]
      weee_tax_applied : String?
      [[ WEEE tax applied amount. ]]
      weee_tax_applied_amount : Decimal?
      [[ WEEE tax applied row amount. ]]
      weee_tax_applied_row_amount : Decimal?
      [[ WEEE tax disposition. ]]
      weee_tax_disposition : Decimal?
      [[ WEEE tax row disposition. ]]
      weee_tax_row_disposition : Decimal?
      [[ Weight. ]]
      weight : Decimal?
      parent_item : sales_data_order_item_interface?
      product_option : catalog_data_product_option_interface?
      extension_attributes : sales_data_order_item_extension_interface?
   }
   
   [[ Product option interface ]]
   model catalog_data_product_option_interface {
      extension_attributes : catalog_data_product_option_extension_interface?
   }
   
   [[ ExtensionInterface class for @see \Magento\Catalog\Api\Data\ProductOptionInterface ]]
   model catalog_data_product_option_extension_interface {
      custom_options : catalog_data_custom_option_interface[]?
      bundle_options : bundle_data_bundle_option_interface[]?
      downloadable_option : downloadable_data_downloadable_option_interface?
      configurable_item_options : configurable_product_data_configurable_item_option_value_interface[]?
   }
   
   [[ ExtensionInterface class for @see \Magento\Sales\Api\Data\OrderItemInterface ]]
   model sales_data_order_item_extension_interface {
      gift_message : gift_message_data_message_interface?
      vertex_tax_codes : String[]?
      invoice_text_codes : String[]?
      tax_codes : String[]?
      vertex_commodity_code : vertex_tax_data_commodity_code_interface?
   }
   
   [[ Order address interface. An order is a document that a web store issues to a customer. Magento generates a sales order that lists the product items, billing and shipping addresses, and shipping and payment methods. A corresponding external document, known as a purchase order, is emailed to the customer. ]]
   model sales_data_order_address_interface {
      [[ Address type. ]]
      address_type : String
      [[ City. ]]
      city : String
      [[ Company. ]]
      company : String?
      [[ Country ID. ]]
      country_id : String
      [[ Country address ID. ]]
      customer_address_id : Int?
      [[ Customer ID. ]]
      customer_id : Int?
      [[ Email address. ]]
      email : String?
      [[ Order address ID. ]]
      entity_id : Int?
      [[ Fax number. ]]
      fax : String?
      [[ First name. ]]
      firstname : String
      [[ Last name. ]]
      lastname : String
      [[ Middle name. ]]
      middlename : String?
      [[ Parent ID. ]]
      parent_id : Int?
      [[ Postal code. ]]
      postcode : String
      [[ Prefix. ]]
      prefix : String?
      [[ Region. ]]
      region : String?
      [[ Region code. ]]
      region_code : String?
      [[ Region ID. ]]
      region_id : Int?
      [[ Array of any street values. Otherwise, null. ]]
      street : String[]?
      [[ Suffix. ]]
      suffix : String?
      [[ Telephone number. ]]
      telephone : String
      [[ VAT ID. ]]
      vat_id : String?
      [[ VAT-is-valid flag value. ]]
      vat_is_valid : Int?
      [[ VAT request date. ]]
      vat_request_date : String?
      [[ VAT request ID. ]]
      vat_request_id : String?
      [[ VAT-request-success flag value. ]]
      vat_request_success : Int?
      extension_attributes : sales_data_order_address_extension_interface?
   }
   
   [[ ExtensionInterface class for @see \Magento\Sales\Api\Data\OrderAddressInterface ]]
   model sales_data_order_address_extension_interface {
      vertex_vat_country_code : String?
   }
   
   [[ Order payment interface. An order is a document that a web store issues to a customer. Magento generates a sales order that lists the product items, billing and shipping addresses, and shipping and payment methods. A corresponding external document, known as a purchase order, is emailed to the customer. ]]
   model sales_data_order_payment_interface {
      [[ Account status. ]]
      account_status : String
      [[ Additional data. ]]
      additional_data : String?
      [[ Array of additional information. ]]
      additional_information : String[]
      [[ Address status. ]]
      address_status : String?
      [[ Amount authorized. ]]
      amount_authorized : Decimal?
      [[ Amount canceled. ]]
      amount_canceled : Decimal?
      [[ Amount ordered. ]]
      amount_ordered : Decimal?
      [[ Amount paid. ]]
      amount_paid : Decimal?
      [[ Amount refunded. ]]
      amount_refunded : Decimal?
      [[ Anet transaction method. ]]
      anet_trans_method : String?
      [[ Base amount authorized. ]]
      base_amount_authorized : Decimal?
      [[ Base amount canceled. ]]
      base_amount_canceled : Decimal?
      [[ Base amount ordered. ]]
      base_amount_ordered : Decimal?
      [[ Base amount paid. ]]
      base_amount_paid : Decimal?
      [[ Base amount paid online. ]]
      base_amount_paid_online : Decimal?
      [[ Base amount refunded. ]]
      base_amount_refunded : Decimal?
      [[ Base amount refunded online. ]]
      base_amount_refunded_online : Decimal?
      [[ Base shipping amount. ]]
      base_shipping_amount : Decimal?
      [[ Base shipping captured amount. ]]
      base_shipping_captured : Decimal?
      [[ Base shipping refunded amount. ]]
      base_shipping_refunded : Decimal?
      [[ Credit card approval. ]]
      cc_approval : String?
      [[ Credit card avs status. ]]
      cc_avs_status : String?
      [[ Credit card CID status. ]]
      cc_cid_status : String?
      [[ Credit card debug request body. ]]
      cc_debug_request_body : String?
      [[ Credit card debug response body. ]]
      cc_debug_response_body : String?
      [[ Credit card debug response serialized. ]]
      cc_debug_response_serialized : String?
      [[ Credit card expiration month. ]]
      cc_exp_month : String?
      [[ Credit card expiration year. ]]
      cc_exp_year : String?
      [[ Last four digits of the credit card. ]]
      cc_last4 : String
      [[ Encrypted credit card number. ]]
      cc_number_enc : String?
      [[ Credit card number. ]]
      cc_owner : String?
      [[ Credit card secure verify. ]]
      cc_secure_verify : String?
      [[ Credit card SS issue. ]]
      cc_ss_issue : String?
      [[ Credit card SS start month. ]]
      cc_ss_start_month : String?
      [[ Credit card SS start year. ]]
      cc_ss_start_year : String?
      [[ Credit card status. ]]
      cc_status : String?
      [[ Credit card status description. ]]
      cc_status_description : String?
      [[ Credit card transaction ID. ]]
      cc_trans_id : String?
      [[ Credit card type. ]]
      cc_type : String?
      [[ eCheck account name. ]]
      echeck_account_name : String?
      [[ eCheck account type. ]]
      echeck_account_type : String?
      [[ eCheck bank name. ]]
      echeck_bank_name : String?
      [[ eCheck routing number. ]]
      echeck_routing_number : String?
      [[ eCheck type. ]]
      echeck_type : String?
      [[ Entity ID. ]]
      entity_id : Int?
      [[ Last transaction ID. ]]
      last_trans_id : String?
      [[ Method. ]]
      method : String
      [[ Parent ID. ]]
      parent_id : Int?
      [[ PO number. ]]
      po_number : String?
      [[ Protection eligibility. ]]
      protection_eligibility : String?
      [[ Quote payment ID. ]]
      quote_payment_id : Int?
      [[ Shipping amount. ]]
      shipping_amount : Decimal?
      [[ Shipping captured. ]]
      shipping_captured : Decimal?
      [[ Shipping refunded. ]]
      shipping_refunded : Decimal?
      extension_attributes : sales_data_order_payment_extension_interface?
   }
   
   [[ ExtensionInterface class for @see \Magento\Sales\Api\Data\OrderPaymentInterface ]]
   model sales_data_order_payment_extension_interface {
      notification_message : String?
      vault_payment_token : vault_data_payment_token_interface?
   }
   
   [[ Gateway vault payment token interface. ]]
   model vault_data_payment_token_interface {
      [[ Entity ID. ]]
      entity_id : Int?
      [[ Customer ID. ]]
      customer_id : Int?
      [[ Public hash ]]
      public_hash : String
      [[ Payment method code ]]
      payment_method_code : String
      [[ Type ]]
      `type` : String
      [[ Token creation timestamp ]]
      created_at : String?
      [[ Token expiration timestamp ]]
      expires_at : String?
      [[ Gateway token ID ]]
      gateway_token : String
      [[ Token details ]]
      token_details : String
      [[ Is active. ]]
      is_active : Boolean
      [[ Is visible. ]]
      is_visible : Boolean
   }
   
   [[ Order status history interface. An order is a document that a web store issues to a customer. Magento generates a sales order that lists the product items, billing and shipping addresses, and shipping and payment methods. A corresponding external document, known as a purchase order, is emailed to the customer. ]]
   model sales_data_order_status_history_interface {
      [[ Comment. ]]
      comment : String
      [[ Created-at timestamp. ]]
      created_at : String?
      [[ Order status history ID. ]]
      entity_id : Int?
      [[ Entity name. ]]
      entity_name : String?
      [[ Is-customer-notified flag value. ]]
      is_customer_notified : Int
      [[ Is-visible-on-storefront flag value. ]]
      is_visible_on_front : Int
      [[ Parent ID. ]]
      parent_id : Int
      [[ Status. ]]
      status : String?
      extension_attributes : sales_data_order_status_history_extension_interface?
   }
   
   [[ ExtensionInterface class for @see \Magento\Sales\Api\Data\OrderStatusHistoryInterface ]]
   type sales_data_order_status_history_extension_interface
   
   [[ ExtensionInterface class for @see \Magento\Sales\Api\Data\OrderInterface ]]
   model sales_data_order_extension_interface {
      shipping_assignments : sales_data_shipping_assignment_interface[]?
      payment_additional_info : payment_data_payment_additional_info_interface[]?
      gift_message : gift_message_data_message_interface?
      pickup_location_code : String?
      notification_sent : Int?
      send_notification : Int?
      applied_taxes : tax_data_order_tax_details_applied_tax_interface[]?
      item_applied_taxes : tax_data_order_tax_details_item_interface[]?
      converting_from_quote : Boolean?
      amazon_order_reference_id : amazon_payment_data_order_link_interface?
   }
   
   [[ Interface ShippingAssignmentInterface ]]
   model sales_data_shipping_assignment_interface {
      shipping : sales_data_shipping_interface
      [[ Order items of shipping assignment ]]
      items : sales_data_order_item_interface[]
      [[ Stock id ]]
      stock_id : Int?
      extension_attributes : sales_data_shipping_assignment_extension_interface?
   }
   
   [[ Interface ShippingInterface ]]
   model sales_data_shipping_interface {
      address : sales_data_order_address_interface?
      [[ Shipping method ]]
      method : String?
      total : sales_data_total_interface?
      extension_attributes : sales_data_shipping_extension_interface?
   }
   
   [[ Interface TotalInterface ]]
   model sales_data_total_interface {
      [[ Base shipping amount. ]]
      base_shipping_amount : Decimal?
      [[ Base shipping canceled. ]]
      base_shipping_canceled : Decimal?
      [[ Base shipping discount amount. ]]
      base_shipping_discount_amount : Decimal?
      [[ Base shipping discount tax compensation amount. ]]
      base_shipping_discount_tax_compensation_amnt : Decimal?
      [[ Base shipping including tax. ]]
      base_shipping_incl_tax : Decimal?
      [[ Base shipping invoiced. ]]
      base_shipping_invoiced : Decimal?
      [[ Base shipping refunded. ]]
      base_shipping_refunded : Decimal?
      [[ Base shipping tax amount. ]]
      base_shipping_tax_amount : Decimal?
      [[ Base shipping tax refunded. ]]
      base_shipping_tax_refunded : Decimal?
      [[ Shipping amount. ]]
      shipping_amount : Decimal?
      [[ Shipping canceled amount. ]]
      shipping_canceled : Decimal?
      [[ Shipping discount amount. ]]
      shipping_discount_amount : Decimal?
      [[ Shipping discount tax compensation amount. ]]
      shipping_discount_tax_compensation_amount : Decimal?
      [[ Shipping including tax amount. ]]
      shipping_incl_tax : Decimal?
      [[ Shipping invoiced amount. ]]
      shipping_invoiced : Decimal?
      [[ Shipping refunded amount. ]]
      shipping_refunded : Decimal?
      [[ Shipping tax amount. ]]
      shipping_tax_amount : Decimal?
      [[ Shipping tax refunded amount. ]]
      shipping_tax_refunded : Decimal?
      extension_attributes : sales_data_total_extension_interface?
   }
   
   [[ ExtensionInterface class for @see \Magento\Sales\Api\Data\TotalInterface ]]
   type sales_data_total_extension_interface
   
   [[ ExtensionInterface class for @see \Magento\Sales\Api\Data\ShippingInterface ]]
   type sales_data_shipping_extension_interface
   
   [[ ExtensionInterface class for @see \Magento\Sales\Api\Data\ShippingAssignmentInterface ]]
   type sales_data_shipping_assignment_extension_interface
   
   [[ Payment additional info interface. ]]
   model payment_data_payment_additional_info_interface {
      [[ Object key ]]
      key : String
      [[ Object value ]]
      value : String
   }
   
   [[ Interface OrderTaxDetailsAppliedTaxInterface ]]
   model tax_data_order_tax_details_applied_tax_interface {
      [[ Code ]]
      code : String?
      [[ Title ]]
      title : String?
      [[ Tax Percent ]]
      percent : Decimal?
      [[ Tax amount ]]
      amount : Decimal
      [[ Tax amount in base currency ]]
      base_amount : Decimal
      extension_attributes : tax_data_order_tax_details_applied_tax_extension_interface?
   }
   
   [[ ExtensionInterface class for @see \Magento\Tax\Api\Data\OrderTaxDetailsAppliedTaxInterface ]]
   model tax_data_order_tax_details_applied_tax_extension_interface {
      rates : tax_data_applied_tax_rate_interface[]?
   }
   
   [[ Applied tax rate interface. ]]
   model tax_data_applied_tax_rate_interface {
      [[ Code ]]
      code : String?
      [[ Title ]]
      title : String?
      [[ Tax Percent ]]
      percent : Decimal?
      extension_attributes : tax_data_applied_tax_rate_extension_interface?
   }
   
   [[ ExtensionInterface class for @see \Magento\Tax\Api\Data\AppliedTaxRateInterface ]]
   type tax_data_applied_tax_rate_extension_interface
   
   [[ Interface OrderTaxDetailsItemInterface ]]
   model tax_data_order_tax_details_item_interface {
      [[ Type (shipping, product, weee, gift wrapping, etc) ]]
      `type` : String?
      [[ Item id if this item is a product ]]
      item_id : Int?
      [[ Associated item id if this item is associated with another item, null otherwise ]]
      associated_item_id : Int?
      [[ Applied taxes ]]
      applied_taxes : tax_data_order_tax_details_applied_tax_interface[]?
      extension_attributes : tax_data_order_tax_details_item_extension_interface?
   }
   
   [[ ExtensionInterface class for @see \Magento\Tax\Api\Data\OrderTaxDetailsItemInterface ]]
   type tax_data_order_tax_details_item_extension_interface
   
   model amazon_payment_data_order_link_interface {
      [[ Amazon order reference id ]]
      amazon_order_reference_id : String
      [[ Order id ]]
      order_id : Int
   }
   
   [[ Order search result interface. An order is a document that a web store issues to a customer. Magento generates a sales order that lists the product items, billing and shipping addresses, and shipping and payment methods. A corresponding external document, known as a purchase order, is emailed to the customer. ]]
   model sales_data_order_search_result_interface {
      [[ Array of collection items. ]]
      items : sales_data_order_interface[]
      search_criteria : framework_search_criteria_interface
      [[ Total count. ]]
      total_count : Int
   }
   
   model AnonymousType_salesOrderRepositoryV1SavePostBody {
      entity : sales_data_order_interface
   }
   
   model AnonymousType_salesOrderRepositoryV1SavePutBody {
      entity : sales_data_order_interface
   }
   
   [[ Order status history search result interface. An order is a document that a web store issues to a customer. Magento generates a sales order that lists the product items, billing and shipping addresses, and shipping and payment methods. A corresponding external document, known as a purchase order, is emailed to the customer. ]]
   model sales_data_order_status_history_search_result_interface {
      [[ Array of collection items. ]]
      items : sales_data_order_status_history_interface[]
      search_criteria : framework_search_criteria_interface
      [[ Total count. ]]
      total_count : Int
   }
   
   model AnonymousType_salesOrderManagementV1AddCommentPostBody {
      statusHistory : sales_data_order_status_history_interface
   }
   
   model AnonymousType_salesOrderAddressRepositoryV1SavePutBody {
      entity : sales_data_order_address_interface
   }
   
   [[ Order item search result interface. An order is a document that a web store issues to a customer. Magento generates a sales order that lists the product items, billing and shipping addresses, and shipping and payment methods. A corresponding external document, known as a purchase order, is emailed to the customer. ]]
   model sales_data_order_item_search_result_interface {
      [[ Array of collection items. ]]
      items : sales_data_order_item_interface[]
      search_criteria : framework_search_criteria_interface
      [[ Total count. ]]
      total_count : Int
   }
   
   [[ Invoice interface. An invoice is a record of the receipt of payment for an order. ]]
   model sales_data_invoice_interface {
      [[ Base currency code. ]]
      base_currency_code : String?
      [[ Base discount amount. ]]
      base_discount_amount : Decimal?
      [[ Base grand total. ]]
      base_grand_total : Decimal?
      [[ Base discount tax compensation amount. ]]
      base_discount_tax_compensation_amount : Decimal?
      [[ Base shipping amount. ]]
      base_shipping_amount : Decimal?
      [[ Base shipping discount tax compensation amount. ]]
      base_shipping_discount_tax_compensation_amnt : Decimal?
      [[ Base shipping including tax. ]]
      base_shipping_incl_tax : Decimal?
      [[ Base shipping tax amount. ]]
      base_shipping_tax_amount : Decimal?
      [[ Base subtotal. ]]
      base_subtotal : Decimal?
      [[ Base subtotal including tax. ]]
      base_subtotal_incl_tax : Decimal?
      [[ Base tax amount. ]]
      base_tax_amount : Decimal?
      [[ Base total refunded. ]]
      base_total_refunded : Decimal?
      [[ Base-to-global rate. ]]
      base_to_global_rate : Decimal?
      [[ Base-to-order rate. ]]
      base_to_order_rate : Decimal?
      [[ Billing address ID. ]]
      billing_address_id : Int?
      [[ Can void flag value. ]]
      can_void_flag : Int?
      [[ Created-at timestamp. ]]
      created_at : String?
      [[ Discount amount. ]]
      discount_amount : Decimal?
      [[ Discount description. ]]
      discount_description : String?
      [[ Email-sent flag value. ]]
      email_sent : Int?
      [[ Invoice ID. ]]
      entity_id : Int?
      [[ Global currency code. ]]
      global_currency_code : String?
      [[ Grand total. ]]
      grand_total : Decimal?
      [[ Discount tax compensation amount. ]]
      discount_tax_compensation_amount : Decimal?
      [[ Increment ID. ]]
      increment_id : String?
      [[ Is-used-for-refund flag value. ]]
      is_used_for_refund : Int?
      [[ Order currency code. ]]
      order_currency_code : String?
      [[ Order ID. ]]
      order_id : Int
      [[ Shipping address ID. ]]
      shipping_address_id : Int?
      [[ Shipping amount. ]]
      shipping_amount : Decimal?
      [[ Shipping discount tax compensation amount. ]]
      shipping_discount_tax_compensation_amount : Decimal?
      [[ Shipping including tax. ]]
      shipping_incl_tax : Decimal?
      [[ Shipping tax amount. ]]
      shipping_tax_amount : Decimal?
      [[ State. ]]
      state : Int?
      [[ Store currency code. ]]
      store_currency_code : String?
      [[ Store ID. ]]
      store_id : Int?
      [[ Store-to-base rate. ]]
      store_to_base_rate : Decimal?
      [[ Store-to-order rate. ]]
      store_to_order_rate : Decimal?
      [[ Subtotal. ]]
      subtotal : Decimal?
      [[ Subtotal including tax. ]]
      subtotal_incl_tax : Decimal?
      [[ Tax amount. ]]
      tax_amount : Decimal?
      [[ Total quantity. ]]
      total_qty : Decimal
      [[ Transaction ID. ]]
      transaction_id : String?
      [[ Updated-at timestamp. ]]
      updated_at : String?
      [[ Array of invoice items. ]]
      items : sales_data_invoice_item_interface[]
      [[ Array of any invoice comments. Otherwise, null. ]]
      comments : sales_data_invoice_comment_interface[]?
      extension_attributes : sales_data_invoice_extension_interface?
   }
   
   [[ Invoice item interface. An invoice is a record of the receipt of payment for an order. An invoice item is a purchased item in an invoice. ]]
   model sales_data_invoice_item_interface {
      [[ Additional data. ]]
      additional_data : String?
      [[ Base cost. ]]
      base_cost : Decimal?
      [[ Base discount amount. ]]
      base_discount_amount : Decimal?
      [[ Base discount tax compensation amount. ]]
      base_discount_tax_compensation_amount : Decimal?
      [[ Base price. ]]
      base_price : Decimal?
      [[ Base price including tax. ]]
      base_price_incl_tax : Decimal?
      [[ Base row total. ]]
      base_row_total : Decimal?
      [[ Base row total including tax. ]]
      base_row_total_incl_tax : Decimal?
      [[ Base tax amount. ]]
      base_tax_amount : Decimal?
      [[ Description. ]]
      description : String?
      [[ Discount amount. ]]
      discount_amount : Decimal?
      [[ Invoice item ID. ]]
      entity_id : Int?
      [[ Discount tax compensation amount. ]]
      discount_tax_compensation_amount : Decimal?
      [[ Name. ]]
      name : String?
      [[ Parent ID. ]]
      parent_id : Int?
      [[ Price. ]]
      price : Decimal?
      [[ Price including tax. ]]
      price_incl_tax : Decimal?
      [[ Product ID. ]]
      product_id : Int?
      [[ Row total. ]]
      row_total : Decimal?
      [[ Row total including tax. ]]
      row_total_incl_tax : Decimal?
      [[ SKU. ]]
      sku : String
      [[ Tax amount. ]]
      tax_amount : Decimal?
      extension_attributes : sales_data_invoice_item_extension_interface?
      [[ Order item ID. ]]
      order_item_id : Int
      [[ Quantity. ]]
      qty : Decimal
   }
   
   [[ ExtensionInterface class for @see \Magento\Sales\Api\Data\InvoiceItemInterface ]]
   model sales_data_invoice_item_extension_interface {
      vertex_tax_codes : String[]?
      invoice_text_codes : String[]?
      tax_codes : String[]?
   }
   
   [[ Invoice comment interface. An invoice is a record of the receipt of payment for an order. An invoice can include comments that detail the invoice history. ]]
   model sales_data_invoice_comment_interface {
      [[ Is-customer-notified flag value. ]]
      is_customer_notified : Int
      [[ Parent ID. ]]
      parent_id : Int
      extension_attributes : sales_data_invoice_comment_extension_interface?
      [[ Comment. ]]
      comment : String
      [[ Is-visible-on-storefront flag value. ]]
      is_visible_on_front : Int
      [[ Created-at timestamp. ]]
      created_at : String?
      [[ Invoice ID. ]]
      entity_id : Int?
   }
   
   [[ ExtensionInterface class for @see \Magento\Sales\Api\Data\InvoiceCommentInterface ]]
   type sales_data_invoice_comment_extension_interface
   
   [[ ExtensionInterface class for @see \Magento\Sales\Api\Data\InvoiceInterface ]]
   model sales_data_invoice_extension_interface {
      vertex_tax_calculation_shipping_address : sales_data_order_address_interface?
      vertex_tax_calculation_billing_address : sales_data_order_address_interface?
      vertex_tax_calculation_order : sales_data_order_interface?
      gw_base_price : String?
      gw_price : String?
      gw_items_base_price : String?
      gw_items_price : String?
      gw_card_base_price : String?
      gw_card_price : String?
      gw_base_tax_amount : String?
      gw_tax_amount : String?
      gw_items_base_tax_amount : String?
      gw_items_tax_amount : String?
      gw_card_base_tax_amount : String?
      gw_card_tax_amount : String?
   }
   
   [[ Invoice search result interface. An invoice is a record of the receipt of payment for an order. ]]
   model sales_data_invoice_search_result_interface {
      [[ Array of collection items. ]]
      items : sales_data_invoice_interface[]
      search_criteria : framework_search_criteria_interface
      [[ Total count. ]]
      total_count : Int
   }
   
   model AnonymousType_salesInvoiceRepositoryV1SavePostBody {
      entity : sales_data_invoice_interface
   }
   
   [[ Invoice comment search result interface. An invoice is a record of the receipt of payment for an order. An invoice can include comments that detail the invoice history. ]]
   model sales_data_invoice_comment_search_result_interface {
      [[ Array of collection items. ]]
      items : sales_data_invoice_comment_interface[]
      search_criteria : framework_search_criteria_interface
      [[ Total count. ]]
      total_count : Int
   }
   
   model AnonymousType_salesInvoiceCommentRepositoryV1SavePostBody {
      entity : sales_data_invoice_comment_interface
   }
   
   [[ Interface CreditmemoItemCreationInterface ]]
   model sales_data_creditmemo_item_creation_interface {
      extension_attributes : sales_data_creditmemo_item_creation_extension_interface?
      [[ Order item ID. ]]
      order_item_id : Int
      [[ Quantity. ]]
      qty : Decimal
   }
   
   [[ ExtensionInterface class for @see \Magento\Sales\Api\Data\CreditmemoItemCreationInterface ]]
   type sales_data_creditmemo_item_creation_extension_interface
   
   [[ Interface CreditmemoCommentCreationInterface ]]
   model sales_data_creditmemo_comment_creation_interface {
      extension_attributes : sales_data_creditmemo_comment_creation_extension_interface?
      [[ Comment. ]]
      comment : String
      [[ Is-visible-on-storefront flag value. ]]
      is_visible_on_front : Int
   }
   
   [[ ExtensionInterface class for @see \Magento\Sales\Api\Data\CreditmemoCommentCreationInterface ]]
   type sales_data_creditmemo_comment_creation_extension_interface
   
   [[ Interface CreditmemoCreationArgumentsInterface ]]
   model sales_data_creditmemo_creation_arguments_interface {
      [[ Credit memo shipping amount. ]]
      shipping_amount : Decimal?
      [[ Credit memo positive adjustment. ]]
      adjustment_positive : Decimal?
      [[ Credit memo negative adjustment. ]]
      adjustment_negative : Decimal?
      extension_attributes : sales_data_creditmemo_creation_arguments_extension_interface?
   }
   
   [[ ExtensionInterface class for @see \Magento\Sales\Api\Data\CreditmemoCreationArgumentsInterface ]]
   model sales_data_creditmemo_creation_arguments_extension_interface {
      return_to_stock_items : Int[]?
   }
   
   model AnonymousType_salesRefundInvoiceV1ExecutePostBody {
      items : sales_data_creditmemo_item_creation_interface[]?
      isOnline : Boolean?
      notify : Boolean?
      appendComment : Boolean?
      comment : sales_data_creditmemo_comment_creation_interface?
      arguments : sales_data_creditmemo_creation_arguments_interface?
   }
   
   [[ Credit memo comment search result interface. After a customer places and pays for an order and an invoice has been issued, the merchant can create a credit memo to refund all or part of the amount paid for any returned or undelivered items. The memo restores funds to the customer account so that the customer can make future purchases. A credit memo usually includes comments that detail why the credit memo amount was credited to the customer. ]]
   model sales_data_creditmemo_comment_search_result_interface {
      [[ Array of collection items. ]]
      items : sales_data_creditmemo_comment_interface[]
      search_criteria : framework_search_criteria_interface
      [[ Total count. ]]
      total_count : Int
   }
   
   [[ Credit memo comment interface. After a customer places and pays for an order and an invoice has been issued, the merchant can create a credit memo to refund all or part of the amount paid for any returned or undelivered items. The memo restores funds to the customer account so that the customer can make future purchases. A credit memo usually includes comments that detail why the credit memo amount was credited to the customer. ]]
   model sales_data_creditmemo_comment_interface {
      [[ Comment. ]]
      comment : String
      [[ Created-at timestamp. ]]
      created_at : String?
      [[ Credit memo ID. ]]
      entity_id : Int?
      [[ Is-customer-notified flag value. ]]
      is_customer_notified : Int
      [[ Is-visible-on-storefront flag value. ]]
      is_visible_on_front : Int
      [[ Parent ID. ]]
      parent_id : Int
      extension_attributes : sales_data_creditmemo_comment_extension_interface?
   }
   
   [[ ExtensionInterface class for @see \Magento\Sales\Api\Data\CreditmemoCommentInterface ]]
   type sales_data_creditmemo_comment_extension_interface
   
   model AnonymousType_salesCreditmemoCommentRepositoryV1SavePostBody {
      entity : sales_data_creditmemo_comment_interface
   }
   
   [[ Credit memo interface. After a customer places and pays for an order and an invoice has been issued, the merchant can create a credit memo to refund all or part of the amount paid for any returned or undelivered items. The memo restores funds to the customer account so that the customer can make future purchases. ]]
   model sales_data_creditmemo_interface {
      [[ Credit memo adjustment. ]]
      adjustment : Decimal?
      [[ Credit memo negative adjustment. ]]
      adjustment_negative : Decimal?
      [[ Credit memo positive adjustment. ]]
      adjustment_positive : Decimal?
      [[ Credit memo base adjustment. ]]
      base_adjustment : Decimal?
      [[ Credit memo negative base adjustment. ]]
      base_adjustment_negative : Decimal?
      [[ Credit memo positive base adjustment. ]]
      base_adjustment_positive : Decimal?
      [[ Credit memo base currency code. ]]
      base_currency_code : String?
      [[ Credit memo base discount amount. ]]
      base_discount_amount : Decimal?
      [[ Credit memo base grand total. ]]
      base_grand_total : Decimal?
      [[ Credit memo base discount tax compensation amount. ]]
      base_discount_tax_compensation_amount : Decimal?
      [[ Credit memo base shipping amount. ]]
      base_shipping_amount : Decimal?
      [[ Credit memo base shipping discount tax compensation amount. ]]
      base_shipping_discount_tax_compensation_amnt : Decimal?
      [[ Credit memo base shipping including tax. ]]
      base_shipping_incl_tax : Decimal?
      [[ Credit memo base shipping tax amount. ]]
      base_shipping_tax_amount : Decimal?
      [[ Credit memo base subtotal. ]]
      base_subtotal : Decimal?
      [[ Credit memo base subtotal including tax. ]]
      base_subtotal_incl_tax : Decimal?
      [[ Credit memo base tax amount. ]]
      base_tax_amount : Decimal?
      [[ Credit memo base-to-global rate. ]]
      base_to_global_rate : Decimal?
      [[ Credit memo base-to-order rate. ]]
      base_to_order_rate : Decimal?
      [[ Credit memo billing address ID. ]]
      billing_address_id : Int?
      [[ Credit memo created-at timestamp. ]]
      created_at : String?
      [[ Credit memo status. ]]
      creditmemo_status : Int?
      [[ Credit memo discount amount. ]]
      discount_amount : Decimal?
      [[ Credit memo discount description. ]]
      discount_description : String?
      [[ Credit memo email sent flag value. ]]
      email_sent : Int?
      [[ Credit memo ID. ]]
      entity_id : Int?
      [[ Credit memo global currency code. ]]
      global_currency_code : String?
      [[ Credit memo grand total. ]]
      grand_total : Decimal?
      [[ Credit memo discount tax compensation amount. ]]
      discount_tax_compensation_amount : Decimal?
      [[ Credit memo increment ID. ]]
      increment_id : String?
      [[ Credit memo invoice ID. ]]
      invoice_id : Int?
      [[ Credit memo order currency code. ]]
      order_currency_code : String?
      [[ Credit memo order ID. ]]
      order_id : Int
      [[ Credit memo shipping address ID. ]]
      shipping_address_id : Int?
      [[ Credit memo shipping amount. ]]
      shipping_amount : Decimal?
      [[ Credit memo shipping discount tax compensation amount. ]]
      shipping_discount_tax_compensation_amount : Decimal?
      [[ Credit memo shipping including tax. ]]
      shipping_incl_tax : Decimal?
      [[ Credit memo shipping tax amount. ]]
      shipping_tax_amount : Decimal?
      [[ Credit memo state. ]]
      state : Int?
      [[ Credit memo store currency code. ]]
      store_currency_code : String?
      [[ Credit memo store ID. ]]
      store_id : Int?
      [[ Credit memo store-to-base rate. ]]
      store_to_base_rate : Decimal?
      [[ Credit memo store-to-order rate. ]]
      store_to_order_rate : Decimal?
      [[ Credit memo subtotal. ]]
      subtotal : Decimal?
      [[ Credit memo subtotal including tax. ]]
      subtotal_incl_tax : Decimal?
      [[ Credit memo tax amount. ]]
      tax_amount : Decimal?
      [[ Credit memo transaction ID. ]]
      transaction_id : String?
      [[ Credit memo updated-at timestamp. ]]
      updated_at : String?
      [[ Array of credit memo items. ]]
      items : sales_data_creditmemo_item_interface[]
      [[ Array of any credit memo comments. Otherwise, null. ]]
      comments : sales_data_creditmemo_comment_interface[]?
      extension_attributes : sales_data_creditmemo_extension_interface?
   }
   
   [[ Credit memo item interface. After a customer places and pays for an order and an invoice has been issued, the merchant can create a credit memo to refund all or part of the amount paid for any returned or undelivered items. The memo restores funds to the customer account so that the customer can make future purchases. A credit memo item is an invoiced item for which a merchant creates a credit memo. ]]
   model sales_data_creditmemo_item_interface {
      [[ Additional data. ]]
      additional_data : String?
      [[ The base cost for a credit memo item. ]]
      base_cost : Decimal
      [[ The base discount amount for a credit memo item. ]]
      base_discount_amount : Decimal?
      [[ The base discount tax compensation amount for a credit memo item. ]]
      base_discount_tax_compensation_amount : Decimal?
      [[ The base price for a credit memo item. ]]
      base_price : Decimal
      [[ Base price including tax. ]]
      base_price_incl_tax : Decimal?
      [[ Base row total. ]]
      base_row_total : Decimal?
      [[ Base row total including tax. ]]
      base_row_total_incl_tax : Decimal?
      [[ Base tax amount. ]]
      base_tax_amount : Decimal?
      [[ Base WEEE tax applied amount. ]]
      base_weee_tax_applied_amount : Decimal?
      [[ Base WEEE tax applied row amount. ]]
      base_weee_tax_applied_row_amnt : Decimal?
      [[ Base WEEE tax disposition. ]]
      base_weee_tax_disposition : Decimal?
      [[ Base WEEE tax row disposition. ]]
      base_weee_tax_row_disposition : Decimal?
      [[ Description. ]]
      description : String?
      [[ Discount amount. ]]
      discount_amount : Decimal?
      [[ Credit memo item ID. ]]
      entity_id : Int
      [[ Discount tax compensation amount. ]]
      discount_tax_compensation_amount : Decimal?
      [[ Name. ]]
      name : String?
      [[ Order item ID. ]]
      order_item_id : Int
      [[ Parent ID. ]]
      parent_id : Int?
      [[ Price. ]]
      price : Decimal?
      [[ Price including tax. ]]
      price_incl_tax : Decimal?
      [[ Product ID. ]]
      product_id : Int?
      [[ Quantity. ]]
      qty : Decimal
      [[ Row total. ]]
      row_total : Decimal?
      [[ Row total including tax. ]]
      row_total_incl_tax : Decimal?
      [[ SKU. ]]
      sku : String?
      [[ Tax amount. ]]
      tax_amount : Decimal?
      [[ WEEE tax applied. ]]
      weee_tax_applied : String?
      [[ WEEE tax applied amount. ]]
      weee_tax_applied_amount : Decimal?
      [[ WEEE tax applied row amount. ]]
      weee_tax_applied_row_amount : Decimal?
      [[ WEEE tax disposition. ]]
      weee_tax_disposition : Decimal?
      [[ WEEE tax row disposition. ]]
      weee_tax_row_disposition : Decimal?
      extension_attributes : sales_data_creditmemo_item_extension_interface?
   }
   
   [[ ExtensionInterface class for @see \Magento\Sales\Api\Data\CreditmemoItemInterface ]]
   model sales_data_creditmemo_item_extension_interface {
      vertex_tax_codes : String[]?
      invoice_text_codes : String[]?
      tax_codes : String[]?
   }
   
   [[ ExtensionInterface class for @see \Magento\Sales\Api\Data\CreditmemoInterface ]]
   model sales_data_creditmemo_extension_interface {
      gw_base_price : String?
      gw_price : String?
      gw_items_base_price : String?
      gw_items_price : String?
      gw_card_base_price : String?
      gw_card_price : String?
      gw_base_tax_amount : String?
      gw_tax_amount : String?
      gw_items_base_tax_amount : String?
      gw_items_tax_amount : String?
      gw_card_base_tax_amount : String?
      gw_card_tax_amount : String?
   }
   
   model AnonymousType_salesCreditmemoManagementV1RefundPostBody {
      creditmemo : sales_data_creditmemo_interface
      offlineRequested : Boolean?
   }
   
   [[ Credit memo search result interface. After a customer places and pays for an order and an invoice has been issued, the merchant can create a credit memo to refund all or part of the amount paid for any returned or undelivered items. The memo restores funds to the customer account so that the customer can make future purchases. ]]
   model sales_data_creditmemo_search_result_interface {
      [[ Array of collection items. ]]
      items : sales_data_creditmemo_interface[]
      search_criteria : framework_search_criteria_interface
      [[ Total count. ]]
      total_count : Int
   }
   
   model AnonymousType_salesCreditmemoRepositoryV1SavePostBody {
      entity : sales_data_creditmemo_interface
   }
   
   model AnonymousType_salesRefundOrderV1ExecutePostBody {
      items : sales_data_creditmemo_item_creation_interface[]?
      notify : Boolean?
      appendComment : Boolean?
      comment : sales_data_creditmemo_comment_creation_interface?
      arguments : sales_data_creditmemo_creation_arguments_interface?
   }
   
   [[ Shipment interface. A shipment is a delivery package that contains products. A shipment document accompanies the shipment. This document lists the products and their quantities in the delivery package. ]]
   model sales_data_shipment_interface {
      [[ Billing address ID. ]]
      billing_address_id : Int?
      [[ Created-at timestamp. ]]
      created_at : String?
      [[ Customer ID. ]]
      customer_id : Int?
      [[ Email-sent flag value. ]]
      email_sent : Int?
      [[ Shipment ID. ]]
      entity_id : Int?
      [[ Increment ID. ]]
      increment_id : String?
      [[ Order ID. ]]
      order_id : Int
      [[ Array of packages, if any. Otherwise, null. ]]
      packages : sales_data_shipment_package_interface[]?
      [[ Shipment status. ]]
      shipment_status : Int?
      [[ Shipping address ID. ]]
      shipping_address_id : Int?
      [[ Shipping label. ]]
      shipping_label : String?
      [[ Store ID. ]]
      store_id : Int?
      [[ Total quantity. ]]
      total_qty : Decimal?
      [[ Total weight. ]]
      total_weight : Decimal?
      [[ Updated-at timestamp. ]]
      updated_at : String?
      [[ Array of items. ]]
      items : sales_data_shipment_item_interface[]
      [[ Array of tracks. ]]
      tracks : sales_data_shipment_track_interface[]
      [[ Array of comments. ]]
      comments : sales_data_shipment_comment_interface[]
      extension_attributes : sales_data_shipment_extension_interface?
   }
   
   [[ Shipment package interface. A shipment is a delivery package that contains products. A shipment document accompanies the shipment. This document lists the products and their quantities in the delivery package. ]]
   model sales_data_shipment_package_interface {
      extension_attributes : sales_data_shipment_package_extension_interface?
   }
   
   [[ ExtensionInterface class for @see \Magento\Sales\Api\Data\ShipmentPackageInterface ]]
   type sales_data_shipment_package_extension_interface
   
   [[ Shipment item interface. A shipment is a delivery package that contains products. A shipment document accompanies the shipment. This document lists the products and their quantities in the delivery package. A product is an item in a shipment. ]]
   model sales_data_shipment_item_interface {
      [[ Additional data. ]]
      additional_data : String?
      [[ Description. ]]
      description : String?
      [[ Shipment item ID. ]]
      entity_id : Int?
      [[ Name. ]]
      name : String?
      [[ Parent ID. ]]
      parent_id : Int?
      [[ Price. ]]
      price : Decimal?
      [[ Product ID. ]]
      product_id : Int?
      [[ Row total. ]]
      row_total : Decimal?
      [[ SKU. ]]
      sku : String?
      [[ Weight. ]]
      weight : Decimal?
      extension_attributes : sales_data_shipment_item_extension_interface?
      [[ Order item ID. ]]
      order_item_id : Int
      [[ Quantity. ]]
      qty : Decimal
   }
   
   [[ ExtensionInterface class for @see \Magento\Sales\Api\Data\ShipmentItemInterface ]]
   type sales_data_shipment_item_extension_interface
   
   [[ Shipment track interface. A shipment is a delivery package that contains products. A shipment document accompanies the shipment. This document lists the products and their quantities in the delivery package. Merchants and customers can track shipments. ]]
   model sales_data_shipment_track_interface {
      [[ The order_id for the shipment package. ]]
      order_id : Int
      [[ Created-at timestamp. ]]
      created_at : String?
      [[ Shipment package ID. ]]
      entity_id : Int?
      [[ Parent ID. ]]
      parent_id : Int
      [[ Updated-at timestamp. ]]
      updated_at : String?
      [[ Weight. ]]
      weight : Decimal
      [[ Quantity. ]]
      qty : Decimal
      [[ Description. ]]
      description : String
      extension_attributes : sales_data_shipment_track_extension_interface?
      [[ Track number. ]]
      track_number : String
      [[ Title. ]]
      title : String
      [[ Carrier code. ]]
      carrier_code : String
   }
   
   [[ ExtensionInterface class for @see \Magento\Sales\Api\Data\ShipmentTrackInterface ]]
   type sales_data_shipment_track_extension_interface
   
   [[ Shipment comment interface. A shipment is a delivery package that contains products. A shipment document accompanies the shipment. This document lists the products and their quantities in the delivery package. A shipment document can contain comments. ]]
   model sales_data_shipment_comment_interface {
      [[ Is-customer-notified flag value. ]]
      is_customer_notified : Int
      [[ Parent ID. ]]
      parent_id : Int
      extension_attributes : sales_data_shipment_comment_extension_interface?
      [[ Comment. ]]
      comment : String
      [[ Is-visible-on-storefront flag value. ]]
      is_visible_on_front : Int
      [[ Created-at timestamp. ]]
      created_at : String?
      [[ Invoice ID. ]]
      entity_id : Int?
   }
   
   [[ ExtensionInterface class for @see \Magento\Sales\Api\Data\ShipmentCommentInterface ]]
   type sales_data_shipment_comment_extension_interface
   
   [[ ExtensionInterface class for @see \Magento\Sales\Api\Data\ShipmentInterface ]]
   model sales_data_shipment_extension_interface {
      source_code : String?
   }
   
   [[ Shipment search result interface. A shipment is a delivery package that contains products. A shipment document accompanies the shipment. This document lists the products and their quantities in the delivery package. ]]
   model sales_data_shipment_search_result_interface {
      [[ Array of collection items. ]]
      items : sales_data_shipment_interface[]
      search_criteria : framework_search_criteria_interface
      [[ Total count. ]]
      total_count : Int
   }
   
   model AnonymousType_salesShipmentRepositoryV1SavePostBody {
      entity : sales_data_shipment_interface
   }
   
   [[ Shipment comment search result interface. A shipment is a delivery package that contains products. A shipment document accompanies the shipment. This document lists the products and their quantities in the delivery package. A shipment document can contain comments. ]]
   model sales_data_shipment_comment_search_result_interface {
      [[ Array of collection items. ]]
      items : sales_data_shipment_comment_interface[]
      search_criteria : framework_search_criteria_interface
      [[ Total count. ]]
      total_count : Int
   }
   
   model AnonymousType_salesShipmentCommentRepositoryV1SavePostBody {
      entity : sales_data_shipment_comment_interface
   }
   
   model AnonymousType_salesShipmentTrackRepositoryV1SavePostBody {
      entity : sales_data_shipment_track_interface
   }
   
   [[ Input argument for shipment item creation Interface ShipmentItemCreationInterface ]]
   model sales_data_shipment_item_creation_interface {
      extension_attributes : sales_data_shipment_item_creation_extension_interface?
      [[ Order item ID. ]]
      order_item_id : Int
      [[ Quantity. ]]
      qty : Decimal
   }
   
   [[ ExtensionInterface class for @see \Magento\Sales\Api\Data\ShipmentItemCreationInterface ]]
   type sales_data_shipment_item_creation_extension_interface
   
   [[ Interface ShipmentCommentCreationInterface ]]
   model sales_data_shipment_comment_creation_interface {
      extension_attributes : sales_data_shipment_comment_creation_extension_interface?
      [[ Comment. ]]
      comment : String
      [[ Is-visible-on-storefront flag value. ]]
      is_visible_on_front : Int
   }
   
   [[ ExtensionInterface class for @see \Magento\Sales\Api\Data\ShipmentCommentCreationInterface ]]
   type sales_data_shipment_comment_creation_extension_interface
   
   [[ Shipment Track Creation interface. ]]
   model sales_data_shipment_track_creation_interface {
      extension_attributes : sales_data_shipment_track_creation_extension_interface?
      [[ Track number. ]]
      track_number : String
      [[ Title. ]]
      title : String
      [[ Carrier code. ]]
      carrier_code : String
   }
   
   [[ ExtensionInterface class for @see \Magento\Sales\Api\Data\ShipmentTrackCreationInterface ]]
   type sales_data_shipment_track_creation_extension_interface
   
   [[ Shipment package interface. A shipment is a delivery package that contains products. A shipment document accompanies the shipment. This document lists the products and their quantities in the delivery package. ]]
   model sales_data_shipment_package_creation_interface {
      extension_attributes : sales_data_shipment_package_creation_extension_interface?
   }
   
   [[ ExtensionInterface class for @see \Magento\Sales\Api\Data\ShipmentPackageCreationInterface ]]
   type sales_data_shipment_package_creation_extension_interface
   
   [[ Interface for creation arguments for Shipment. ]]
   model sales_data_shipment_creation_arguments_interface {
      extension_attributes : sales_data_shipment_creation_arguments_extension_interface?
   }
   
   [[ ExtensionInterface class for @see \Magento\Sales\Api\Data\ShipmentCreationArgumentsInterface ]]
   model sales_data_shipment_creation_arguments_extension_interface {
      source_code : String?
   }
   
   model AnonymousType_salesShipOrderV1ExecutePostBody {
      items : sales_data_shipment_item_creation_interface[]?
      notify : Boolean?
      appendComment : Boolean?
      comment : sales_data_shipment_comment_creation_interface?
      tracks : sales_data_shipment_track_creation_interface[]?
      packages : sales_data_shipment_package_creation_interface[]?
      arguments : sales_data_shipment_creation_arguments_interface?
   }
   
   [[ Transaction interface. A transaction is an interaction between a merchant and a customer such as a purchase, a credit, a refund, and so on. ]]
   model sales_data_transaction_interface {
      [[ Transaction ID. ]]
      transaction_id : Int
      [[ The parent ID for the transaction. Otherwise, null. ]]
      parent_id : Int?
      [[ Order ID. ]]
      order_id : Int
      [[ Payment ID. ]]
      payment_id : Int
      [[ Transaction business ID. ]]
      txn_id : String
      [[ Parent transaction business ID. ]]
      parent_txn_id : String
      [[ Transaction type. ]]
      txn_type : String
      [[ Is-closed flag value. ]]
      is_closed : Int
      [[ Array of additional information. Otherwise, null. ]]
      additional_information : String[]?
      [[ Created-at timestamp. ]]
      created_at : String
      [[ Array of child transactions. ]]
      child_transactions : sales_data_transaction_interface[]
      extension_attributes : sales_data_transaction_extension_interface?
   }
   
   [[ ExtensionInterface class for @see \Magento\Sales\Api\Data\TransactionInterface ]]
   type sales_data_transaction_extension_interface
   
   [[ Transaction search result interface. A transaction is an interaction between a merchant and a customer such as a purchase, a credit, a refund, and so on. ]]
   model sales_data_transaction_search_result_interface {
      [[ Array of collection items. ]]
      items : sales_data_transaction_interface[]
      search_criteria : framework_search_criteria_interface
      [[ Total count. ]]
      total_count : Int
   }
   
   [[ Input argument for invoice creation Interface InvoiceItemCreationInterface ]]
   model sales_data_invoice_item_creation_interface {
      extension_attributes : sales_data_invoice_item_creation_extension_interface?
      [[ Order item ID. ]]
      order_item_id : Int
      [[ Quantity. ]]
      qty : Decimal
   }
   
   [[ ExtensionInterface class for @see \Magento\Sales\Api\Data\InvoiceItemCreationInterface ]]
   type sales_data_invoice_item_creation_extension_interface
   
   [[ Interface InvoiceCommentCreationInterface ]]
   model sales_data_invoice_comment_creation_interface {
      extension_attributes : sales_data_invoice_comment_creation_extension_interface?
      [[ Comment. ]]
      comment : String
      [[ Is-visible-on-storefront flag value. ]]
      is_visible_on_front : Int
   }
   
   [[ ExtensionInterface class for @see \Magento\Sales\Api\Data\InvoiceCommentCreationInterface ]]
   type sales_data_invoice_comment_creation_extension_interface
   
   [[ Interface for creation arguments for Invoice. ]]
   model sales_data_invoice_creation_arguments_interface {
      extension_attributes : sales_data_invoice_creation_arguments_extension_interface?
   }
   
   [[ ExtensionInterface class for @see \Magento\Sales\Api\Data\InvoiceCreationArgumentsInterface ]]
   type sales_data_invoice_creation_arguments_extension_interface
   
   model AnonymousType_salesInvoiceOrderV1ExecutePostBody {
      capture : Boolean?
      items : sales_data_invoice_item_creation_interface[]?
      notify : Boolean?
      appendComment : Boolean?
      comment : sales_data_invoice_comment_creation_interface?
      arguments : sales_data_invoice_creation_arguments_interface?
   }
   
   [[ Interface ShippingInformationInterface ]]
   model checkout_data_shipping_information_interface {
      shipping_address : quote_data_address_interface
      billing_address : quote_data_address_interface?
      [[ Shipping method code ]]
      shipping_method_code : String
      [[ Carrier code ]]
      shipping_carrier_code : String
      extension_attributes : checkout_data_shipping_information_extension_interface?
      [[ Custom attributes values. ]]
      custom_attributes : framework_attribute_interface[]?
   }
   
   [[ ExtensionInterface class for @see \Magento\Checkout\Api\Data\ShippingInformationInterface ]]
   type checkout_data_shipping_information_extension_interface
   
   model AnonymousType_checkoutGuestShippingInformationManagementV1SaveAddressInformationPostBody {
      addressInformation : checkout_data_shipping_information_interface
   }
   
   [[ Interface PaymentDetailsInterface ]]
   model checkout_data_payment_details_interface {
      payment_methods : quote_data_payment_method_interface[]
      totals : quote_data_totals_interface
      extension_attributes : checkout_data_payment_details_extension_interface?
   }
   
   [[ ExtensionInterface class for @see \Magento\Checkout\Api\Data\PaymentDetailsInterface ]]
   type checkout_data_payment_details_extension_interface
   
   model AnonymousType_checkoutShippingInformationManagementV1SaveAddressInformationPostBody {
      addressInformation : checkout_data_shipping_information_interface
   }
   
   [[ Interface TotalsInformationInterface ]]
   model checkout_data_totals_information_interface {
      address : quote_data_address_interface
      [[ Shipping method code ]]
      shipping_method_code : String?
      [[ Carrier code ]]
      shipping_carrier_code : String?
      extension_attributes : checkout_data_totals_information_extension_interface?
      [[ Custom attributes values. ]]
      custom_attributes : framework_attribute_interface[]?
   }
   
   [[ ExtensionInterface class for @see \Magento\Checkout\Api\Data\TotalsInformationInterface ]]
   type checkout_data_totals_information_extension_interface
   
   model AnonymousType_checkoutTotalsInformationManagementV1CalculatePostBody {
      addressInformation : checkout_data_totals_information_interface
   }
   
   model AnonymousType_checkoutGuestTotalsInformationManagementV1CalculatePostBody {
      addressInformation : checkout_data_totals_information_interface
   }
   
   model AnonymousType_checkoutGuestPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostBody {
      email : String
      paymentMethod : quote_data_payment_interface
      billingAddress : quote_data_address_interface?
   }
   
   model AnonymousType_checkoutGuestPaymentInformationManagementV1SavePaymentInformationPostBody {
      email : String
      paymentMethod : quote_data_payment_interface
      billingAddress : quote_data_address_interface?
   }
   
   model AnonymousType_checkoutPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostBody {
      paymentMethod : quote_data_payment_interface
      billingAddress : quote_data_address_interface?
   }
   
   model AnonymousType_checkoutPaymentInformationManagementV1SavePaymentInformationPostBody {
      paymentMethod : quote_data_payment_interface
      billingAddress : quote_data_address_interface?
   }
   
   model AnonymousType_bundleProductLinkManagementV1AddChildByProductSkuPostBody {
      linkedProduct : bundle_data_link_interface
   }
   
   model AnonymousType_bundleProductLinkManagementV1SaveChildPutBody {
      linkedProduct : bundle_data_link_interface
   }
   
   [[ Interface OptionTypeInterface ]]
   model bundle_data_option_type_interface {
      [[ Type label ]]
      label : String
      [[ Type code ]]
      code : String
      extension_attributes : bundle_data_option_type_extension_interface?
   }
   
   [[ ExtensionInterface class for @see \Magento\Bundle\Api\Data\OptionTypeInterface ]]
   type bundle_data_option_type_extension_interface
   
   model AnonymousType_bundleProductOptionManagementV1SavePostBody {
      option : bundle_data_option_interface
   }
   
   model AnonymousType_bundleProductOptionManagementV1SavePutBody {
      option : bundle_data_option_interface
   }
   
   model AnonymousType_integrationAdminTokenServiceV1CreateAdminAccessTokenPostBody {
      username : String
      password : String
   }
   
   model AnonymousType_integrationCustomerTokenServiceV1CreateCustomerAccessTokenPostBody {
      username : String
      password : String
   }
   
   model AnonymousType_downloadableLinkRepositoryV1SavePostBody {
      link : downloadable_data_link_interface
      isGlobalScopeContent : Boolean?
   }
   
   model AnonymousType_downloadableLinkRepositoryV1SavePutBody {
      link : downloadable_data_link_interface
      isGlobalScopeContent : Boolean?
   }
   
   model AnonymousType_downloadableSampleRepositoryV1SavePostBody {
      sample : downloadable_data_sample_interface
      isGlobalScopeContent : Boolean?
   }
   
   model AnonymousType_downloadableSampleRepositoryV1SavePutBody {
      sample : downloadable_data_sample_interface
      isGlobalScopeContent : Boolean?
   }
   
   model AnonymousType_giftMessageCartRepositoryV1SavePostBody {
      giftMessage : gift_message_data_message_interface
   }
   
   model AnonymousType_giftMessageItemRepositoryV1SavePostBody {
      giftMessage : gift_message_data_message_interface
   }
   
   model AnonymousType_giftMessageGuestCartRepositoryV1SavePostBody {
      giftMessage : gift_message_data_message_interface
   }
   
   model AnonymousType_giftMessageGuestItemRepositoryV1SavePostBody {
      giftMessage : gift_message_data_message_interface
   }
   
   model AnonymousType_configurableProductLinkManagementV1AddChildPostBody {
      childSku : String
   }
   
   model AnonymousType_configurableProductConfigurableProductManagementV1GenerateVariationPutBody {
      product : catalog_data_product_interface
      options : configurable_product_data_option_interface[]
   }
   
   model AnonymousType_configurableProductOptionRepositoryV1SavePutBody {
      option : configurable_product_data_option_interface
   }
   
   model AnonymousType_configurableProductOptionRepositoryV1SavePostBody {
      option : configurable_product_data_option_interface
   }
   
   [[ Represents link with collected data and initialized vector for decryption. ]]
   model analytics_data_link_interface {
      url : String
      initialization_vector : String
   }
   
   [[ Search results of Repository::getList method Used fully qualified namespaces in annotations for proper work of WebApi request parser ]]
   model inventory_api_data_source_search_results_interface {
      [[ Sources list ]]
      items : inventory_api_data_source_interface[]
      search_criteria : framework_search_criteria_interface
      [[ Total count. ]]
      total_count : Int
   }
   
   [[ Represents physical storage, i.e. brick and mortar store or warehouse Used fully qualified namespaces in annotations for proper work of WebApi request parser ]]
   model inventory_api_data_source_interface {
      [[ Source code ]]
      source_code : String?
      [[ Source name ]]
      name : String?
      [[ Source email ]]
      email : String?
      [[ Source contact name ]]
      contact_name : String?
      [[ If source is enabled. For new entity can be null ]]
      enabled : Boolean?
      [[ Source description ]]
      description : String?
      [[ Source latitude ]]
      latitude : Decimal?
      [[ Source longitude ]]
      longitude : Decimal?
      [[ Source country id ]]
      country_id : String?
      [[ Region id if source has registered region. ]]
      region_id : Int?
      [[ Region title if source has custom region ]]
      region : String?
      [[ Source city ]]
      city : String?
      [[ Source street name ]]
      street : String?
      [[ Source post code ]]
      postcode : String?
      [[ Source phone number ]]
      phone : String?
      [[ Source fax ]]
      fax : String?
      [[ Is need to use default config ]]
      use_default_carrier_config : Boolean?
      carrier_links : inventory_api_data_source_carrier_link_interface[]?
      extension_attributes : inventory_api_data_source_extension_interface?
   }
   
   [[ Represents relation between some physical storage and shipping method Used fully qualified namespaces in annotations for proper work of WebApi request parser ]]
   model inventory_api_data_source_carrier_link_interface {
      [[ Carrier code ]]
      carrier_code : String?
      [[ Position ]]
      position : Int?
      extension_attributes : inventory_api_data_source_carrier_link_extension_interface?
   }
   
   [[ ExtensionInterface class for @see \Magento\InventoryApi\Api\Data\SourceCarrierLinkInterface ]]
   type inventory_api_data_source_carrier_link_extension_interface
   
   [[ ExtensionInterface class for @see \Magento\InventoryApi\Api\Data\SourceInterface ]]
   model inventory_api_data_source_extension_interface {
      is_pickup_location_active : Boolean?
      frontend_name : String?
      frontend_description : String?
   }
   
   model AnonymousType_inventoryApiSourceRepositoryV1SavePostBody {
      source : inventory_api_data_source_interface
   }
   
   model AnonymousType_inventoryApiSourceRepositoryV1SavePutBody {
      source : inventory_api_data_source_interface
   }
   
   [[ Search results of Repository::getList method Used fully qualified namespaces in annotations for proper work of WebApi request parser ]]
   model inventory_api_data_stock_search_results_interface {
      [[ Stocks list ]]
      items : inventory_api_data_stock_interface[]
      search_criteria : framework_search_criteria_interface
      [[ Total count. ]]
      total_count : Int
   }
   
   [[ Represents product aggregation among some different physical storages (in technical words, it is an index) Used fully qualified namespaces in annotations for proper work of WebApi request parser ]]
   model inventory_api_data_stock_interface {
      [[ Stock id ]]
      stock_id : Int?
      [[ Stock name ]]
      name : String?
      extension_attributes : inventory_api_data_stock_extension_interface?
   }
   
   [[ TODO: temporal fix of extension classes generation during installation ExtensionInterface class for @see \Magento\InventoryApi\Api\Data\StockInterface ]]
   model inventory_api_data_stock_extension_interface {
      sales_channels : inventory_sales_api_data_sales_channel_interface[]?
   }
   
   [[ Represents sales channels (which are a linkage between stocks and websites, customer groups, etc.) Used fully qualified namespaces in annotations for proper work of WebApi request parser ]]
   model inventory_sales_api_data_sales_channel_interface {
      [[ Sales channel type ]]
      `type` : String?
      [[ Sales channel code ]]
      code : String?
      extension_attributes : inventory_sales_api_data_sales_channel_extension_interface?
   }
   
   [[ ExtensionInterface class for @see \Magento\InventorySalesApi\Api\Data\SalesChannelInterface ]]
   type inventory_sales_api_data_sales_channel_extension_interface
   
   model AnonymousType_inventoryApiStockRepositoryV1SavePostBody {
      stock : inventory_api_data_stock_interface
   }
   
   model AnonymousType_inventoryApiStockRepositoryV1SavePutBody {
      stock : inventory_api_data_stock_interface
   }
   
   [[ Search results of Repository::getList method Used fully qualified namespaces in annotations for proper work of WebApi request parser ]]
   model inventory_api_data_stock_source_link_search_results_interface {
      [[ StockSourceLink list ]]
      items : inventory_api_data_stock_source_link_interface[]
      search_criteria : framework_search_criteria_interface
      [[ Total count. ]]
      total_count : Int
   }
   
   [[ Represents relation between Stock and Source entities. Used fully qualified namespaces in annotations for proper work of WebApi request parser ]]
   model inventory_api_data_stock_source_link_interface {
      [[ Stock id ]]
      stock_id : Int?
      [[ Source code of the link ]]
      source_code : String?
      [[ Priority of the link ]]
      priority : Int?
      extension_attributes : inventory_api_data_stock_source_link_extension_interface?
   }
   
   [[ ExtensionInterface class for @see \Magento\InventoryApi\Api\Data\StockSourceLinkInterface ]]
   type inventory_api_data_stock_source_link_extension_interface
   
   model AnonymousType_inventoryApiStockSourceLinksSaveV1ExecutePostBody {
      links : inventory_api_data_stock_source_link_interface[]
   }
   
   model AnonymousType_inventoryApiStockSourceLinksDeleteV1ExecutePostBody {
      links : inventory_api_data_stock_source_link_interface[]
   }
   
   [[ Search results of Repository::getList method Used fully qualified namespaces in annotations for proper work of WebApi request parser ]]
   model inventory_api_data_source_item_search_results_interface {
      [[ Source items list ]]
      items : inventory_api_data_source_item_interface[]
      search_criteria : framework_search_criteria_interface
      [[ Total count. ]]
      total_count : Int
   }
   
   [[ Represents amount of product on physical storage Entity id getter is missed because entity identifies by compound identifier (sku and source_code) Used fully qualified namespaces in annotations for proper work of WebApi request parser ]]
   model inventory_api_data_source_item_interface {
      [[ Source item sku ]]
      sku : String?
      [[ Source code ]]
      source_code : String?
      [[ Source item quantity ]]
      quantity : Decimal?
      [[ Source item status (One of self::STATUS_*) ]]
      status : Int?
      extension_attributes : inventory_api_data_source_item_extension_interface?
   }
   
   [[ ExtensionInterface class for @see \Magento\InventoryApi\Api\Data\SourceItemInterface ]]
   type inventory_api_data_source_item_extension_interface
   
   model AnonymousType_inventoryApiSourceItemsSaveV1ExecutePostBody {
      sourceItems : inventory_api_data_source_item_interface[]
   }
   
   model AnonymousType_inventoryApiSourceItemsDeleteV1ExecutePostBody {
      sourceItems : inventory_api_data_source_item_interface[]
   }
   
   model AnonymousType_inventoryCatalogApiBulkSourceAssignV1ExecutePostBody {
      skus : String[]
      sourceCodes : String[]
   }
   
   model AnonymousType_inventoryCatalogApiBulkSourceUnassignV1ExecutePostBody {
      skus : String[]
      sourceCodes : String[]
   }
   
   model AnonymousType_inventoryCatalogApiBulkInventoryTransferV1ExecutePostBody {
      skus : String[]
      originSource : String
      destinationSource : String
      unassignFromOrigin : Boolean
   }
   
   [[ Specifies item and quantity for partial inventory transfer. ]]
   model inventory_catalog_api_data_partial_inventory_transfer_item_interface {
      sku : String
      qty : Decimal
   }
   
   model AnonymousType_inventoryCatalogApiBulkPartialInventoryTransferV1ExecutePostBody {
      originSourceCode : String
      destinationSourceCode : String
      items : inventory_catalog_api_data_partial_inventory_transfer_item_interface[]
   }
   
   [[ DTO for latitude and longitude request ]]
   model inventory_distance_based_source_selection_api_data_lat_lng_interface {
      [[ Latitude ]]
      lat : Decimal
      [[ Longitude ]]
      lng : Decimal
   }
   
   [[ Interface for ExportStockSalableQtySearchResult ]]
   model inventory_export_stock_api_data_export_stock_salable_qty_search_result_interface {
      items : framework_extensible_data_interface[]
      search_criteria : framework_search_criteria_interface
      [[ Total count. ]]
      total_count : Int
   }
   
   [[ Interface for entities which can be extended with extension attributes. ]]
   type framework_extensible_data_interface
   
   [[ Class ExportStockIndexDataResultInterface for result Inventory stock index dump export ]]
   model inventory_export_stock_api_data_product_stock_index_data_interface {
      [[ Product SKU ]]
      sku : String
      [[ Product QTY ]]
      qty : Decimal
      [[ Product is salable flag ]]
      is_salable : Boolean
   }
   
   [[ Represents "is product salable" result interface. ]]
   model inventory_sales_api_data_is_product_salable_result_interface {
      [[ Product sku from result. ]]
      sku : String
      [[ Stock id from result. ]]
      stock_id : Int
      [[ Is salable result. ]]
      salable : Boolean
      extension_attributes : inventory_sales_api_data_is_product_salable_result_extension_interface?
   }
   
   [[ ExtensionInterface class for @see \Magento\InventorySalesApi\Api\Data\IsProductSalableResultInterface ]]
   type inventory_sales_api_data_is_product_salable_result_extension_interface
   
   [[ Represents result of service Magento\InventorySalesApi\Api\IsProductSalableForRequestedQtyInterface::execute ]]
   model inventory_sales_api_data_product_salable_result_interface {
      salable : Boolean
      errors : inventory_sales_api_data_product_salability_error_interface[]
      extension_attributes : inventory_sales_api_data_product_salable_result_extension_interface?
   }
   
   model inventory_sales_api_data_product_salability_error_interface {
      code : String
      message : String
      extension_attributes : inventory_sales_api_data_product_salability_error_extension_interface?
   }
   
   [[ ExtensionInterface class for @see \Magento\InventorySalesApi\Api\Data\ProductSalabilityErrorInterface ]]
   type inventory_sales_api_data_product_salability_error_extension_interface
   
   [[ ExtensionInterface class for @see \Magento\InventorySalesApi\Api\Data\ProductSalableResultInterface ]]
   type inventory_sales_api_data_product_salable_result_extension_interface
   
   [[ Represents "is product salable for requested quantity" result interface. ]]
   model inventory_sales_api_data_is_product_salable_for_requested_qty_result_interface {
      [[ Product sku from result. ]]
      sku : String
      [[ Stock id from result. ]]
      stock_id : Int
      [[ Is salable result. ]]
      salable : Boolean
      [[ Errors from result. ]]
      errors : inventory_sales_api_data_product_salability_error_interface[]
      extension_attributes : inventory_sales_api_data_is_product_salable_for_requested_qty_result_extension_interface?
   }
   
   [[ ExtensionInterface class for @see \Magento\InventorySalesApi\Api\Data\IsProductSalableForRequestedQtyResultInterface ]]
   type inventory_sales_api_data_is_product_salable_for_requested_qty_result_extension_interface
   
   [[ Search results for providing pickup locations. ]]
   model inventory_in_store_pickup_api_data_search_result_interface {
      [[ Items list. ]]
      items : inventory_in_store_pickup_api_data_pickup_location_interface[]
      search_request : inventory_in_store_pickup_api_data_search_request_interface
      [[ Total count. ]]
      total_count : Int
   }
   
   [[ Represents sources projection on In-Store Pickup context. Realisation must follow immutable DTO concept. Partial immutability done according to restriction of current Extension Attributes implementation. ]]
   model inventory_in_store_pickup_api_data_pickup_location_interface {
      [[ Source code of Pickup Location. ]]
      pickup_location_code : String
      [[ Pickup Location name. ]]
      name : String?
      [[ Pickup Location contact email. ]]
      email : String?
      [[ Fax contact info. ]]
      fax : String?
      [[ Pickup Location contact name. ]]
      contact_name : String?
      [[ Pickup Location description. ]]
      description : String?
      [[ Pickup Location latitude. ]]
      latitude : Decimal?
      [[ Pickup Location longitude. ]]
      longitude : Decimal?
      [[ Pickup Location country ID. ]]
      country_id : String?
      [[ Pickup Location region ID. ]]
      region_id : Int?
      [[ Pickup Location region. ]]
      region : String?
      [[ Pickup Location city. ]]
      city : String?
      [[ Pickup Location street. ]]
      street : String?
      [[ Pickup Location postcode. ]]
      postcode : String?
      [[ Pickup Location phone. ]]
      phone : String?
      extension_attributes : inventory_in_store_pickup_api_data_pickup_location_extension_interface?
   }
   
   [[ ExtensionInterface class for @see \Magento\InventoryInStorePickupApi\Api\Data\PickupLocationInterface ]]
   type inventory_in_store_pickup_api_data_pickup_location_extension_interface
   
   [[ Endpoint used to search Pickup Locations by different parameters: - by attribute filters fields @see \Magento\InventoryInStorePickupApi\Api\Data\SearchRequest\FiltersInterface - by distance to the address @see \Magento\InventoryInStorePickupApi\Api\Data\SearchRequest\AreaInterface Also, endpoint supports paging and sort orders. ]]
   model inventory_in_store_pickup_api_data_search_request_interface {
      area : inventory_in_store_pickup_api_data_search_request_area_interface?
      filters : inventory_in_store_pickup_api_data_search_request_filters_interface?
      [[ Page size. ]]
      page_size : Int?
      [[ Current page. ]]
      current_page : Int
      [[ Sales Channel Type. ]]
      scope_type : String
      [[ Sales Channel code. ]]
      scope_code : String
      [[ Sort Order. ]]
      sort : framework_sort_order[]?
      extension_attributes : inventory_in_store_pickup_api_data_search_request_extension_interface?
   }
   
   [[ Filter by Distance to the Address. Pickup Locations will be filtered by distance according to the geo-position of the entered address. Required fields for the address are country and one of the field: region or city or postcode. ]]
   model inventory_in_store_pickup_api_data_search_request_area_interface {
      [[ Search radius in KM. ]]
      radius : Int
      [[ Search term string. ]]
      search_term : String
   }
   
   [[ Filter to filter by Fields. Each field may be filtered with different condition type. Supported condition types restricted by @see \Magento\Framework\Api\SearchCriteriaInterface ]]
   model inventory_in_store_pickup_api_data_search_request_filters_interface {
      country : inventory_in_store_pickup_api_data_search_request_filter_interface?
      postcode : inventory_in_store_pickup_api_data_search_request_filter_interface?
      region : inventory_in_store_pickup_api_data_search_request_filter_interface?
      region_id : inventory_in_store_pickup_api_data_search_request_filter_interface?
      city : inventory_in_store_pickup_api_data_search_request_filter_interface?
      street : inventory_in_store_pickup_api_data_search_request_filter_interface?
      name : inventory_in_store_pickup_api_data_search_request_filter_interface?
      pickup_location_code : inventory_in_store_pickup_api_data_search_request_filter_interface?
   }
   
   [[ Filter for Pickup Location search. ]]
   model inventory_in_store_pickup_api_data_search_request_filter_interface {
      [[ Value. ]]
      value : String
      [[ Condition Type. ]]
      condition_type : String
   }
   
   [[ ExtensionInterface class for @see \Magento\InventoryInStorePickupApi\Api\Data\SearchRequestInterface ]]
   model inventory_in_store_pickup_api_data_search_request_extension_interface {
      products_info : inventory_in_store_pickup_api_data_search_request_product_info_interface[]?
   }
   
   [[ Product Info Data Transfer Object. ]]
   model inventory_in_store_pickup_api_data_search_request_product_info_interface {
      [[ Product SKU. ]]
      sku : String
      extension_attributes : inventory_in_store_pickup_api_data_search_request_product_info_extension_interface?
   }
   
   [[ ExtensionInterface class for @see \Magento\InventoryInStorePickupApi\Api\Data\SearchRequest\ProductInfoInterface ]]
   type inventory_in_store_pickup_api_data_search_request_product_info_extension_interface
   
   [[ Data Interface representing particular Source Selection Algorithm ]]
   model inventory_source_selection_api_data_source_selection_algorithm_interface {
      code : String
      title : String
      description : String
      extension_attributes : inventory_source_selection_api_data_source_selection_algorithm_extension_interface?
   }
   
   [[ ExtensionInterface class for @see \Magento\InventorySourceSelectionApi\Api\Data\SourceSelectionAlgorithmInterface ]]
   type inventory_source_selection_api_data_source_selection_algorithm_extension_interface
   
   [[ Request products in a given Qty and StockId ]]
   model inventory_source_selection_api_data_inventory_request_interface {
      [[ Stock Id ]]
      stock_id : Int
      [[ Items ]]
      items : inventory_source_selection_api_data_item_request_interface[]
      extension_attributes : inventory_source_selection_api_data_inventory_request_extension_interface?
   }
   
   [[ Represents requested quantity for particular product ]]
   model inventory_source_selection_api_data_item_request_interface {
      [[ SKU ]]
      sku : String
      [[ Product Quantity ]]
      qty : Decimal
      extension_attributes : inventory_source_selection_api_data_item_request_extension_interface?
   }
   
   [[ ExtensionInterface class for @see \Magento\InventorySourceSelectionApi\Api\Data\ItemRequestInterface ]]
   type inventory_source_selection_api_data_item_request_extension_interface
   
   [[ ExtensionInterface class for @see \Magento\InventorySourceSelectionApi\Api\Data\InventoryRequestInterface ]]
   model inventory_source_selection_api_data_inventory_request_extension_interface {
      destination_address : inventory_source_selection_api_data_address_interface?
   }
   
   [[ Data interface for shipping source or shipping destination ]]
   model inventory_source_selection_api_data_address_interface {
      [[ Shipping country ]]
      country : String
      [[ Shipping postcode ]]
      postcode : String
      [[ Shipping street address ]]
      street : String
      [[ Shipping region ]]
      region : String
      [[ Shipping city ]]
      city : String
   }
   
   model AnonymousType_inventorySourceSelectionApiSourceSelectionServiceV1ExecutePostBody {
      inventoryRequest : inventory_source_selection_api_data_inventory_request_interface
      algorithmCode : String
   }
   
   [[ Result of how we will deduct product qty from different Sources ]]
   model inventory_source_selection_api_data_source_selection_result_interface {
      source_selection_items : inventory_source_selection_api_data_source_selection_item_interface[]
      shippable : Boolean
      extension_attributes : inventory_source_selection_api_data_source_selection_result_extension_interface?
   }
   
   [[ Represents source selection result for the specific source and SKU ]]
   model inventory_source_selection_api_data_source_selection_item_interface {
      [[ Source code ]]
      source_code : String
      [[ Item SKU ]]
      sku : String
      [[ Quantity which will be deducted for this source ]]
      qty_to_deduct : Decimal
      [[ Available quantity for this source ]]
      qty_available : Decimal
      extension_attributes : inventory_source_selection_api_data_source_selection_item_extension_interface?
   }
   
   [[ ExtensionInterface class for @see \Magento\InventorySourceSelectionApi\Api\Data\SourceSelectionItemInterface ]]
   type inventory_source_selection_api_data_source_selection_item_extension_interface
   
   [[ ExtensionInterface class for @see \Magento\InventorySourceSelectionApi\Api\Data\SourceSelectionResultInterface ]]
   type inventory_source_selection_api_data_source_selection_result_extension_interface
   
   model AnonymousType_inventoryInStorePickupSalesApiNotifyOrdersAreReadyForPickupV1ExecutePostBody {
      orderIds : Int[]
   }
   
   [[ Operation result object that contains status of the operation. ]]
   model inventory_in_store_pickup_sales_api_data_result_interface {
      [[ Operation result successful. ]]
      successful : Boolean
      [[ Error information for failed operations. ]]
      errors : String[]
      extension_attributes : inventory_in_store_pickup_sales_api_data_result_extension_interface?
   }
   
   [[ ExtensionInterface class for @see \Magento\InventoryInStorePickupSalesApi\Api\Data\ResultInterface ]]
   type inventory_in_store_pickup_sales_api_data_result_extension_interface
   
   [[ Represents a Source Item Configuration object Used fully qualified namespaces in annotations for proper work of WebApi request parser ]]
   model inventory_low_quantity_notification_api_data_source_item_configuration_interface {
      [[ Source code ]]
      source_code : String?
      [[ Notify stock qty ]]
      notify_stock_qty : Decimal?
      [[ SKU ]]
      sku : String?
      extension_attributes : inventory_low_quantity_notification_api_data_source_item_configuration_extension_interface?
   }
   
   [[ ExtensionInterface class for @see \Magento\InventoryLowQuantityNotificationApi\Api\Data\SourceItemConfigurationInterface ]]
   type inventory_low_quantity_notification_api_data_source_item_configuration_extension_interface
   
   model AnonymousType_inventoryLowQuantityNotificationApiSourceItemConfigurationsSaveV1ExecutePostBody {
      sourceItemConfigurations : inventory_low_quantity_notification_api_data_source_item_configuration_interface[]
   }
   
   model AnonymousType_inventoryLowQuantityNotificationApiDeleteSourceItemsConfigurationV1ExecutePostBody {
      sourceItems : inventory_api_data_source_item_interface[]
   }
   
   [[ Adobe Stock Asset data class interface ]]
   model adobe_stock_asset_api_data_asset_interface {
      [[ ID ]]
      id : Int?
      [[ Media gallery asset id ]]
      media_gallery_id : Int
      [[ Category ]]
      category_id : Int?
      category : adobe_stock_asset_api_data_category_interface?
      [[ The creator ]]
      creator_id : Int?
      creator : adobe_stock_asset_api_data_creator_interface?
      [[ Licensed ]]
      is_licensed : Int
      [[ Creation date ]]
      creation_date : String
      extension_attributes : adobe_stock_asset_api_data_asset_extension_interface?
   }
   
   [[ Adobe Stock asset Category data class ]]
   model adobe_stock_asset_api_data_category_interface {
      [[ The id ]]
      id : Int?
      [[ The category name ]]
      name : String
      extension_attributes : adobe_stock_asset_api_data_category_extension_interface
   }
   
   [[ ExtensionInterface class for @see \Magento\AdobeStockAssetApi\Api\Data\CategoryInterface ]]
   type adobe_stock_asset_api_data_category_extension_interface
   
   [[ Adobe Stock creator data class ]]
   model adobe_stock_asset_api_data_creator_interface {
      [[ The id ]]
      id : Int?
      [[ The creator name ]]
      name : String?
      extension_attributes : adobe_stock_asset_api_data_creator_extension_interface
   }
   
   [[ ExtensionInterface class for @see \Magento\AdobeStockAssetApi\Api\Data\CreatorInterface ]]
   type adobe_stock_asset_api_data_creator_extension_interface
   
   [[ ExtensionInterface class for @see \Magento\AdobeStockAssetApi\Api\Data\AssetInterface ]]
   type adobe_stock_asset_api_data_asset_extension_interface
   
   [[ Interface AssetSearchResultsInterface ]]
   model adobe_stock_asset_api_data_asset_search_results_interface {
      [[ Assets list. ]]
      items : adobe_stock_asset_api_data_asset_interface[]
      search_criteria : framework_search_criteria_interface
      [[ Total count. ]]
      total_count : Int
   }
   
   [[ Interface RuleInterface ]]
   model sales_rule_data_rule_interface {
      [[ Rule id ]]
      rule_id : Int?
      [[ Rule name ]]
      name : String?
      [[ Display label ]]
      store_labels : sales_rule_data_rule_label_interface[]?
      [[ Description ]]
      description : String?
      [[ A list of websites the rule applies to ]]
      website_ids : Int[]
      [[ Ids of customer groups that the rule applies to ]]
      customer_group_ids : Int[]
      [[ The start date when the coupon is active ]]
      from_date : String?
      [[ The end date when the coupon is active ]]
      to_date : String?
      [[ Number of uses per customer ]]
      uses_per_customer : Int
      [[ The coupon is active ]]
      is_active : Boolean
      condition : sales_rule_data_condition_interface?
      action_condition : sales_rule_data_condition_interface?
      [[ To stop rule processing ]]
      stop_rules_processing : Boolean
      [[ Is this field needed ]]
      is_advanced : Boolean
      [[ Product ids ]]
      product_ids : Int[]?
      [[ Sort order ]]
      sort_order : Int
      [[ Simple action of the rule ]]
      simple_action : String?
      [[ Discount amount ]]
      discount_amount : Decimal
      [[ Maximum qty discount is applied ]]
      discount_qty : Decimal?
      [[ Discount step ]]
      discount_step : Int
      [[ The rule applies to shipping ]]
      apply_to_shipping : Boolean
      [[ How many times the rule has been used ]]
      times_used : Int
      [[ Whether the rule is in RSS ]]
      is_rss : Boolean
      [[ Coupon type ]]
      coupon_type : String
      [[ To auto generate coupon ]]
      use_auto_generation : Boolean
      [[ Limit of uses per coupon ]]
      uses_per_coupon : Int
      [[ To grant free shipping ]]
      simple_free_shipping : String?
      extension_attributes : sales_rule_data_rule_extension_interface?
   }
   
   [[ Interface RuleLabelInterface ]]
   model sales_rule_data_rule_label_interface {
      [[ StoreId ]]
      store_id : Int
      [[ The label for the store ]]
      store_label : String
      extension_attributes : sales_rule_data_rule_label_extension_interface?
   }
   
   [[ ExtensionInterface class for @see \Magento\SalesRule\Api\Data\RuleLabelInterface ]]
   type sales_rule_data_rule_label_extension_interface
   
   [[ Interface ConditionInterface ]]
   model sales_rule_data_condition_interface {
      [[ Condition type ]]
      condition_type : String
      [[ List of conditions ]]
      conditions : sales_rule_data_condition_interface[]?
      [[ The aggregator type ]]
      aggregator_type : String?
      [[ The operator of the condition ]]
      operator : String
      [[ The attribute name of the condition ]]
      attribute_name : String?
      [[ The value of the condition ]]
      value : String
      extension_attributes : sales_rule_data_condition_extension_interface?
   }
   
   [[ ExtensionInterface class for @see \Magento\SalesRule\Api\Data\ConditionInterface ]]
   type sales_rule_data_condition_extension_interface
   
   [[ ExtensionInterface class for @see \Magento\SalesRule\Api\Data\RuleInterface ]]
   type sales_rule_data_rule_extension_interface
   
   model AnonymousType_salesRuleRuleRepositoryV1SavePutBody {
      rule : sales_rule_data_rule_interface
   }
   
   model sales_rule_data_rule_search_result_interface {
      [[ Rules. ]]
      items : sales_rule_data_rule_interface[]
      search_criteria : framework_search_criteria_interface
      [[ Total count. ]]
      total_count : Int
   }
   
   model AnonymousType_salesRuleRuleRepositoryV1SavePostBody {
      rule : sales_rule_data_rule_interface
   }
   
   [[ Interface CouponInterface ]]
   model sales_rule_data_coupon_interface {
      [[ Coupon id ]]
      coupon_id : Int?
      [[ The id of the rule associated with the coupon ]]
      rule_id : Int
      [[ Coupon code ]]
      code : String?
      [[ Usage limit ]]
      usage_limit : Int?
      [[ Usage limit per customer ]]
      usage_per_customer : Int?
      [[ The number of times the coupon has been used ]]
      times_used : Int
      [[ Expiration date ]]
      expiration_date : String?
      [[ The coupon is primary coupon for the rule that it's associated with ]]
      is_primary : Boolean
      [[ When the coupon is created ]]
      created_at : String?
      [[ Of coupon ]]
      `type` : Int?
      extension_attributes : sales_rule_data_coupon_extension_interface?
   }
   
   [[ ExtensionInterface class for @see \Magento\SalesRule\Api\Data\CouponInterface ]]
   model sales_rule_data_coupon_extension_interface {
      ddg_extension_attributes : dotdigitalgroup_email_data_coupon_attribute_interface?
   }
   
   model dotdigitalgroup_email_data_coupon_attribute_interface {
      email : String?
      expires_at : String?
   }
   
   model AnonymousType_salesRuleCouponRepositoryV1SavePutBody {
      coupon : sales_rule_data_coupon_interface
   }
   
   model sales_rule_data_coupon_search_result_interface {
      [[ Rules. ]]
      items : sales_rule_data_coupon_interface[]
      search_criteria : framework_search_criteria_interface
      [[ Total count. ]]
      total_count : Int
   }
   
   model AnonymousType_salesRuleCouponRepositoryV1SavePostBody {
      coupon : sales_rule_data_coupon_interface
   }
   
   [[ CouponGenerationSpecInterface ]]
   model sales_rule_data_coupon_generation_spec_interface {
      [[ The id of the rule associated with the coupon ]]
      rule_id : Int
      [[ Format of generated coupon code ]]
      format : String
      [[ Of coupons to generate ]]
      quantity : Int
      [[ Length of coupon code ]]
      length : Int
      [[ The prefix ]]
      prefix : String?
      [[ The suffix ]]
      suffix : String?
      [[ The spacing where the delimiter should exist ]]
      delimiter_at_every : Int?
      [[ The delimiter ]]
      delimiter : String?
      extension_attributes : sales_rule_data_coupon_generation_spec_extension_interface?
   }
   
   [[ ExtensionInterface class for @see \Magento\SalesRule\Api\Data\CouponGenerationSpecInterface ]]
   type sales_rule_data_coupon_generation_spec_extension_interface
   
   model AnonymousType_salesRuleCouponManagementV1GeneratePostBody {
      couponSpec : sales_rule_data_coupon_generation_spec_interface
   }
   
   model AnonymousType_salesRuleCouponManagementV1DeleteByIdsPostBody {
      ids : Int[]
      ignoreInvalidCoupons : Boolean?
   }
   
   [[ Coupon mass delete results interface. ]]
   model sales_rule_data_coupon_mass_delete_result_interface {
      [[ List of failed items. ]]
      failed_items : String[]
      [[ List of missing items. ]]
      missing_items : String[]
   }
   
   model AnonymousType_salesRuleCouponManagementV1DeleteByCodesPostBody {
      codes : String[]
      ignoreInvalidCoupons : Boolean?
   }
   
   [[ Interface AgreementInterface ]]
   model checkout_agreements_data_agreement_interface {
      [[ Agreement ID. ]]
      agreement_id : Int
      [[ Agreement name. ]]
      name : String
      [[ Agreement content. ]]
      content : String
      [[ Agreement content height. Otherwise, null. ]]
      content_height : String?
      [[ Agreement checkbox text. ]]
      checkbox_text : String
      [[ Agreement status. ]]
      is_active : Boolean
      [[ * true - HTML. * false - plain text. ]]
      is_html : Boolean
      [[ The agreement applied mode. ]]
      mode : Int
      extension_attributes : checkout_agreements_data_agreement_extension_interface?
   }
   
   [[ ExtensionInterface class for @see \Magento\CheckoutAgreements\Api\Data\AgreementInterface ]]
   type checkout_agreements_data_agreement_extension_interface
   
   [[ Tax rate interface. ]]
   model tax_data_tax_rate_interface {
      [[ Id ]]
      id : Int?
      [[ Country id ]]
      tax_country_id : String
      [[ Region id ]]
      tax_region_id : Int?
      [[ Region name ]]
      region_name : String?
      [[ Postcode ]]
      tax_postcode : String?
      [[ Zip is range ]]
      zip_is_range : Int?
      [[ Zip range from ]]
      zip_from : Int?
      [[ Zip range to ]]
      zip_to : Int?
      [[ Tax rate in percentage ]]
      rate : Decimal
      [[ Tax rate code ]]
      code : String
      [[ Tax rate titles ]]
      titles : tax_data_tax_rate_title_interface[]?
      extension_attributes : tax_data_tax_rate_extension_interface?
   }
   
   [[ Tax rate title interface. ]]
   model tax_data_tax_rate_title_interface {
      [[ Store id ]]
      store_id : String
      [[ Title value ]]
      value : String
      extension_attributes : tax_data_tax_rate_title_extension_interface?
   }
   
   [[ ExtensionInterface class for @see \Magento\Tax\Api\Data\TaxRateTitleInterface ]]
   type tax_data_tax_rate_title_extension_interface
   
   [[ ExtensionInterface class for @see \Magento\Tax\Api\Data\TaxRateInterface ]]
   type tax_data_tax_rate_extension_interface
   
   model AnonymousType_taxTaxRateRepositoryV1SavePutBody {
      taxRate : tax_data_tax_rate_interface
   }
   
   model AnonymousType_taxTaxRateRepositoryV1SavePostBody {
      taxRate : tax_data_tax_rate_interface
   }
   
   [[ Interface for tax rate search results. ]]
   model tax_data_tax_rate_search_results_interface {
      [[ Items ]]
      items : tax_data_tax_rate_interface[]
      search_criteria : framework_search_criteria_interface
      [[ Total count. ]]
      total_count : Int
   }
   
   [[ Tax rule interface. ]]
   model tax_data_tax_rule_interface {
      [[ Id ]]
      id : Int?
      [[ Tax rule code ]]
      code : String
      [[ Priority ]]
      priority : Int
      [[ Sort order. ]]
      position : Int
      [[ Customer tax class id ]]
      customer_tax_class_ids : Int[]
      [[ Product tax class id ]]
      product_tax_class_ids : Int[]
      [[ Tax rate ids ]]
      tax_rate_ids : Int[]
      [[ Calculate subtotal. ]]
      calculate_subtotal : Boolean?
      extension_attributes : tax_data_tax_rule_extension_interface?
   }
   
   [[ ExtensionInterface class for @see \Magento\Tax\Api\Data\TaxRuleInterface ]]
   type tax_data_tax_rule_extension_interface
   
   model AnonymousType_taxTaxRuleRepositoryV1SavePutBody {
      rule : tax_data_tax_rule_interface
   }
   
   model AnonymousType_taxTaxRuleRepositoryV1SavePostBody {
      rule : tax_data_tax_rule_interface
   }
   
   [[ Interface for tax rule search results. ]]
   model tax_data_tax_rule_search_results_interface {
      [[ Items ]]
      items : tax_data_tax_rule_interface[]
      search_criteria : framework_search_criteria_interface
      [[ Total count. ]]
      total_count : Int
   }
   
   [[ Tax class interface. ]]
   model tax_data_tax_class_interface {
      [[ Tax class ID. ]]
      class_id : Int?
      [[ Tax class name. ]]
      class_name : String
      [[ Tax class type. ]]
      class_type : String
      extension_attributes : tax_data_tax_class_extension_interface?
   }
   
   [[ ExtensionInterface class for @see \Magento\Tax\Api\Data\TaxClassInterface ]]
   type tax_data_tax_class_extension_interface
   
   model AnonymousType_taxTaxClassRepositoryV1SavePostBody {
      taxClass : tax_data_tax_class_interface
   }
   
   model AnonymousType_taxTaxClassRepositoryV1SavePutBody {
      taxClass : tax_data_tax_class_interface
   }
   
   [[ Interface for tax class search results. ]]
   model tax_data_tax_class_search_results_interface {
      [[ Items ]]
      items : tax_data_tax_class_interface[]
      search_criteria : framework_search_criteria_interface
      [[ Total count. ]]
      total_count : Int
   }
   
   [[ Interface BulkStatusInterface Bulk summary data with list of operations items full data. ]]
   model asynchronous_operations_data_detailed_bulk_operations_status_interface {
      [[ Operations list. ]]
      operations_list : asynchronous_operations_data_operation_interface[]
      extension_attributes : asynchronous_operations_data_bulk_summary_extension_interface?
      [[ User type ]]
      user_type : Int
      [[ Bulk uuid ]]
      bulk_id : String
      [[ Bulk description ]]
      description : String
      [[ Bulk scheduled time ]]
      start_time : String
      [[ User id ]]
      user_id : Int
      [[ Total number of operations scheduled in scope of this bulk ]]
      operation_count : Int
   }
   
   [[ Class OperationInterface ]]
   model asynchronous_operations_data_operation_interface {
      extension_attributes : asynchronous_operations_data_operation_extension_interface?
      [[ Id ]]
      id : Int
      [[ Bulk uuid ]]
      bulk_uuid : String
      [[ Queue Topic ]]
      topic_name : String
      [[ Data ]]
      serialized_data : String
      [[ Serialized Data ]]
      result_serialized_data : String
      [[ Operation status ]]
      status : Int
      [[ Result message ]]
      result_message : String
      [[ Error code ]]
      error_code : Int
   }
   
   [[ ExtensionInterface class for @see \Magento\AsynchronousOperations\Api\Data\OperationInterface ]]
   model asynchronous_operations_data_operation_extension_interface {
      start_time : String?
   }
   
   [[ ExtensionInterface class for @see \Magento\AsynchronousOperations\Api\Data\BulkSummaryInterface ]]
   type asynchronous_operations_data_bulk_summary_extension_interface
   
   [[ Interface BulkStatusInterface Bulk summary data with list of operations items summary data. ]]
   model asynchronous_operations_data_bulk_operations_status_interface {
      [[ List of operation with statuses (short data). ]]
      operations_list : asynchronous_operations_data_summary_operation_status_interface[]
      extension_attributes : asynchronous_operations_data_bulk_summary_extension_interface?
      [[ User type ]]
      user_type : Int
      [[ Bulk uuid ]]
      bulk_id : String
      [[ Bulk description ]]
      description : String
      [[ Bulk scheduled time ]]
      start_time : String
      [[ User id ]]
      user_id : Int
      [[ Total number of operations scheduled in scope of this bulk ]]
      operation_count : Int
   }
   
   [[ Getter Class OperationsStatusInterface Instead of OperationInterface this class don't provide all operation data and not responsive to set any data, just to get operation data without serialized_data and result_serialized_data ]]
   model asynchronous_operations_data_summary_operation_status_interface {
      [[ Id ]]
      id : Int
      [[ Operation status ]]
      status : Int
      [[ Result message ]]
      result_message : String
      [[ Error code ]]
      error_code : Int
   }
   
   [[ Bulk operation search result interface. An bulk is a group of queue messages. An bulk operation item is a queue message. ]]
   model asynchronous_operations_data_operation_search_results_interface {
      [[ List of operations. ]]
      items : asynchronous_operations_data_operation_interface[]
      search_criteria : framework_search_criteria_interface
      [[ Total count. ]]
      total_count : Int
   }
   
   model AnonymousType_amazonPaymentAddressManagementV1GetShippingAddressPutBody {
      addressConsentToken : String
   }
   
   model AnonymousType_amazonPaymentAddressManagementV1GetBillingAddressPutBody {
      addressConsentToken : String
   }
   
   [[ Interface AuthDataInterface ]]
   model pay_pal_braintree_data_auth_data_interface {
      [[ Client token ]]
      client_token : String?
      [[ Display name ]]
      display_name : String
      [[ To success page ]]
      action_success : String
      logged_in : Boolean
      [[ Current store code ]]
      store_code : String
   }
   
   [[ This is the interface for submission to the API.  For ease the API only takes interfaces the same as the SDK, but the SDK model cannot implement the interface.  Since the SDK model technically isn't API, we re-implement a simple DTO to handle the scenario. ]]
   model vertex_address_validation_api_data_address_interface {
      [[ The proper name of the city ]]
      city : String?
      [[ ISO 3166-1 Alpha-3 country code ]]
      country : String?
      [[ The proper name or the postal abbreviation of the state, province, or territory ]]
      main_division : String?
      [[ The Postal Code ]]
      postal_code : String?
      [[ The street address ]]
      street_address : String[]
      [[ The name of the county ]]
      sub_division : String?
   }
   
   model AnonymousType_vertexAddressValidationApiCleanseAddressV1CleanseAddressPostBody {
      address : vertex_address_validation_api_data_address_interface
      scopeCode : String?
      scopeType : String?
   }
   
   [[ What we want to output to the API contains more data than what we want to bring in.  Chiefly, we want to ensure we're sending Magento data out (instead of Vertex data). That means sending Region IDs, and 2-character ISO country codes. ]]
   model vertex_address_validation_api_data_cleansed_address_interface {
      city : String?
      country_code : String?
      country_name : String?
      postal_code : String?
      region_id : Int?
      region_name : String?
      street_address : String[]
      [[ The regional sub division, such as a county or parish ]]
      sub_division : String?
   }
   
   model AnonymousType_vertexAddressValidationApiGuestCleanseAddressV1CleanseAddressPostBody {
      [[ Guest Cart ID (used for auth) ]]
      cartId : String
      address : vertex_address_validation_api_data_address_interface
      scopeCode : String?
      scopeType : String?
   }
   
   model AnonymousType_vertexAddressValidationAddressManagementV1GetValidAddressPostBody {
      address : quote_data_address_interface
   }
   
   model error_response {
      [[ Error message ]]
      message : String
      errors : error_errors_item[]?
      [[ Error code ]]
      code : Int?
      parameters : error_parameters_item[]?
      [[ Stack trace ]]
      trace : String?
   }
   
   [[ Error details ]]
   model error_errors_item {
      [[ Error message ]]
      message : String?
      parameters : error_parameters_item[]?
   }
   
   [[ Error parameters item ]]
   model error_parameters_item {
      [[ ACL resource ]]
      resources : String?
      [[ Missing or invalid field name ]]
      fieldName : String?
      [[ Incorrect field value ]]
      fieldValue : String?
   }
   
   service V1StoreStoreViewsService {
      [[ Retrieve list of all stores ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/store/storeViews")
      operation storeStoreRepositoryV1GetListGet(  ) : store_data_store_interface[]
   }
   service V1StoreStoreGroupsService {
      [[ Retrieve list of all groups ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/store/storeGroups")
      operation storeGroupRepositoryV1GetListGet(  ) : store_data_group_interface[]
   }
   service V1StoreWebsitesService {
      [[ Retrieve list of all websites ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/store/websites")
      operation storeWebsiteRepositoryV1GetListGet(  ) : store_data_website_interface[]
   }
   service V1StoreStoreConfigsService {
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/store/storeConfigs")
      operation storeStoreConfigManagerV1GetStoreConfigsGet(  storeCodes : String ) : store_data_store_config_interface[]
   }
   service V1AdobestockSearchService {
      [[ Search for images based on search criteria ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/adobestock/search")
      operation adobeStockImageApiGetImageListV1ExecuteGet(  searchCriteria_requestName_ : String,  searchCriteria_filterGroups_0_filters_0_field_ : String,  searchCriteria_filterGroups_0_filters_0_value_ : String,  searchCriteria_filterGroups_0_filters_0_conditionType_ : String,  searchCriteria_sortOrders_0_field_ : String,  searchCriteria_sortOrders_0_direction_ : String,  searchCriteria_pageSize_ : Int,  searchCriteria_currentPage_ : Int ) : framework_search_search_result_interface
   }
   service V1DirectoryCurrencyService {
      [[ Get currency information for the store. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/directory/currency")
      operation directoryCurrencyInformationAcquirerV1GetCurrencyInfoGet(  ) : directory_data_currency_information_interface
   }
   service V1DirectoryCountriesService {
      [[ Get all countries and regions information for the store. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/directory/countries")
      operation directoryCountryInformationAcquirerV1GetCountriesInfoGet(  ) : directory_data_country_information_interface[]
   }
   service V1DirectoryCountriesCountryIdService {
      [[ Get country and region information for the store. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/directory/countries/{countryId}")
      operation directoryCountryInformationAcquirerV1GetCountryInfoGet( @PathVariable(value = "countryId") countryId : String ) : directory_data_country_information_interface
   }
   service V1ModulesService {
      [[ Returns an array of enabled modules ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/modules")
      operation backendModuleServiceV1GetModulesGet(  ) : String[]
   }
   service V1EavAttribute_setsListService {
      [[ Retrieve list of Attribute Sets This call returns an array of objects, but detailed information about each object’s attributes might not be included. See https://devdocs.magento.com/codelinks/attributes.html#AttributeSetRepositoryInterface to determine which call to use to get detailed information about all attributes for an object. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/eav/attribute-sets/list")
      operation eavAttributeSetRepositoryV1GetListGet(  searchCriteria_filterGroups_0_filters_0_field_ : String,  searchCriteria_filterGroups_0_filters_0_value_ : String,  searchCriteria_filterGroups_0_filters_0_conditionType_ : String,  searchCriteria_sortOrders_0_field_ : String,  searchCriteria_sortOrders_0_direction_ : String,  searchCriteria_pageSize_ : Int,  searchCriteria_currentPage_ : Int ) : eav_data_attribute_set_search_results_interface
   }
   service V1EavAttribute_setsAttributeSetIdService {
      [[ Retrieve attribute set information based on given ID ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/eav/attribute-sets/{attributeSetId}")
      operation eavAttributeSetRepositoryV1GetGet( @PathVariable(value = "attributeSetId") attributeSetId : Int ) : eav_data_attribute_set_interface
      [[ Save attribute set data ]]
      @HttpOperation(method = "PUT" , url = "http://localhost/rest/all/V1/eav/attribute-sets/{attributeSetId}")
      operation eavAttributeSetRepositoryV1SavePut( @PathVariable(value = "attributeSetId") attributeSetId : String, @RequestBody eavAttributeSetRepositoryV1SavePutBody : AnonymousType_eavAttributeSetRepositoryV1SavePutBody ) : eav_data_attribute_set_interface
      [[ Remove attribute set by given ID ]]
      @HttpOperation(method = "DELETE" , url = "http://localhost/rest/all/V1/eav/attribute-sets/{attributeSetId}")
      operation eavAttributeSetRepositoryV1DeleteByIdDelete( @PathVariable(value = "attributeSetId") attributeSetId : Int ) : Boolean
   }
   service V1EavAttribute_setsService {
      [[ Create attribute set from data ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/eav/attribute-sets")
      operation eavAttributeSetManagementV1CreatePost( @RequestBody eavAttributeSetManagementV1CreatePostBody : AnonymousType_eavAttributeSetManagementV1CreatePostBody ) : eav_data_attribute_set_interface
   }
   service V1SearchService {
      [[ Make Full Text Search and return found Documents ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/search")
      operation searchV1SearchGet(  searchCriteria_requestName_ : String,  searchCriteria_filterGroups_0_filters_0_field_ : String,  searchCriteria_filterGroups_0_filters_0_value_ : String,  searchCriteria_filterGroups_0_filters_0_conditionType_ : String,  searchCriteria_sortOrders_0_field_ : String,  searchCriteria_sortOrders_0_direction_ : String,  searchCriteria_pageSize_ : Int,  searchCriteria_currentPage_ : Int ) : framework_search_search_result_interface
   }
   service V1CustomerGroupsIdService {
      [[ Get customer group by group ID. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/customerGroups/{id}")
      operation customerGroupRepositoryV1GetByIdGet( @PathVariable(value = "id") id : Int ) : customer_data_group_interface
      [[ Save customer group. ]]
      @HttpOperation(method = "PUT" , url = "http://localhost/rest/all/V1/customerGroups/{id}")
      operation customerGroupRepositoryV1SavePut( @PathVariable(value = "id") id : String, @RequestBody customerGroupRepositoryV1SavePutBody : AnonymousType_customerGroupRepositoryV1SavePutBody ) : customer_data_group_interface
      [[ Delete customer group by ID. ]]
      @HttpOperation(method = "DELETE" , url = "http://localhost/rest/all/V1/customerGroups/{id}")
      operation customerGroupRepositoryV1DeleteByIdDelete( @PathVariable(value = "id") id : Int ) : Boolean
   }
   service V1CustomerGroupsSearchService {
      [[ Retrieve customer groups. The list of groups can be filtered to exclude the NOT_LOGGED_IN group using the first parameter and/or it can be filtered by tax class. This call returns an array of objects, but detailed information about each object’s attributes might not be included. See https://devdocs.magento.com/codelinks/attributes.html#GroupRepositoryInterface to determine which call to use to get detailed information about all attributes for an object. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/customerGroups/search")
      operation customerGroupRepositoryV1GetListGet(  searchCriteria_filterGroups_0_filters_0_field_ : String,  searchCriteria_filterGroups_0_filters_0_value_ : String,  searchCriteria_filterGroups_0_filters_0_conditionType_ : String,  searchCriteria_sortOrders_0_field_ : String,  searchCriteria_sortOrders_0_direction_ : String,  searchCriteria_pageSize_ : Int,  searchCriteria_currentPage_ : Int ) : customer_data_group_search_results_interface
   }
   service V1CustomerGroupsService {
      [[ Save customer group. ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/customerGroups")
      operation customerGroupRepositoryV1SavePost( @RequestBody customerGroupRepositoryV1SavePostBody : AnonymousType_customerGroupRepositoryV1SavePostBody ) : customer_data_group_interface
   }
   service V1CustomerGroupsDefaultStoreIdService {
      [[ Get default customer group. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/customerGroups/default/{storeId}")
      operation customerGroupManagementV1GetDefaultGroupGet( @PathVariable(value = "storeId") storeId : Int ) : customer_data_group_interface
   }
   service V1CustomerGroupsDefaultService {
      [[ Get default customer group. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/customerGroups/default")
      operation customerGroupManagementV1GetDefaultGroupGet(  storeId : Int ) : customer_data_group_interface
   }
   service V1CustomerGroupsIdPermissionsService {
      [[ Check if customer group can be deleted. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/customerGroups/{id}/permissions")
      operation customerGroupManagementV1IsReadonlyGet( @PathVariable(value = "id") id : Int ) : Boolean
   }
   service V1CustomerGroupsDefaultIdService {
      [[ Set system default customer group. ]]
      @HttpOperation(method = "PUT" , url = "http://localhost/rest/all/V1/customerGroups/default/{id}")
      operation customerCustomerGroupConfigV1SetDefaultCustomerGroupPut( @PathVariable(value = "id") id : Int ) : Int
   }
   service V1AttributeMetadataCustomerAttributeAttributeCodeService {
      [[ Retrieve attribute metadata. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/attributeMetadata/customer/attribute/{attributeCode}")
      operation customerCustomerMetadataV1GetAttributeMetadataGet( @PathVariable(value = "attributeCode") attributeCode : String ) : customer_data_attribute_metadata_interface
   }
   service V1AttributeMetadataCustomerFormFormCodeService {
      [[ Retrieve all attributes filtered by form code ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/attributeMetadata/customer/form/{formCode}")
      operation customerCustomerMetadataV1GetAttributesGet( @PathVariable(value = "formCode") formCode : String ) : customer_data_attribute_metadata_interface[]
   }
   service V1AttributeMetadataCustomerService {
      [[ Get all attribute metadata. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/attributeMetadata/customer")
      operation customerCustomerMetadataV1GetAllAttributesMetadataGet(  ) : customer_data_attribute_metadata_interface[]
   }
   service V1AttributeMetadataCustomerCustomService {
      [[ Get custom attributes metadata for the given data interface. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/attributeMetadata/customer/custom")
      operation customerCustomerMetadataV1GetCustomAttributesMetadataGet(  dataInterfaceName : String ) : customer_data_attribute_metadata_interface[]
   }
   service V1AttributeMetadataCustomerAddressAttributeAttributeCodeService {
      [[ Retrieve attribute metadata. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/attributeMetadata/customerAddress/attribute/{attributeCode}")
      operation customerAddressMetadataV1GetAttributeMetadataGet( @PathVariable(value = "attributeCode") attributeCode : String ) : customer_data_attribute_metadata_interface
   }
   service V1AttributeMetadataCustomerAddressFormFormCodeService {
      [[ Retrieve all attributes filtered by form code ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/attributeMetadata/customerAddress/form/{formCode}")
      operation customerAddressMetadataV1GetAttributesGet( @PathVariable(value = "formCode") formCode : String ) : customer_data_attribute_metadata_interface[]
   }
   service V1AttributeMetadataCustomerAddressService {
      [[ Get all attribute metadata. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/attributeMetadata/customerAddress")
      operation customerAddressMetadataV1GetAllAttributesMetadataGet(  ) : customer_data_attribute_metadata_interface[]
   }
   service V1AttributeMetadataCustomerAddressCustomService {
      [[ Get custom attributes metadata for the given data interface. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/attributeMetadata/customerAddress/custom")
      operation customerAddressMetadataV1GetCustomAttributesMetadataGet(  dataInterfaceName : String ) : customer_data_attribute_metadata_interface[]
   }
   service V1CustomersCustomerIdService {
      [[ Get customer by Customer ID. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/customers/{customerId}")
      operation customerCustomerRepositoryV1GetByIdGet( @PathVariable(value = "customerId") customerId : Int ) : customer_data_customer_interface
      [[ Create or update a customer. ]]
      @HttpOperation(method = "PUT" , url = "http://localhost/rest/all/V1/customers/{customerId}")
      operation customerCustomerRepositoryV1SavePut( @PathVariable(value = "customerId") customerId : String, @RequestBody customerCustomerRepositoryV1SavePutBody : AnonymousType_customerCustomerRepositoryV1SavePutBody ) : customer_data_customer_interface
      [[ Delete customer by Customer ID. ]]
      @HttpOperation(method = "DELETE" , url = "http://localhost/rest/all/V1/customers/{customerId}")
      operation customerCustomerRepositoryV1DeleteByIdDelete( @PathVariable(value = "customerId") customerId : Int ) : Boolean
   }
   service V1CustomersMeService {
      [[ Get customer by Customer ID. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/customers/me")
      operation customerCustomerRepositoryV1GetByIdGet(  ) : customer_data_customer_interface
      [[ Create or update a customer. ]]
      @HttpOperation(method = "PUT" , url = "http://localhost/rest/all/V1/customers/me")
      operation customerCustomerRepositoryV1SavePut( @RequestBody customerCustomerRepositoryV1SavePutBody : AnonymousType_customerCustomerRepositoryV1SavePutBody ) : customer_data_customer_interface
   }
   service V1CustomersSearchService {
      [[ Retrieve customers which match a specified criteria. This call returns an array of objects, but detailed information about each object’s attributes might not be included. See https://devdocs.magento.com/codelinks/attributes.html#CustomerRepositoryInterface to determine which call to use to get detailed information about all attributes for an object. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/customers/search")
      operation customerCustomerRepositoryV1GetListGet(  searchCriteria_filterGroups_0_filters_0_field_ : String,  searchCriteria_filterGroups_0_filters_0_value_ : String,  searchCriteria_filterGroups_0_filters_0_conditionType_ : String,  searchCriteria_sortOrders_0_field_ : String,  searchCriteria_sortOrders_0_direction_ : String,  searchCriteria_pageSize_ : Int,  searchCriteria_currentPage_ : Int ) : customer_data_customer_search_results_interface
   }
   service V1CustomersService {
      [[ Create customer account. Perform necessary business operations like sending email. ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/customers")
      operation customerAccountManagementV1CreateAccountPost( @RequestBody customerAccountManagementV1CreateAccountPostBody : AnonymousType_customerAccountManagementV1CreateAccountPostBody ) : customer_data_customer_interface
   }
   service V1CustomersMeActivateService {
      [[ Activate a customer account using a key that was sent in a confirmation email. ]]
      @HttpOperation(method = "PUT" , url = "http://localhost/rest/all/V1/customers/me/activate")
      operation customerAccountManagementV1ActivateByIdPut( @RequestBody customerAccountManagementV1ActivateByIdPutBody : AnonymousType_customerAccountManagementV1ActivateByIdPutBody ) : customer_data_customer_interface
   }
   service V1CustomersEmailActivateService {
      [[ Activate a customer account using a key that was sent in a confirmation email. ]]
      @HttpOperation(method = "PUT" , url = "http://localhost/rest/all/V1/customers/{email}/activate")
      operation customerAccountManagementV1ActivatePut( @PathVariable(value = "email") email : String, @RequestBody customerAccountManagementV1ActivatePutBody : AnonymousType_customerAccountManagementV1ActivatePutBody ) : customer_data_customer_interface
   }
   service V1CustomersMePasswordService {
      [[ Change customer password. ]]
      @HttpOperation(method = "PUT" , url = "http://localhost/rest/all/V1/customers/me/password")
      operation customerAccountManagementV1ChangePasswordByIdPut( @RequestBody customerAccountManagementV1ChangePasswordByIdPutBody : AnonymousType_customerAccountManagementV1ChangePasswordByIdPutBody ) : Boolean
   }
   service V1CustomersCustomerIdPasswordResetLinkTokenResetPasswordLinkTokenService {
      [[ Check if password reset token is valid. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/customers/{customerId}/password/resetLinkToken/{resetPasswordLinkToken}")
      operation customerAccountManagementV1ValidateResetPasswordLinkTokenGet( @PathVariable(value = "customerId") customerId : Int, @PathVariable(value = "resetPasswordLinkToken") resetPasswordLinkToken : String ) : Boolean
   }
   service V1CustomersPasswordService {
      [[ Send an email to the customer with a password reset link. ]]
      @HttpOperation(method = "PUT" , url = "http://localhost/rest/all/V1/customers/password")
      operation customerAccountManagementV1InitiatePasswordResetPut( @RequestBody customerAccountManagementV1InitiatePasswordResetPutBody : AnonymousType_customerAccountManagementV1InitiatePasswordResetPutBody ) : Boolean
   }
   service V1CustomersResetPasswordService {
      [[ Reset customer password. ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/customers/resetPassword")
      operation customerAccountManagementV1ResetPasswordPost( @RequestBody customerAccountManagementV1ResetPasswordPostBody : AnonymousType_customerAccountManagementV1ResetPasswordPostBody ) : Boolean
   }
   service V1CustomersCustomerIdConfirmService {
      [[ Gets the account confirmation status. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/customers/{customerId}/confirm")
      operation customerAccountManagementV1GetConfirmationStatusGet( @PathVariable(value = "customerId") customerId : Int ) : String
   }
   service V1CustomersConfirmService {
      [[ Resend confirmation email. ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/customers/confirm")
      operation customerAccountManagementV1ResendConfirmationPost( @RequestBody customerAccountManagementV1ResendConfirmationPostBody : AnonymousType_customerAccountManagementV1ResendConfirmationPostBody ) : Boolean
   }
   service V1CustomersValidateService {
      [[ Validate customer data. ]]
      @HttpOperation(method = "PUT" , url = "http://localhost/rest/all/V1/customers/validate")
      operation customerAccountManagementV1ValidatePut( @RequestBody customerAccountManagementV1ValidatePutBody : AnonymousType_customerAccountManagementV1ValidatePutBody ) : customer_data_validation_results_interface
   }
   service V1CustomersCustomerIdPermissionsReadonlyService {
      [[ Check if customer can be deleted. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/customers/{customerId}/permissions/readonly")
      operation customerAccountManagementV1IsReadonlyGet( @PathVariable(value = "customerId") customerId : Int ) : Boolean
   }
   service V1CustomersIsEmailAvailableService {
      [[ Check if given email is associated with a customer account in given website. ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/customers/isEmailAvailable")
      operation customerAccountManagementV1IsEmailAvailablePost( @RequestBody customerAccountManagementV1IsEmailAvailablePostBody : AnonymousType_customerAccountManagementV1IsEmailAvailablePostBody ) : Boolean
   }
   service V1CustomersMeBillingAddressService {
      [[ Retrieve default billing address for the given customerId. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/customers/me/billingAddress")
      operation customerAccountManagementV1GetDefaultBillingAddressGet(  ) : customer_data_address_interface
   }
   service V1CustomersCustomerIdBillingAddressService {
      [[ Retrieve default billing address for the given customerId. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/customers/{customerId}/billingAddress")
      operation customerAccountManagementV1GetDefaultBillingAddressGet( @PathVariable(value = "customerId") customerId : Int ) : customer_data_address_interface
   }
   service V1CustomersMeShippingAddressService {
      [[ Retrieve default shipping address for the given customerId. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/customers/me/shippingAddress")
      operation customerAccountManagementV1GetDefaultShippingAddressGet(  ) : customer_data_address_interface
   }
   service V1CustomersCustomerIdShippingAddressService {
      [[ Retrieve default shipping address for the given customerId. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/customers/{customerId}/shippingAddress")
      operation customerAccountManagementV1GetDefaultShippingAddressGet( @PathVariable(value = "customerId") customerId : Int ) : customer_data_address_interface
   }
   service V1CustomersAddressesAddressIdService {
      [[ Retrieve customer address. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/customers/addresses/{addressId}")
      operation customerAddressRepositoryV1GetByIdGet( @PathVariable(value = "addressId") addressId : Int ) : customer_data_address_interface
   }
   service V1AddressesAddressIdService {
      [[ Delete customer address by ID. ]]
      @HttpOperation(method = "DELETE" , url = "http://localhost/rest/all/V1/addresses/{addressId}")
      operation customerAddressRepositoryV1DeleteByIdDelete( @PathVariable(value = "addressId") addressId : Int ) : Boolean
   }
   service V1CmsPagePageIdService {
      [[ Retrieve page. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/cmsPage/{pageId}")
      operation cmsPageRepositoryV1GetByIdGet( @PathVariable(value = "pageId") pageId : Int ) : cms_data_page_interface
      [[ Delete page by ID. ]]
      @HttpOperation(method = "DELETE" , url = "http://localhost/rest/all/V1/cmsPage/{pageId}")
      operation cmsPageRepositoryV1DeleteByIdDelete( @PathVariable(value = "pageId") pageId : Int ) : Boolean
   }
   service V1CmsPageSearchService {
      [[ Retrieve pages matching the specified criteria. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/cmsPage/search")
      operation cmsPageRepositoryV1GetListGet(  searchCriteria_filterGroups_0_filters_0_field_ : String,  searchCriteria_filterGroups_0_filters_0_value_ : String,  searchCriteria_filterGroups_0_filters_0_conditionType_ : String,  searchCriteria_sortOrders_0_field_ : String,  searchCriteria_sortOrders_0_direction_ : String,  searchCriteria_pageSize_ : Int,  searchCriteria_currentPage_ : Int ) : cms_data_page_search_results_interface
   }
   service V1CmsPageService {
      [[ Save page. ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/cmsPage")
      operation cmsPageRepositoryV1SavePost( @RequestBody cmsPageRepositoryV1SavePostBody : AnonymousType_cmsPageRepositoryV1SavePostBody ) : cms_data_page_interface
   }
   service V1CmsPageIdService {
      [[ Save page. ]]
      @HttpOperation(method = "PUT" , url = "http://localhost/rest/all/V1/cmsPage/{id}")
      operation cmsPageRepositoryV1SavePut( @PathVariable(value = "id") id : String, @RequestBody cmsPageRepositoryV1SavePutBody : AnonymousType_cmsPageRepositoryV1SavePutBody ) : cms_data_page_interface
   }
   service V1CmsBlockBlockIdService {
      [[ Retrieve block. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/cmsBlock/{blockId}")
      operation cmsBlockRepositoryV1GetByIdGet( @PathVariable(value = "blockId") blockId : String ) : cms_data_block_interface
      [[ Delete block by ID. ]]
      @HttpOperation(method = "DELETE" , url = "http://localhost/rest/all/V1/cmsBlock/{blockId}")
      operation cmsBlockRepositoryV1DeleteByIdDelete( @PathVariable(value = "blockId") blockId : String ) : Boolean
   }
   service V1CmsBlockSearchService {
      [[ Retrieve blocks matching the specified criteria. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/cmsBlock/search")
      operation cmsBlockRepositoryV1GetListGet(  searchCriteria_filterGroups_0_filters_0_field_ : String,  searchCriteria_filterGroups_0_filters_0_value_ : String,  searchCriteria_filterGroups_0_filters_0_conditionType_ : String,  searchCriteria_sortOrders_0_field_ : String,  searchCriteria_sortOrders_0_direction_ : String,  searchCriteria_pageSize_ : Int,  searchCriteria_currentPage_ : Int ) : cms_data_block_search_results_interface
   }
   service V1CmsBlockService {
      [[ Save block. ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/cmsBlock")
      operation cmsBlockRepositoryV1SavePost( @RequestBody cmsBlockRepositoryV1SavePostBody : AnonymousType_cmsBlockRepositoryV1SavePostBody ) : cms_data_block_interface
   }
   service V1CmsBlockIdService {
      [[ Save block. ]]
      @HttpOperation(method = "PUT" , url = "http://localhost/rest/all/V1/cmsBlock/{id}")
      operation cmsBlockRepositoryV1SavePut( @PathVariable(value = "id") id : String, @RequestBody cmsBlockRepositoryV1SavePutBody : AnonymousType_cmsBlockRepositoryV1SavePutBody ) : cms_data_block_interface
   }
   service V1ProductsService {
      [[ Get product list ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/products")
      operation catalogProductRepositoryV1GetListGet(  searchCriteria_filterGroups_0_filters_0_field_ : String,  searchCriteria_filterGroups_0_filters_0_value_ : String,  searchCriteria_filterGroups_0_filters_0_conditionType_ : String,  searchCriteria_sortOrders_0_field_ : String,  searchCriteria_sortOrders_0_direction_ : String,  searchCriteria_pageSize_ : Int,  searchCriteria_currentPage_ : Int ) : catalog_data_product_search_results_interface
      [[ Create product ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/products")
      operation catalogProductRepositoryV1SavePost( @RequestBody catalogProductRepositoryV1SavePostBody : AnonymousType_catalogProductRepositoryV1SavePostBody ) : catalog_data_product_interface
   }
   service V1ProductsSkuService {
      [[ Get info about product by product SKU ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/products/{sku}")
      operation catalogProductRepositoryV1GetGet( @PathVariable(value = "sku") sku : String,  editMode : Boolean,  storeId : Int,  forceReload : Boolean ) : catalog_data_product_interface
      [[ Create product ]]
      @HttpOperation(method = "PUT" , url = "http://localhost/rest/all/V1/products/{sku}")
      operation catalogProductRepositoryV1SavePut( @PathVariable(value = "sku") sku : String, @RequestBody catalogProductRepositoryV1SavePutBody : AnonymousType_catalogProductRepositoryV1SavePutBody ) : catalog_data_product_interface
      @HttpOperation(method = "DELETE" , url = "http://localhost/rest/all/V1/products/{sku}")
      operation catalogProductRepositoryV1DeleteByIdDelete( @PathVariable(value = "sku") sku : String ) : Boolean
   }
   service V1ProductsAttributesTypesService {
      [[ Retrieve list of product attribute types ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/products/attributes/types")
      operation catalogProductAttributeTypesListV1GetItemsGet(  ) : catalog_data_product_attribute_type_interface[]
   }
   service V1ProductsAttributesAttributeCodeService {
      [[ Retrieve specific attribute ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/products/attributes/{attributeCode}")
      operation catalogProductAttributeRepositoryV1GetGet( @PathVariable(value = "attributeCode") attributeCode : String ) : catalog_data_product_attribute_interface
      [[ Save attribute data ]]
      @HttpOperation(method = "PUT" , url = "http://localhost/rest/all/V1/products/attributes/{attributeCode}")
      operation catalogProductAttributeRepositoryV1SavePut( @PathVariable(value = "attributeCode") attributeCode : String, @RequestBody catalogProductAttributeRepositoryV1SavePutBody : AnonymousType_catalogProductAttributeRepositoryV1SavePutBody ) : catalog_data_product_attribute_interface
      [[ Delete Attribute by id ]]
      @HttpOperation(method = "DELETE" , url = "http://localhost/rest/all/V1/products/attributes/{attributeCode}")
      operation catalogProductAttributeRepositoryV1DeleteByIdDelete( @PathVariable(value = "attributeCode") attributeCode : String ) : Boolean
   }
   service V1ProductsAttributesService {
      [[ Retrieve all attributes for entity type ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/products/attributes")
      operation catalogProductAttributeRepositoryV1GetListGet(  searchCriteria_filterGroups_0_filters_0_field_ : String,  searchCriteria_filterGroups_0_filters_0_value_ : String,  searchCriteria_filterGroups_0_filters_0_conditionType_ : String,  searchCriteria_sortOrders_0_field_ : String,  searchCriteria_sortOrders_0_direction_ : String,  searchCriteria_pageSize_ : Int,  searchCriteria_currentPage_ : Int ) : catalog_data_product_attribute_search_results_interface
      [[ Save attribute data ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/products/attributes")
      operation catalogProductAttributeRepositoryV1SavePost( @RequestBody catalogProductAttributeRepositoryV1SavePostBody : AnonymousType_catalogProductAttributeRepositoryV1SavePostBody ) : catalog_data_product_attribute_interface
   }
   service V1CategoriesAttributesAttributeCodeService {
      [[ Retrieve specific attribute ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/categories/attributes/{attributeCode}")
      operation catalogCategoryAttributeRepositoryV1GetGet( @PathVariable(value = "attributeCode") attributeCode : String ) : catalog_data_category_attribute_interface
   }
   service V1CategoriesAttributesService {
      [[ Retrieve all attributes for entity type ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/categories/attributes")
      operation catalogCategoryAttributeRepositoryV1GetListGet(  searchCriteria_filterGroups_0_filters_0_field_ : String,  searchCriteria_filterGroups_0_filters_0_value_ : String,  searchCriteria_filterGroups_0_filters_0_conditionType_ : String,  searchCriteria_sortOrders_0_field_ : String,  searchCriteria_sortOrders_0_direction_ : String,  searchCriteria_pageSize_ : Int,  searchCriteria_currentPage_ : Int ) : catalog_data_category_attribute_search_results_interface
   }
   service V1CategoriesAttributesAttributeCodeOptionsService {
      [[ Retrieve list of attribute options ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/categories/attributes/{attributeCode}/options")
      operation catalogCategoryAttributeOptionManagementV1GetItemsGet( @PathVariable(value = "attributeCode") attributeCode : String ) : eav_data_attribute_option_interface[]
   }
   service V1ProductsTypesService {
      [[ Retrieve available product types ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/products/types")
      operation catalogProductTypeListV1GetProductTypesGet(  ) : catalog_data_product_type_interface[]
   }
   service V1ProductsAttribute_setsSetsListService {
      [[ Retrieve list of Attribute Sets ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/products/attribute-sets/sets/list")
      operation catalogAttributeSetRepositoryV1GetListGet(  searchCriteria_filterGroups_0_filters_0_field_ : String,  searchCriteria_filterGroups_0_filters_0_value_ : String,  searchCriteria_filterGroups_0_filters_0_conditionType_ : String,  searchCriteria_sortOrders_0_field_ : String,  searchCriteria_sortOrders_0_direction_ : String,  searchCriteria_pageSize_ : Int,  searchCriteria_currentPage_ : Int ) : eav_data_attribute_set_search_results_interface
   }
   service V1ProductsAttribute_setsAttributeSetIdService {
      [[ Retrieve attribute set information based on given ID ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/products/attribute-sets/{attributeSetId}")
      operation catalogAttributeSetRepositoryV1GetGet( @PathVariable(value = "attributeSetId") attributeSetId : Int ) : eav_data_attribute_set_interface
      [[ Save attribute set data ]]
      @HttpOperation(method = "PUT" , url = "http://localhost/rest/all/V1/products/attribute-sets/{attributeSetId}")
      operation catalogAttributeSetRepositoryV1SavePut( @PathVariable(value = "attributeSetId") attributeSetId : String, @RequestBody catalogAttributeSetRepositoryV1SavePutBody : AnonymousType_catalogAttributeSetRepositoryV1SavePutBody ) : eav_data_attribute_set_interface
      [[ Remove attribute set by given ID ]]
      @HttpOperation(method = "DELETE" , url = "http://localhost/rest/all/V1/products/attribute-sets/{attributeSetId}")
      operation catalogAttributeSetRepositoryV1DeleteByIdDelete( @PathVariable(value = "attributeSetId") attributeSetId : Int ) : Boolean
   }
   service V1ProductsAttribute_setsService {
      [[ Create attribute set from data ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/products/attribute-sets")
      operation catalogAttributeSetManagementV1CreatePost( @RequestBody catalogAttributeSetManagementV1CreatePostBody : AnonymousType_catalogAttributeSetManagementV1CreatePostBody ) : eav_data_attribute_set_interface
   }
   service V1ProductsAttribute_setsAttributeSetIdAttributesService {
      [[ Retrieve related attributes based on given attribute set ID ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/products/attribute-sets/{attributeSetId}/attributes")
      operation catalogProductAttributeManagementV1GetAttributesGet( @PathVariable(value = "attributeSetId") attributeSetId : String ) : catalog_data_product_attribute_interface[]
   }
   service V1ProductsAttribute_setsAttributesService {
      [[ Assign attribute to attribute set ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/products/attribute-sets/attributes")
      operation catalogProductAttributeManagementV1AssignPost( @RequestBody catalogProductAttributeManagementV1AssignPostBody : AnonymousType_catalogProductAttributeManagementV1AssignPostBody ) : Int
   }
   service V1ProductsAttribute_setsAttributeSetIdAttributesAttributeCodeService {
      [[ Remove attribute from attribute set ]]
      @HttpOperation(method = "DELETE" , url = "http://localhost/rest/all/V1/products/attribute-sets/{attributeSetId}/attributes/{attributeCode}")
      operation catalogProductAttributeManagementV1UnassignDelete( @PathVariable(value = "attributeSetId") attributeSetId : String, @PathVariable(value = "attributeCode") attributeCode : String ) : Boolean
   }
   service V1ProductsAttribute_setsGroupsListService {
      [[ Retrieve list of attribute groups ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/products/attribute-sets/groups/list")
      operation catalogProductAttributeGroupRepositoryV1GetListGet(  searchCriteria_filterGroups_0_filters_0_field_ : String,  searchCriteria_filterGroups_0_filters_0_value_ : String,  searchCriteria_filterGroups_0_filters_0_conditionType_ : String,  searchCriteria_sortOrders_0_field_ : String,  searchCriteria_sortOrders_0_direction_ : String,  searchCriteria_pageSize_ : Int,  searchCriteria_currentPage_ : Int ) : eav_data_attribute_group_search_results_interface
   }
   service V1ProductsAttribute_setsGroupsService {
      [[ Save attribute group ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/products/attribute-sets/groups")
      operation catalogProductAttributeGroupRepositoryV1SavePost( @RequestBody catalogProductAttributeGroupRepositoryV1SavePostBody : AnonymousType_catalogProductAttributeGroupRepositoryV1SavePostBody ) : eav_data_attribute_group_interface
   }
   service V1ProductsAttribute_setsAttributeSetIdGroupsService {
      [[ Save attribute group ]]
      @HttpOperation(method = "PUT" , url = "http://localhost/rest/all/V1/products/attribute-sets/{attributeSetId}/groups")
      operation catalogProductAttributeGroupRepositoryV1SavePut( @PathVariable(value = "attributeSetId") attributeSetId : String, @RequestBody catalogProductAttributeGroupRepositoryV1SavePutBody : AnonymousType_catalogProductAttributeGroupRepositoryV1SavePutBody ) : eav_data_attribute_group_interface
   }
   service V1ProductsAttribute_setsGroupsGroupIdService {
      [[ Remove attribute group by id ]]
      @HttpOperation(method = "DELETE" , url = "http://localhost/rest/all/V1/products/attribute-sets/groups/{groupId}")
      operation catalogProductAttributeGroupRepositoryV1DeleteByIdDelete( @PathVariable(value = "groupId") groupId : Int ) : Boolean
   }
   service V1ProductsAttributesAttributeCodeOptionsService {
      [[ Retrieve list of attribute options ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/products/attributes/{attributeCode}/options")
      operation catalogProductAttributeOptionManagementV1GetItemsGet( @PathVariable(value = "attributeCode") attributeCode : String ) : eav_data_attribute_option_interface[]
      [[ Add option to attribute ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/products/attributes/{attributeCode}/options")
      operation catalogProductAttributeOptionManagementV1AddPost( @PathVariable(value = "attributeCode") attributeCode : String, @RequestBody catalogProductAttributeOptionManagementV1AddPostBody : AnonymousType_catalogProductAttributeOptionManagementV1AddPostBody ) : String
   }
   service V1ProductsAttributesAttributeCodeOptionsOptionIdService {
      [[ Update attribute option ]]
      @HttpOperation(method = "PUT" , url = "http://localhost/rest/all/V1/products/attributes/{attributeCode}/options/{optionId}")
      operation catalogProductAttributeOptionUpdateV1UpdatePut( @PathVariable(value = "attributeCode") attributeCode : String, @PathVariable(value = "optionId") optionId : Int, @RequestBody catalogProductAttributeOptionUpdateV1UpdatePutBody : AnonymousType_catalogProductAttributeOptionUpdateV1UpdatePutBody ) : Boolean
      [[ Delete option from attribute ]]
      @HttpOperation(method = "DELETE" , url = "http://localhost/rest/all/V1/products/attributes/{attributeCode}/options/{optionId}")
      operation catalogProductAttributeOptionManagementV1DeleteDelete( @PathVariable(value = "attributeCode") attributeCode : String, @PathVariable(value = "optionId") optionId : String ) : Boolean
   }
   service V1ProductsMediaTypesAttributeSetNameService {
      [[ Retrieve the list of media attributes (fronted input type is media_image) assigned to the given attribute set. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/products/media/types/{attributeSetName}")
      operation catalogProductMediaAttributeManagementV1GetListGet( @PathVariable(value = "attributeSetName") attributeSetName : String ) : catalog_data_product_attribute_interface[]
   }
   service V1ProductsSkuMediaEntryIdService {
      [[ Return information about gallery entry ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/products/{sku}/media/{entryId}")
      operation catalogProductAttributeMediaGalleryManagementV1GetGet( @PathVariable(value = "sku") sku : String, @PathVariable(value = "entryId") entryId : Int ) : catalog_data_product_attribute_media_gallery_entry_interface
      [[ Update gallery entry ]]
      @HttpOperation(method = "PUT" , url = "http://localhost/rest/all/V1/products/{sku}/media/{entryId}")
      operation catalogProductAttributeMediaGalleryManagementV1UpdatePut( @PathVariable(value = "sku") sku : String, @PathVariable(value = "entryId") entryId : String, @RequestBody catalogProductAttributeMediaGalleryManagementV1UpdatePutBody : AnonymousType_catalogProductAttributeMediaGalleryManagementV1UpdatePutBody ) : Boolean
      [[ Remove gallery entry ]]
      @HttpOperation(method = "DELETE" , url = "http://localhost/rest/all/V1/products/{sku}/media/{entryId}")
      operation catalogProductAttributeMediaGalleryManagementV1RemoveDelete( @PathVariable(value = "sku") sku : String, @PathVariable(value = "entryId") entryId : Int ) : Boolean
   }
   service V1ProductsSkuMediaService {
      [[ Retrieve the list of gallery entries associated with given product ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/products/{sku}/media")
      operation catalogProductAttributeMediaGalleryManagementV1GetListGet( @PathVariable(value = "sku") sku : String ) : catalog_data_product_attribute_media_gallery_entry_interface[]
      [[ Create new gallery entry ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/products/{sku}/media")
      operation catalogProductAttributeMediaGalleryManagementV1CreatePost( @PathVariable(value = "sku") sku : String, @RequestBody catalogProductAttributeMediaGalleryManagementV1CreatePostBody : AnonymousType_catalogProductAttributeMediaGalleryManagementV1CreatePostBody ) : Int
   }
   service V1ProductsSkuGroup_pricesCustomerGroupIdTiersService {
      [[ Get tier price of product ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/products/{sku}/group-prices/{customerGroupId}/tiers")
      operation catalogProductTierPriceManagementV1GetListGet( @PathVariable(value = "sku") sku : String, @PathVariable(value = "customerGroupId") customerGroupId : String ) : catalog_data_product_tier_price_interface[]
   }
   service V1ProductsSkuGroup_pricesCustomerGroupIdTiersQtyPricePriceService {
      [[ Create tier price for product ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/products/{sku}/group-prices/{customerGroupId}/tiers/{qty}/price/{price}")
      operation catalogProductTierPriceManagementV1AddPost( @PathVariable(value = "sku") sku : String, @PathVariable(value = "customerGroupId") customerGroupId : String, @PathVariable(value = "price") price : Decimal, @PathVariable(value = "qty") qty : Decimal ) : Boolean
   }
   service V1ProductsSkuGroup_pricesCustomerGroupIdTiersQtyService {
      [[ Remove tier price from product ]]
      @HttpOperation(method = "DELETE" , url = "http://localhost/rest/all/V1/products/{sku}/group-prices/{customerGroupId}/tiers/{qty}")
      operation catalogProductTierPriceManagementV1RemoveDelete( @PathVariable(value = "sku") sku : String, @PathVariable(value = "customerGroupId") customerGroupId : String, @PathVariable(value = "qty") qty : Decimal ) : Boolean
   }
   service V1ProductsTier_prices_informationService {
      [[ Return product prices. In case of at least one of skus is not found exception will be thrown. ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/products/tier-prices-information")
      operation catalogTierPriceStorageV1GetPost( @RequestBody catalogTierPriceStorageV1GetPostBody : AnonymousType_catalogTierPriceStorageV1GetPostBody ) : catalog_data_tier_price_interface[]
   }
   service V1ProductsTier_pricesService {
      [[ Remove existing tier prices and replace them with the new ones. If any items will have invalid price, price type, website id, sku, customer group or quantity, they will be marked as failed and excluded from replace list and \Magento\Catalog\Api\Data\PriceUpdateResultInterface[] with problem description will be returned. If there were no failed items during update empty array will be returned. If error occurred during the update exception will be thrown. ]]
      @HttpOperation(method = "PUT" , url = "http://localhost/rest/all/V1/products/tier-prices")
      operation catalogTierPriceStorageV1ReplacePut( @RequestBody catalogTierPriceStorageV1ReplacePutBody : AnonymousType_catalogTierPriceStorageV1ReplacePutBody ) : catalog_data_price_update_result_interface[]
      [[ Add or update product prices. If any items will have invalid price, price type, website id, sku, customer group or quantity, they will be marked as failed and excluded from update list and \Magento\Catalog\Api\Data\PriceUpdateResultInterface[] with problem description will be returned. If there were no failed items during update empty array will be returned. If error occurred during the update exception will be thrown. ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/products/tier-prices")
      operation catalogTierPriceStorageV1UpdatePost( @RequestBody catalogTierPriceStorageV1UpdatePostBody : AnonymousType_catalogTierPriceStorageV1UpdatePostBody ) : catalog_data_price_update_result_interface[]
   }
   service V1ProductsTier_prices_deleteService {
      [[ Delete product tier prices. If any items will have invalid price, price type, website id, sku, customer group or quantity, they will be marked as failed and excluded from delete list and \Magento\Catalog\Api\Data\PriceUpdateResultInterface[] with problem description will be returned. If there were no failed items during update empty array will be returned. If error occurred during the update exception will be thrown. ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/products/tier-prices-delete")
      operation catalogTierPriceStorageV1DeletePost( @RequestBody catalogTierPriceStorageV1DeletePostBody : AnonymousType_catalogTierPriceStorageV1DeletePostBody ) : catalog_data_price_update_result_interface[]
   }
   service V1ProductsBase_prices_informationService {
      [[ Return product prices. In case of at least one of skus is not found exception will be thrown. ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/products/base-prices-information")
      operation catalogBasePriceStorageV1GetPost( @RequestBody catalogBasePriceStorageV1GetPostBody : AnonymousType_catalogBasePriceStorageV1GetPostBody ) : catalog_data_base_price_interface[]
   }
   service V1ProductsBase_pricesService {
      [[ Add or update product prices. Input item should correspond \Magento\Catalog\Api\Data\CostInterface. If any items will have invalid price, store id or sku, they will be marked as failed and excluded from update list and \Magento\Catalog\Api\Data\PriceUpdateResultInterface[] with problem description will be returned. If there were no failed items during update empty array will be returned. If error occurred during the update exception will be thrown. ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/products/base-prices")
      operation catalogBasePriceStorageV1UpdatePost( @RequestBody catalogBasePriceStorageV1UpdatePostBody : AnonymousType_catalogBasePriceStorageV1UpdatePostBody ) : catalog_data_price_update_result_interface[]
   }
   service V1ProductsCost_informationService {
      [[ Return product prices. In case of at least one of skus is not found exception will be thrown. ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/products/cost-information")
      operation catalogCostStorageV1GetPost( @RequestBody catalogCostStorageV1GetPostBody : AnonymousType_catalogCostStorageV1GetPostBody ) : catalog_data_cost_interface[]
   }
   service V1ProductsCostService {
      [[ Add or update product cost. Input item should correspond to \Magento\Catalog\Api\Data\CostInterface. If any items will have invalid cost, store id or sku, they will be marked as failed and excluded from update list and \Magento\Catalog\Api\Data\PriceUpdateResultInterface[] with problem description will be returned. If there were no failed items during update empty array will be returned. If error occurred during the update exception will be thrown. ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/products/cost")
      operation catalogCostStorageV1UpdatePost( @RequestBody catalogCostStorageV1UpdatePostBody : AnonymousType_catalogCostStorageV1UpdatePostBody ) : catalog_data_price_update_result_interface[]
   }
   service V1ProductsCost_deleteService {
      [[ Delete product cost. In case of at least one of skus is not found exception will be thrown. If error occurred during the delete exception will be thrown. ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/products/cost-delete")
      operation catalogCostStorageV1DeletePost( @RequestBody catalogCostStorageV1DeletePostBody : AnonymousType_catalogCostStorageV1DeletePostBody ) : Boolean
   }
   service V1ProductsSpecial_price_informationService {
      [[ Return product's special price. In case of at least one of skus is not found exception will be thrown. ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/products/special-price-information")
      operation catalogSpecialPriceStorageV1GetPost( @RequestBody catalogSpecialPriceStorageV1GetPostBody : AnonymousType_catalogSpecialPriceStorageV1GetPostBody ) : catalog_data_special_price_interface[]
   }
   service V1ProductsSpecial_priceService {
      [[ Add or update product's special price. If any items will have invalid price, store id, sku or dates, they will be marked as failed and excluded from update list and \Magento\Catalog\Api\Data\PriceUpdateResultInterface[] with problem description will be returned. If there were no failed items during update empty array will be returned. If error occurred during the update exception will be thrown. ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/products/special-price")
      operation catalogSpecialPriceStorageV1UpdatePost( @RequestBody catalogSpecialPriceStorageV1UpdatePostBody : AnonymousType_catalogSpecialPriceStorageV1UpdatePostBody ) : catalog_data_price_update_result_interface[]
   }
   service V1ProductsSpecial_price_deleteService {
      [[ Delete product's special price. If any items will have invalid price, store id, sku or dates, they will be marked as failed and excluded from delete list and \Magento\Catalog\Api\Data\PriceUpdateResultInterface[] with problem description will be returned. If there were no failed items during update empty array will be returned. If error occurred during the delete exception will be thrown. ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/products/special-price-delete")
      operation catalogSpecialPriceStorageV1DeletePost( @RequestBody catalogSpecialPriceStorageV1DeletePostBody : AnonymousType_catalogSpecialPriceStorageV1DeletePostBody ) : catalog_data_price_update_result_interface[]
   }
   service V1CategoriesCategoryIdService {
      [[ Get info about category by category id ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/categories/{categoryId}")
      operation catalogCategoryRepositoryV1GetGet( @PathVariable(value = "categoryId") categoryId : Int,  storeId : Int ) : catalog_data_category_interface
      [[ Delete category by identifier ]]
      @HttpOperation(method = "DELETE" , url = "http://localhost/rest/all/V1/categories/{categoryId}")
      operation catalogCategoryRepositoryV1DeleteByIdentifierDelete( @PathVariable(value = "categoryId") categoryId : Int ) : Boolean
   }
   service V1CategoriesService {
      [[ Retrieve list of categories ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/categories")
      operation catalogCategoryManagementV1GetTreeGet(  rootCategoryId : Int,  depth : Int ) : catalog_data_category_tree_interface
      [[ Create category service ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/categories")
      operation catalogCategoryRepositoryV1SavePost( @RequestBody catalogCategoryRepositoryV1SavePostBody : AnonymousType_catalogCategoryRepositoryV1SavePostBody ) : catalog_data_category_interface
   }
   service V1CategoriesIdService {
      [[ Create category service ]]
      @HttpOperation(method = "PUT" , url = "http://localhost/rest/all/V1/categories/{id}")
      operation catalogCategoryRepositoryV1SavePut( @PathVariable(value = "id") id : String, @RequestBody catalogCategoryRepositoryV1SavePutBody : AnonymousType_catalogCategoryRepositoryV1SavePutBody ) : catalog_data_category_interface
   }
   service V1CategoriesCategoryIdMoveService {
      [[ Move category ]]
      @HttpOperation(method = "PUT" , url = "http://localhost/rest/all/V1/categories/{categoryId}/move")
      operation catalogCategoryManagementV1MovePut( @PathVariable(value = "categoryId") categoryId : Int, @RequestBody catalogCategoryManagementV1MovePutBody : AnonymousType_catalogCategoryManagementV1MovePutBody ) : Boolean
   }
   service V1CategoriesListService {
      [[ Get category list ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/categories/list")
      operation catalogCategoryListV1GetListGet(  searchCriteria_filterGroups_0_filters_0_field_ : String,  searchCriteria_filterGroups_0_filters_0_value_ : String,  searchCriteria_filterGroups_0_filters_0_conditionType_ : String,  searchCriteria_sortOrders_0_field_ : String,  searchCriteria_sortOrders_0_direction_ : String,  searchCriteria_pageSize_ : Int,  searchCriteria_currentPage_ : Int ) : catalog_data_category_search_results_interface
   }
   service V1ProductsOptionsTypesService {
      [[ Get custom option types ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/products/options/types")
      operation catalogProductCustomOptionTypeListV1GetItemsGet(  ) : catalog_data_product_custom_option_type_interface[]
   }
   service V1ProductsSkuOptionsService {
      [[ Get the list of custom options for a specific product ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/products/{sku}/options")
      operation catalogProductCustomOptionRepositoryV1GetListGet( @PathVariable(value = "sku") sku : String ) : catalog_data_product_custom_option_interface[]
   }
   service V1ProductsSkuOptionsOptionIdService {
      [[ Get custom option for a specific product ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/products/{sku}/options/{optionId}")
      operation catalogProductCustomOptionRepositoryV1GetGet( @PathVariable(value = "sku") sku : String, @PathVariable(value = "optionId") optionId : Int ) : catalog_data_product_custom_option_interface
      @HttpOperation(method = "DELETE" , url = "http://localhost/rest/all/V1/products/{sku}/options/{optionId}")
      operation catalogProductCustomOptionRepositoryV1DeleteByIdentifierDelete( @PathVariable(value = "sku") sku : String, @PathVariable(value = "optionId") optionId : Int ) : Boolean
   }
   service V1ProductsOptionsService {
      [[ Save Custom Option ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/products/options")
      operation catalogProductCustomOptionRepositoryV1SavePost( @RequestBody catalogProductCustomOptionRepositoryV1SavePostBody : AnonymousType_catalogProductCustomOptionRepositoryV1SavePostBody ) : catalog_data_product_custom_option_interface
   }
   service V1ProductsOptionsOptionIdService {
      [[ Save Custom Option ]]
      @HttpOperation(method = "PUT" , url = "http://localhost/rest/all/V1/products/options/{optionId}")
      operation catalogProductCustomOptionRepositoryV1SavePut( @PathVariable(value = "optionId") optionId : String, @RequestBody catalogProductCustomOptionRepositoryV1SavePutBody : AnonymousType_catalogProductCustomOptionRepositoryV1SavePutBody ) : catalog_data_product_custom_option_interface
   }
   service V1ProductsLinksTypesService {
      [[ Retrieve information about available product link types ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/products/links/types")
      operation catalogProductLinkTypeListV1GetItemsGet(  ) : catalog_data_product_link_type_interface[]
   }
   service V1ProductsLinksTypeAttributesService {
      [[ Provide a list of the product link type attributes ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/products/links/{type}/attributes")
      operation catalogProductLinkTypeListV1GetItemAttributesGet( @PathVariable(value = "type") `type` : String ) : catalog_data_product_link_attribute_interface[]
   }
   service V1ProductsSkuLinksTypeService {
      [[ Provide the list of links for a specific product ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/products/{sku}/links/{type}")
      operation catalogProductLinkManagementV1GetLinkedItemsByTypeGet( @PathVariable(value = "sku") sku : String, @PathVariable(value = "type") `type` : String ) : catalog_data_product_link_interface[]
   }
   service V1ProductsSkuLinksService {
      [[ Save product link ]]
      @HttpOperation(method = "PUT" , url = "http://localhost/rest/all/V1/products/{sku}/links")
      operation catalogProductLinkRepositoryV1SavePut( @PathVariable(value = "sku") sku : String, @RequestBody catalogProductLinkRepositoryV1SavePutBody : AnonymousType_catalogProductLinkRepositoryV1SavePutBody ) : Boolean
      [[ Assign a product link to another product ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/products/{sku}/links")
      operation catalogProductLinkManagementV1SetProductLinksPost( @PathVariable(value = "sku") sku : String, @RequestBody catalogProductLinkManagementV1SetProductLinksPostBody : AnonymousType_catalogProductLinkManagementV1SetProductLinksPostBody ) : Boolean
   }
   service V1ProductsSkuLinksTypeLinkedProductSkuService {
      @HttpOperation(method = "DELETE" , url = "http://localhost/rest/all/V1/products/{sku}/links/{type}/{linkedProductSku}")
      operation catalogProductLinkRepositoryV1DeleteByIdDelete( @PathVariable(value = "sku") sku : String, @PathVariable(value = "type") `type` : String, @PathVariable(value = "linkedProductSku") linkedProductSku : String ) : Boolean
   }
   service V1CategoriesCategoryIdProductsService {
      [[ Get products assigned to category ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/categories/{categoryId}/products")
      operation catalogCategoryLinkManagementV1GetAssignedProductsGet( @PathVariable(value = "categoryId") categoryId : Int ) : catalog_data_category_product_link_interface[]
      [[ Assign a product to the required category ]]
      @HttpOperation(method = "PUT" , url = "http://localhost/rest/all/V1/categories/{categoryId}/products")
      operation catalogCategoryLinkRepositoryV1SavePut( @PathVariable(value = "categoryId") categoryId : String, @RequestBody catalogCategoryLinkRepositoryV1SavePutBody : AnonymousType_catalogCategoryLinkRepositoryV1SavePutBody ) : Boolean
      [[ Assign a product to the required category ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/categories/{categoryId}/products")
      operation catalogCategoryLinkRepositoryV1SavePost( @PathVariable(value = "categoryId") categoryId : String, @RequestBody catalogCategoryLinkRepositoryV1SavePostBody : AnonymousType_catalogCategoryLinkRepositoryV1SavePostBody ) : Boolean
   }
   service V1CategoriesCategoryIdProductsSkuService {
      [[ Remove the product assignment from the category by category id and sku ]]
      @HttpOperation(method = "DELETE" , url = "http://localhost/rest/all/V1/categories/{categoryId}/products/{sku}")
      operation catalogCategoryLinkRepositoryV1DeleteByIdsDelete( @PathVariable(value = "categoryId") categoryId : Int, @PathVariable(value = "sku") sku : String ) : Boolean
   }
   service V1ProductsSkuWebsitesService {
      [[ Assign a product to the website ]]
      @HttpOperation(method = "PUT" , url = "http://localhost/rest/all/V1/products/{sku}/websites")
      operation catalogProductWebsiteLinkRepositoryV1SavePut( @PathVariable(value = "sku") sku : String, @RequestBody catalogProductWebsiteLinkRepositoryV1SavePutBody : AnonymousType_catalogProductWebsiteLinkRepositoryV1SavePutBody ) : Boolean
      [[ Assign a product to the website ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/products/{sku}/websites")
      operation catalogProductWebsiteLinkRepositoryV1SavePost( @PathVariable(value = "sku") sku : String, @RequestBody catalogProductWebsiteLinkRepositoryV1SavePostBody : AnonymousType_catalogProductWebsiteLinkRepositoryV1SavePostBody ) : Boolean
   }
   service V1ProductsSkuWebsitesWebsiteIdService {
      [[ Remove the website assignment from the product by product sku ]]
      @HttpOperation(method = "DELETE" , url = "http://localhost/rest/all/V1/products/{sku}/websites/{websiteId}")
      operation catalogProductWebsiteLinkRepositoryV1DeleteByIdDelete( @PathVariable(value = "sku") sku : String, @PathVariable(value = "websiteId") websiteId : Int ) : Boolean
   }
   service V1Products_render_infoService {
      [[ Collect and retrieve the list of product render info. This info contains raw prices and formatted prices, product name, stock status, store_id, etc. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/products-render-info")
      operation catalogProductRenderListV1GetListGet(  searchCriteria_filterGroups_0_filters_0_field_ : String,  searchCriteria_filterGroups_0_filters_0_value_ : String,  searchCriteria_filterGroups_0_filters_0_conditionType_ : String,  searchCriteria_sortOrders_0_field_ : String,  searchCriteria_sortOrders_0_direction_ : String,  searchCriteria_pageSize_ : Int,  searchCriteria_currentPage_ : Int,  storeId : Int,  currencyCode : String ) : catalog_data_product_render_search_results_interface
   }
   service V1StockItemsProductSkuService {
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/stockItems/{productSku}")
      operation catalogInventoryStockRegistryV1GetStockItemBySkuGet( @PathVariable(value = "productSku") productSku : String,  scopeId : Int ) : catalog_inventory_data_stock_item_interface
   }
   service V1ProductsProductSkuStockItemsItemIdService {
      @HttpOperation(method = "PUT" , url = "http://localhost/rest/all/V1/products/{productSku}/stockItems/{itemId}")
      operation catalogInventoryStockRegistryV1UpdateStockItemBySkuPut( @PathVariable(value = "productSku") productSku : String, @PathVariable(value = "itemId") itemId : String, @RequestBody catalogInventoryStockRegistryV1UpdateStockItemBySkuPutBody : AnonymousType_catalogInventoryStockRegistryV1UpdateStockItemBySkuPutBody ) : Int
   }
   service V1StockItemsLowStockService {
      [[ Retrieves a list of SKU's with low inventory qty ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/stockItems/lowStock/")
      operation catalogInventoryStockRegistryV1GetLowStockItemsGet(  scopeId : Int,  qty : Decimal,  currentPage : Int,  pageSize : Int ) : catalog_inventory_data_stock_item_collection_interface
   }
   service V1StockStatusesProductSkuService {
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/stockStatuses/{productSku}")
      operation catalogInventoryStockRegistryV1GetStockStatusBySkuGet( @PathVariable(value = "productSku") productSku : String,  scopeId : Int ) : catalog_inventory_data_stock_status_interface
   }
   service V1CartsCartIdService {
      [[ Enables an administrative user to return information for a specified cart. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/carts/{cartId}")
      operation quoteCartRepositoryV1GetGet( @PathVariable(value = "cartId") cartId : Int ) : quote_data_cart_interface
      [[ Assigns a specified customer to a specified shopping cart. ]]
      @HttpOperation(method = "PUT" , url = "http://localhost/rest/all/V1/carts/{cartId}")
      operation quoteCartManagementV1AssignCustomerPut( @PathVariable(value = "cartId") cartId : Int, @RequestBody quoteCartManagementV1AssignCustomerPutBody : AnonymousType_quoteCartManagementV1AssignCustomerPutBody ) : Boolean
   }
   service V1CartsSearchService {
      [[ Enables administrative users to list carts that match specified search criteria. This call returns an array of objects, but detailed information about each object’s attributes might not be included.  See https://devdocs.magento.com/codelinks/attributes.html#CartRepositoryInterface to determine which call to use to get detailed information about all attributes for an object. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/carts/search")
      operation quoteCartRepositoryV1GetListGet(  searchCriteria_filterGroups_0_filters_0_field_ : String,  searchCriteria_filterGroups_0_filters_0_value_ : String,  searchCriteria_filterGroups_0_filters_0_conditionType_ : String,  searchCriteria_sortOrders_0_field_ : String,  searchCriteria_sortOrders_0_direction_ : String,  searchCriteria_pageSize_ : Int,  searchCriteria_currentPage_ : Int ) : quote_data_cart_search_results_interface
   }
   service V1CartsMineService {
      [[ Returns information for the cart for a specified customer. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/carts/mine")
      operation quoteCartManagementV1GetCartForCustomerGet(  ) : quote_data_cart_interface
      [[ Save quote ]]
      @HttpOperation(method = "PUT" , url = "http://localhost/rest/all/V1/carts/mine")
      operation quoteCartRepositoryV1SavePut( @RequestBody quoteCartRepositoryV1SavePutBody : AnonymousType_quoteCartRepositoryV1SavePutBody )
      [[ Creates an empty cart and quote for a specified customer if customer does not have a cart yet. ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/carts/mine")
      operation quoteCartManagementV1CreateEmptyCartForCustomerPost(  ) : Int
   }
   service V1CartsService {
      [[ Creates an empty cart and quote for a guest. ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/carts/")
      operation quoteCartManagementV1CreateEmptyCartPost(  ) : Int
   }
   service V1CustomersCustomerIdCartsService {
      [[ Creates an empty cart and quote for a specified customer if customer does not have a cart yet. ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/customers/{customerId}/carts")
      operation quoteCartManagementV1CreateEmptyCartForCustomerPost( @PathVariable(value = "customerId") customerId : Int ) : Int
   }
   service V1CartsMineOrderService {
      [[ Places an order for a specified cart. ]]
      @HttpOperation(method = "PUT" , url = "http://localhost/rest/all/V1/carts/mine/order")
      operation quoteCartManagementV1PlaceOrderPut( @RequestBody quoteCartManagementV1PlaceOrderPutBody : AnonymousType_quoteCartManagementV1PlaceOrderPutBody ) : Int
   }
   service V1CartsCartIdOrderService {
      [[ Places an order for a specified cart. ]]
      @HttpOperation(method = "PUT" , url = "http://localhost/rest/all/V1/carts/{cartId}/order")
      operation quoteCartManagementV1PlaceOrderPut( @PathVariable(value = "cartId") cartId : Int, @RequestBody quoteCartManagementV1PlaceOrderPutBody : AnonymousType_quoteCartManagementV1PlaceOrderPutBody ) : Int
   }
   service V1Guest_cartsCartIdService {
      [[ Enable a guest user to return information for a specified cart. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/guest-carts/{cartId}")
      operation quoteGuestCartRepositoryV1GetGet( @PathVariable(value = "cartId") cartId : String ) : quote_data_cart_interface
      [[ Assign a specified customer to a specified shopping cart. ]]
      @HttpOperation(method = "PUT" , url = "http://localhost/rest/all/V1/guest-carts/{cartId}")
      operation quoteGuestCartManagementV1AssignCustomerPut( @PathVariable(value = "cartId") cartId : String, @RequestBody quoteGuestCartManagementV1AssignCustomerPutBody : AnonymousType_quoteGuestCartManagementV1AssignCustomerPutBody ) : Boolean
   }
   service V1Guest_cartsService {
      [[ Enable an customer or guest user to create an empty cart and quote for an anonymous customer. ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/guest-carts")
      operation quoteGuestCartManagementV1CreateEmptyCartPost(  ) : String
   }
   service V1Guest_cartsCartIdOrderService {
      [[ Place an order for a specified cart. ]]
      @HttpOperation(method = "PUT" , url = "http://localhost/rest/all/V1/guest-carts/{cartId}/order")
      operation quoteGuestCartManagementV1PlaceOrderPut( @PathVariable(value = "cartId") cartId : String, @RequestBody quoteGuestCartManagementV1PlaceOrderPutBody : AnonymousType_quoteGuestCartManagementV1PlaceOrderPutBody ) : Int
   }
   service V1CartsCartIdShipping_methodsService {
      [[ Lists applicable shipping methods for a specified quote. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/carts/{cartId}/shipping-methods")
      operation quoteShippingMethodManagementV1GetListGet( @PathVariable(value = "cartId") cartId : Int ) : quote_data_shipping_method_interface[]
   }
   service V1CartsCartIdEstimate_shipping_methods_by_address_idService {
      [[ Estimate shipping ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/carts/{cartId}/estimate-shipping-methods-by-address-id")
      operation quoteShippingMethodManagementV1EstimateByAddressIdPost( @PathVariable(value = "cartId") cartId : Int, @RequestBody quoteShippingMethodManagementV1EstimateByAddressIdPostBody : AnonymousType_quoteShippingMethodManagementV1EstimateByAddressIdPostBody ) : quote_data_shipping_method_interface[]
   }
   service V1CartsMineShipping_methodsService {
      [[ Lists applicable shipping methods for a specified quote. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/carts/mine/shipping-methods")
      operation quoteShippingMethodManagementV1GetListGet(  ) : quote_data_shipping_method_interface[]
   }
   service V1CartsMineEstimate_shipping_methods_by_address_idService {
      [[ Estimate shipping ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/carts/mine/estimate-shipping-methods-by-address-id")
      operation quoteShippingMethodManagementV1EstimateByAddressIdPost( @RequestBody quoteShippingMethodManagementV1EstimateByAddressIdPostBody : AnonymousType_quoteShippingMethodManagementV1EstimateByAddressIdPostBody ) : quote_data_shipping_method_interface[]
   }
   service V1CartsCartIdEstimate_shipping_methodsService {
      [[ Estimate shipping by address and return list of available shipping methods ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/carts/{cartId}/estimate-shipping-methods")
      operation quoteShipmentEstimationV1EstimateByExtendedAddressPost( @PathVariable(value = "cartId") cartId : String, @RequestBody quoteShipmentEstimationV1EstimateByExtendedAddressPostBody : AnonymousType_quoteShipmentEstimationV1EstimateByExtendedAddressPostBody ) : quote_data_shipping_method_interface[]
   }
   service V1CartsMineEstimate_shipping_methodsService {
      [[ Estimate shipping by address and return list of available shipping methods ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/carts/mine/estimate-shipping-methods")
      operation quoteShipmentEstimationV1EstimateByExtendedAddressPost( @RequestBody quoteShipmentEstimationV1EstimateByExtendedAddressPostBody : AnonymousType_quoteShipmentEstimationV1EstimateByExtendedAddressPostBody ) : quote_data_shipping_method_interface[]
   }
   service V1Guest_cartsCartIdShipping_methodsService {
      [[ List applicable shipping methods for a specified quote. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/guest-carts/{cartId}/shipping-methods")
      operation quoteGuestShippingMethodManagementV1GetListGet( @PathVariable(value = "cartId") cartId : String ) : quote_data_shipping_method_interface[]
   }
   service V1Guest_cartsCartIdEstimate_shipping_methodsService {
      [[ Estimate shipping by address and return list of available shipping methods ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/guest-carts/{cartId}/estimate-shipping-methods")
      operation quoteGuestShipmentEstimationV1EstimateByExtendedAddressPost( @PathVariable(value = "cartId") cartId : String, @RequestBody quoteGuestShipmentEstimationV1EstimateByExtendedAddressPostBody : AnonymousType_quoteGuestShipmentEstimationV1EstimateByExtendedAddressPostBody ) : quote_data_shipping_method_interface[]
   }
   service V1CartsCartIdItemsService {
      [[ Lists items that are assigned to a specified cart. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/carts/{cartId}/items")
      operation quoteCartItemRepositoryV1GetListGet( @PathVariable(value = "cartId") cartId : Int ) : quote_data_cart_item_interface[]
   }
   service V1CartsQuoteIdItemsService {
      [[ Add/update the specified cart item. ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/carts/{quoteId}/items")
      operation quoteCartItemRepositoryV1SavePost( @PathVariable(value = "quoteId") quoteId : String, @RequestBody quoteCartItemRepositoryV1SavePostBody : AnonymousType_quoteCartItemRepositoryV1SavePostBody ) : quote_data_cart_item_interface
   }
   service V1CartsCartIdItemsItemIdService {
      [[ Add/update the specified cart item. ]]
      @HttpOperation(method = "PUT" , url = "http://localhost/rest/all/V1/carts/{cartId}/items/{itemId}")
      operation quoteCartItemRepositoryV1SavePut( @PathVariable(value = "cartId") cartId : String, @PathVariable(value = "itemId") itemId : String, @RequestBody quoteCartItemRepositoryV1SavePutBody : AnonymousType_quoteCartItemRepositoryV1SavePutBody ) : quote_data_cart_item_interface
      [[ Removes the specified item from the specified cart. ]]
      @HttpOperation(method = "DELETE" , url = "http://localhost/rest/all/V1/carts/{cartId}/items/{itemId}")
      operation quoteCartItemRepositoryV1DeleteByIdDelete( @PathVariable(value = "cartId") cartId : Int, @PathVariable(value = "itemId") itemId : Int ) : Boolean
   }
   service V1CartsMineItemsService {
      [[ Lists items that are assigned to a specified cart. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/carts/mine/items")
      operation quoteCartItemRepositoryV1GetListGet(  ) : quote_data_cart_item_interface[]
      [[ Add/update the specified cart item. ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/carts/mine/items")
      operation quoteCartItemRepositoryV1SavePost( @RequestBody quoteCartItemRepositoryV1SavePostBody : AnonymousType_quoteCartItemRepositoryV1SavePostBody ) : quote_data_cart_item_interface
   }
   service V1CartsMineItemsItemIdService {
      [[ Add/update the specified cart item. ]]
      @HttpOperation(method = "PUT" , url = "http://localhost/rest/all/V1/carts/mine/items/{itemId}")
      operation quoteCartItemRepositoryV1SavePut( @PathVariable(value = "itemId") itemId : String, @RequestBody quoteCartItemRepositoryV1SavePutBody : AnonymousType_quoteCartItemRepositoryV1SavePutBody ) : quote_data_cart_item_interface
      [[ Removes the specified item from the specified cart. ]]
      @HttpOperation(method = "DELETE" , url = "http://localhost/rest/all/V1/carts/mine/items/{itemId}")
      operation quoteCartItemRepositoryV1DeleteByIdDelete( @PathVariable(value = "itemId") itemId : Int ) : Boolean
   }
   service V1Guest_cartsCartIdItemsService {
      [[ List items that are assigned to a specified cart. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/guest-carts/{cartId}/items")
      operation quoteGuestCartItemRepositoryV1GetListGet( @PathVariable(value = "cartId") cartId : String ) : quote_data_cart_item_interface[]
      [[ Add/update the specified cart item. ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/guest-carts/{cartId}/items")
      operation quoteGuestCartItemRepositoryV1SavePost( @PathVariable(value = "cartId") cartId : String, @RequestBody quoteGuestCartItemRepositoryV1SavePostBody : AnonymousType_quoteGuestCartItemRepositoryV1SavePostBody ) : quote_data_cart_item_interface
   }
   service V1Guest_cartsCartIdItemsItemIdService {
      [[ Add/update the specified cart item. ]]
      @HttpOperation(method = "PUT" , url = "http://localhost/rest/all/V1/guest-carts/{cartId}/items/{itemId}")
      operation quoteGuestCartItemRepositoryV1SavePut( @PathVariable(value = "cartId") cartId : String, @PathVariable(value = "itemId") itemId : String, @RequestBody quoteGuestCartItemRepositoryV1SavePutBody : AnonymousType_quoteGuestCartItemRepositoryV1SavePutBody ) : quote_data_cart_item_interface
      [[ Remove the specified item from the specified cart. ]]
      @HttpOperation(method = "DELETE" , url = "http://localhost/rest/all/V1/guest-carts/{cartId}/items/{itemId}")
      operation quoteGuestCartItemRepositoryV1DeleteByIdDelete( @PathVariable(value = "cartId") cartId : String, @PathVariable(value = "itemId") itemId : Int ) : Boolean
   }
   service V1CartsCartIdSelected_payment_methodService {
      [[ Returns the payment method for a specified shopping cart. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/carts/{cartId}/selected-payment-method")
      operation quotePaymentMethodManagementV1GetGet( @PathVariable(value = "cartId") cartId : Int ) : quote_data_payment_interface
      [[ Adds a specified payment method to a specified shopping cart. ]]
      @HttpOperation(method = "PUT" , url = "http://localhost/rest/all/V1/carts/{cartId}/selected-payment-method")
      operation quotePaymentMethodManagementV1SetPut( @PathVariable(value = "cartId") cartId : Int, @RequestBody quotePaymentMethodManagementV1SetPutBody : AnonymousType_quotePaymentMethodManagementV1SetPutBody ) : String
   }
   service V1CartsCartIdPayment_methodsService {
      [[ Lists available payment methods for a specified shopping cart. This call returns an array of objects, but detailed information about each object’s attributes might not be included.  See https://devdocs.magento.com/codelinks/attributes.html#PaymentMethodManagementInterface to determine which call to use to get detailed information about all attributes for an object. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/carts/{cartId}/payment-methods")
      operation quotePaymentMethodManagementV1GetListGet( @PathVariable(value = "cartId") cartId : Int ) : quote_data_payment_method_interface[]
   }
   service V1CartsMineSelected_payment_methodService {
      [[ Returns the payment method for a specified shopping cart. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/carts/mine/selected-payment-method")
      operation quotePaymentMethodManagementV1GetGet(  ) : quote_data_payment_interface
      [[ Adds a specified payment method to a specified shopping cart. ]]
      @HttpOperation(method = "PUT" , url = "http://localhost/rest/all/V1/carts/mine/selected-payment-method")
      operation quotePaymentMethodManagementV1SetPut( @RequestBody quotePaymentMethodManagementV1SetPutBody : AnonymousType_quotePaymentMethodManagementV1SetPutBody ) : String
   }
   service V1CartsMinePayment_methodsService {
      [[ Lists available payment methods for a specified shopping cart. This call returns an array of objects, but detailed information about each object’s attributes might not be included.  See https://devdocs.magento.com/codelinks/attributes.html#PaymentMethodManagementInterface to determine which call to use to get detailed information about all attributes for an object. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/carts/mine/payment-methods")
      operation quotePaymentMethodManagementV1GetListGet(  ) : quote_data_payment_method_interface[]
   }
   service V1Guest_cartsCartIdSelected_payment_methodService {
      [[ Return the payment method for a specified shopping cart. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/guest-carts/{cartId}/selected-payment-method")
      operation quoteGuestPaymentMethodManagementV1GetGet( @PathVariable(value = "cartId") cartId : String ) : quote_data_payment_interface
      [[ Add a specified payment method to a specified shopping cart. ]]
      @HttpOperation(method = "PUT" , url = "http://localhost/rest/all/V1/guest-carts/{cartId}/selected-payment-method")
      operation quoteGuestPaymentMethodManagementV1SetPut( @PathVariable(value = "cartId") cartId : String, @RequestBody quoteGuestPaymentMethodManagementV1SetPutBody : AnonymousType_quoteGuestPaymentMethodManagementV1SetPutBody ) : Int
   }
   service V1Guest_cartsCartIdPayment_methodsService {
      [[ List available payment methods for a specified shopping cart. This call returns an array of objects, but detailed information about each object’s attributes might not be included.  See https://devdocs.magento.com/codelinks/attributes.html#GuestPaymentMethodManagementInterface to determine which call to use to get detailed information about all attributes for an object. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/guest-carts/{cartId}/payment-methods")
      operation quoteGuestPaymentMethodManagementV1GetListGet( @PathVariable(value = "cartId") cartId : String ) : quote_data_payment_method_interface[]
   }
   service V1CartsCartIdBilling_addressService {
      [[ Returns the billing address for a specified quote. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/carts/{cartId}/billing-address")
      operation quoteBillingAddressManagementV1GetGet( @PathVariable(value = "cartId") cartId : Int ) : quote_data_address_interface
      [[ Assigns a specified billing address to a specified cart. ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/carts/{cartId}/billing-address")
      operation quoteBillingAddressManagementV1AssignPost( @PathVariable(value = "cartId") cartId : Int, @RequestBody quoteBillingAddressManagementV1AssignPostBody : AnonymousType_quoteBillingAddressManagementV1AssignPostBody ) : Int
   }
   service V1CartsMineBilling_addressService {
      [[ Returns the billing address for a specified quote. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/carts/mine/billing-address")
      operation quoteBillingAddressManagementV1GetGet(  ) : quote_data_address_interface
      [[ Assigns a specified billing address to a specified cart. ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/carts/mine/billing-address")
      operation quoteBillingAddressManagementV1AssignPost( @RequestBody quoteBillingAddressManagementV1AssignPostBody : AnonymousType_quoteBillingAddressManagementV1AssignPostBody ) : Int
   }
   service V1Guest_cartsCartIdBilling_addressService {
      [[ Return the billing address for a specified quote. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/guest-carts/{cartId}/billing-address")
      operation quoteGuestBillingAddressManagementV1GetGet( @PathVariable(value = "cartId") cartId : String ) : quote_data_address_interface
      [[ Assign a specified billing address to a specified cart. ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/guest-carts/{cartId}/billing-address")
      operation quoteGuestBillingAddressManagementV1AssignPost( @PathVariable(value = "cartId") cartId : String, @RequestBody quoteGuestBillingAddressManagementV1AssignPostBody : AnonymousType_quoteGuestBillingAddressManagementV1AssignPostBody ) : Int
   }
   service V1CartsCartIdCouponsService {
      [[ Returns information for a coupon in a specified cart. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/carts/{cartId}/coupons")
      operation quoteCouponManagementV1GetGet( @PathVariable(value = "cartId") cartId : Int ) : String
      [[ Deletes a coupon from a specified cart. ]]
      @HttpOperation(method = "DELETE" , url = "http://localhost/rest/all/V1/carts/{cartId}/coupons")
      operation quoteCouponManagementV1RemoveDelete( @PathVariable(value = "cartId") cartId : Int ) : Boolean
   }
   service V1CartsCartIdCouponsCouponCodeService {
      [[ Adds a coupon by code to a specified cart. ]]
      @HttpOperation(method = "PUT" , url = "http://localhost/rest/all/V1/carts/{cartId}/coupons/{couponCode}")
      operation quoteCouponManagementV1SetPut( @PathVariable(value = "cartId") cartId : Int, @PathVariable(value = "couponCode") couponCode : String ) : Boolean
   }
   service V1CartsMineCouponsService {
      [[ Returns information for a coupon in a specified cart. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/carts/mine/coupons")
      operation quoteCouponManagementV1GetGet(  ) : String
      [[ Deletes a coupon from a specified cart. ]]
      @HttpOperation(method = "DELETE" , url = "http://localhost/rest/all/V1/carts/mine/coupons")
      operation quoteCouponManagementV1RemoveDelete(  ) : Boolean
   }
   service V1CartsMineCouponsCouponCodeService {
      [[ Adds a coupon by code to a specified cart. ]]
      @HttpOperation(method = "PUT" , url = "http://localhost/rest/all/V1/carts/mine/coupons/{couponCode}")
      operation quoteCouponManagementV1SetPut( @PathVariable(value = "couponCode") couponCode : String ) : Boolean
   }
   service V1Guest_cartsCartIdCouponsService {
      [[ Return information for a coupon in a specified cart. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/guest-carts/{cartId}/coupons")
      operation quoteGuestCouponManagementV1GetGet( @PathVariable(value = "cartId") cartId : String ) : String
      [[ Delete a coupon from a specified cart. ]]
      @HttpOperation(method = "DELETE" , url = "http://localhost/rest/all/V1/guest-carts/{cartId}/coupons")
      operation quoteGuestCouponManagementV1RemoveDelete( @PathVariable(value = "cartId") cartId : String ) : Boolean
   }
   service V1Guest_cartsCartIdCouponsCouponCodeService {
      [[ Add a coupon by code to a specified cart. ]]
      @HttpOperation(method = "PUT" , url = "http://localhost/rest/all/V1/guest-carts/{cartId}/coupons/{couponCode}")
      operation quoteGuestCouponManagementV1SetPut( @PathVariable(value = "cartId") cartId : String, @PathVariable(value = "couponCode") couponCode : String ) : Boolean
   }
   service V1CartsCartIdTotalsService {
      [[ Returns quote totals data for a specified cart. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/carts/{cartId}/totals")
      operation quoteCartTotalRepositoryV1GetGet( @PathVariable(value = "cartId") cartId : Int ) : quote_data_totals_interface
   }
   service V1CartsMineTotalsService {
      [[ Returns quote totals data for a specified cart. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/carts/mine/totals")
      operation quoteCartTotalRepositoryV1GetGet(  ) : quote_data_totals_interface
   }
   service V1Guest_cartsCartIdCollect_totalsService {
      [[ Set shipping/billing methods and additional data for cart and collect totals for guest. ]]
      @HttpOperation(method = "PUT" , url = "http://localhost/rest/all/V1/guest-carts/{cartId}/collect-totals")
      operation quoteGuestCartTotalManagementV1CollectTotalsPut( @PathVariable(value = "cartId") cartId : String, @RequestBody quoteGuestCartTotalManagementV1CollectTotalsPutBody : AnonymousType_quoteGuestCartTotalManagementV1CollectTotalsPutBody ) : quote_data_totals_interface
   }
   service V1Guest_cartsCartIdTotalsService {
      [[ Return quote totals data for a specified cart. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/guest-carts/{cartId}/totals")
      operation quoteGuestCartTotalRepositoryV1GetGet( @PathVariable(value = "cartId") cartId : String ) : quote_data_totals_interface
   }
   service V1CartsMineCollect_totalsService {
      [[ Set shipping/billing methods and additional data for cart and collect totals. ]]
      @HttpOperation(method = "PUT" , url = "http://localhost/rest/all/V1/carts/mine/collect-totals")
      operation quoteCartTotalManagementV1CollectTotalsPut( @RequestBody quoteCartTotalManagementV1CollectTotalsPutBody : AnonymousType_quoteCartTotalManagementV1CollectTotalsPutBody ) : quote_data_totals_interface
   }
   service V1OrdersIdService {
      [[ Loads a specified order. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/orders/{id}")
      operation salesOrderRepositoryV1GetGet( @PathVariable(value = "id") id : Int ) : sales_data_order_interface
   }
   service V1OrdersService {
      [[ Lists orders that match specified search criteria. This call returns an array of objects, but detailed information about each object’s attributes might not be included. See https://devdocs.magento.com/codelinks/attributes.html#OrderRepositoryInterface to determine which call to use to get detailed information about all attributes for an object. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/orders")
      operation salesOrderRepositoryV1GetListGet(  searchCriteria_filterGroups_0_filters_0_field_ : String,  searchCriteria_filterGroups_0_filters_0_value_ : String,  searchCriteria_filterGroups_0_filters_0_conditionType_ : String,  searchCriteria_sortOrders_0_field_ : String,  searchCriteria_sortOrders_0_direction_ : String,  searchCriteria_pageSize_ : Int,  searchCriteria_currentPage_ : Int ) : sales_data_order_search_result_interface
      [[ Performs persist operations for a specified order. ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/orders")
      operation salesOrderRepositoryV1SavePost( @RequestBody salesOrderRepositoryV1SavePostBody : AnonymousType_salesOrderRepositoryV1SavePostBody ) : sales_data_order_interface
   }
   service V1OrdersCreateService {
      [[ Performs persist operations for a specified order. ]]
      @HttpOperation(method = "PUT" , url = "http://localhost/rest/all/V1/orders/create")
      operation salesOrderRepositoryV1SavePut( @RequestBody salesOrderRepositoryV1SavePutBody : AnonymousType_salesOrderRepositoryV1SavePutBody ) : sales_data_order_interface
   }
   service V1OrdersIdStatusesService {
      [[ Gets the status for a specified order. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/orders/{id}/statuses")
      operation salesOrderManagementV1GetStatusGet( @PathVariable(value = "id") id : Int ) : String
   }
   service V1OrdersIdCancelService {
      [[ Cancels a specified order. ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/orders/{id}/cancel")
      operation salesOrderManagementV1CancelPost( @PathVariable(value = "id") id : Int ) : Boolean
   }
   service V1OrdersIdEmailsService {
      [[ Emails a user a specified order. ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/orders/{id}/emails")
      operation salesOrderManagementV1NotifyPost( @PathVariable(value = "id") id : Int ) : Boolean
   }
   service V1OrdersIdHoldService {
      [[ Holds a specified order. ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/orders/{id}/hold")
      operation salesOrderManagementV1HoldPost( @PathVariable(value = "id") id : Int ) : Boolean
   }
   service V1OrdersIdUnholdService {
      [[ Releases a specified order from hold status. ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/orders/{id}/unhold")
      operation salesOrderManagementV1UnHoldPost( @PathVariable(value = "id") id : Int ) : Boolean
   }
   service V1OrdersIdCommentsService {
      [[ Lists comments for a specified order. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/orders/{id}/comments")
      operation salesOrderManagementV1GetCommentsListGet( @PathVariable(value = "id") id : Int ) : sales_data_order_status_history_search_result_interface
      [[ Adds a comment to a specified order. ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/orders/{id}/comments")
      operation salesOrderManagementV1AddCommentPost( @PathVariable(value = "id") id : Int, @RequestBody salesOrderManagementV1AddCommentPostBody : AnonymousType_salesOrderManagementV1AddCommentPostBody ) : Boolean
   }
   service V1OrdersParent_idService {
      [[ Performs persist operations for a specified order address. ]]
      @HttpOperation(method = "PUT" , url = "http://localhost/rest/all/V1/orders/{parent_id}")
      operation salesOrderAddressRepositoryV1SavePut( @PathVariable(value = "parent_id") parent_id : String, @RequestBody salesOrderAddressRepositoryV1SavePutBody : AnonymousType_salesOrderAddressRepositoryV1SavePutBody ) : sales_data_order_address_interface
   }
   service V1OrdersItemsIdService {
      [[ Loads a specified order item. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/orders/items/{id}")
      operation salesOrderItemRepositoryV1GetGet( @PathVariable(value = "id") id : Int ) : sales_data_order_item_interface
   }
   service V1OrdersItemsService {
      [[ Lists order items that match specified search criteria. This call returns an array of objects, but detailed information about each object’s attributes might not be included. See https://devdocs.magento.com/codelinks/attributes.html#OrderItemRepositoryInterface to determine which call to use to get detailed information about all attributes for an object. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/orders/items")
      operation salesOrderItemRepositoryV1GetListGet(  searchCriteria_filterGroups_0_filters_0_field_ : String,  searchCriteria_filterGroups_0_filters_0_value_ : String,  searchCriteria_filterGroups_0_filters_0_conditionType_ : String,  searchCriteria_sortOrders_0_field_ : String,  searchCriteria_sortOrders_0_direction_ : String,  searchCriteria_pageSize_ : Int,  searchCriteria_currentPage_ : Int ) : sales_data_order_item_search_result_interface
   }
   service V1InvoicesIdService {
      [[ Loads a specified invoice. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/invoices/{id}")
      operation salesInvoiceRepositoryV1GetGet( @PathVariable(value = "id") id : Int ) : sales_data_invoice_interface
   }
   service V1InvoicesService {
      [[ Lists invoices that match specified search criteria. This call returns an array of objects, but detailed information about each object’s attributes might not be included. See https://devdocs.magento.com/codelinks/attributes.html#InvoiceRepositoryInterface to determine which call to use to get detailed information about all attributes for an object. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/invoices")
      operation salesInvoiceRepositoryV1GetListGet(  searchCriteria_filterGroups_0_filters_0_field_ : String,  searchCriteria_filterGroups_0_filters_0_value_ : String,  searchCriteria_filterGroups_0_filters_0_conditionType_ : String,  searchCriteria_sortOrders_0_field_ : String,  searchCriteria_sortOrders_0_direction_ : String,  searchCriteria_pageSize_ : Int,  searchCriteria_currentPage_ : Int ) : sales_data_invoice_search_result_interface
   }
   service V1InvoicesService {
      [[ Performs persist operations for a specified invoice. ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/invoices/")
      operation salesInvoiceRepositoryV1SavePost( @RequestBody salesInvoiceRepositoryV1SavePostBody : AnonymousType_salesInvoiceRepositoryV1SavePostBody ) : sales_data_invoice_interface
   }
   service V1InvoicesIdCommentsService {
      [[ Lists comments for a specified invoice. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/invoices/{id}/comments")
      operation salesInvoiceManagementV1GetCommentsListGet( @PathVariable(value = "id") id : Int ) : sales_data_invoice_comment_search_result_interface
   }
   service V1InvoicesIdEmailsService {
      [[ Emails a user a specified invoice. ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/invoices/{id}/emails")
      operation salesInvoiceManagementV1NotifyPost( @PathVariable(value = "id") id : Int ) : Boolean
   }
   service V1InvoicesIdVoidService {
      [[ Voids a specified invoice. ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/invoices/{id}/void")
      operation salesInvoiceManagementV1SetVoidPost( @PathVariable(value = "id") id : Int ) : Boolean
   }
   service V1InvoicesIdCaptureService {
      [[ Sets invoice capture. ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/invoices/{id}/capture")
      operation salesInvoiceManagementV1SetCapturePost( @PathVariable(value = "id") id : Int ) : String
   }
   service V1InvoicesCommentsService {
      [[ Performs persist operations for a specified invoice comment. ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/invoices/comments")
      operation salesInvoiceCommentRepositoryV1SavePost( @RequestBody salesInvoiceCommentRepositoryV1SavePostBody : AnonymousType_salesInvoiceCommentRepositoryV1SavePostBody ) : sales_data_invoice_comment_interface
   }
   service V1InvoiceInvoiceIdRefundService {
      [[ Create refund for invoice ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/invoice/{invoiceId}/refund")
      operation salesRefundInvoiceV1ExecutePost( @PathVariable(value = "invoiceId") invoiceId : Int, @RequestBody salesRefundInvoiceV1ExecutePostBody : AnonymousType_salesRefundInvoiceV1ExecutePostBody ) : Int
   }
   service V1CreditmemoIdCommentsService {
      [[ Lists comments for a specified credit memo. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/creditmemo/{id}/comments")
      operation salesCreditmemoManagementV1GetCommentsListGet( @PathVariable(value = "id") id : Int ) : sales_data_creditmemo_comment_search_result_interface
      [[ Performs persist operations for a specified entity. ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/creditmemo/{id}/comments")
      operation salesCreditmemoCommentRepositoryV1SavePost( @PathVariable(value = "id") id : String, @RequestBody salesCreditmemoCommentRepositoryV1SavePostBody : AnonymousType_salesCreditmemoCommentRepositoryV1SavePostBody ) : sales_data_creditmemo_comment_interface
   }
   service V1CreditmemoIdService {
      [[ Loads a specified credit memo. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/creditmemo/{id}")
      operation salesCreditmemoRepositoryV1GetGet( @PathVariable(value = "id") id : Int ) : sales_data_creditmemo_interface
      [[ Cancels a specified credit memo. ]]
      @HttpOperation(method = "PUT" , url = "http://localhost/rest/all/V1/creditmemo/{id}")
      operation salesCreditmemoManagementV1CancelPut( @PathVariable(value = "id") id : Int ) : Boolean
   }
   service V1CreditmemoIdEmailsService {
      [[ Emails a user a specified credit memo. ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/creditmemo/{id}/emails")
      operation salesCreditmemoManagementV1NotifyPost( @PathVariable(value = "id") id : Int ) : Boolean
   }
   service V1CreditmemoRefundService {
      [[ Prepare creditmemo to refund and save it. ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/creditmemo/refund")
      operation salesCreditmemoManagementV1RefundPost( @RequestBody salesCreditmemoManagementV1RefundPostBody : AnonymousType_salesCreditmemoManagementV1RefundPostBody ) : sales_data_creditmemo_interface
   }
   service V1CreditmemosService {
      [[ Lists credit memos that match specified search criteria. This call returns an array of objects, but detailed information about each object’s attributes might not be included. See https://devdocs.magento.com/codelinks/attributes.html#CreditmemoRepositoryInterface to determine which call to use to get detailed information about all attributes for an object. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/creditmemos")
      operation salesCreditmemoRepositoryV1GetListGet(  searchCriteria_filterGroups_0_filters_0_field_ : String,  searchCriteria_filterGroups_0_filters_0_value_ : String,  searchCriteria_filterGroups_0_filters_0_conditionType_ : String,  searchCriteria_sortOrders_0_field_ : String,  searchCriteria_sortOrders_0_direction_ : String,  searchCriteria_pageSize_ : Int,  searchCriteria_currentPage_ : Int ) : sales_data_creditmemo_search_result_interface
   }
   service V1CreditmemoService {
      [[ Performs persist operations for a specified credit memo. ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/creditmemo")
      operation salesCreditmemoRepositoryV1SavePost( @RequestBody salesCreditmemoRepositoryV1SavePostBody : AnonymousType_salesCreditmemoRepositoryV1SavePostBody ) : sales_data_creditmemo_interface
   }
   service V1OrderOrderIdRefundService {
      [[ Create offline refund for order ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/order/{orderId}/refund")
      operation salesRefundOrderV1ExecutePost( @PathVariable(value = "orderId") orderId : Int, @RequestBody salesRefundOrderV1ExecutePostBody : AnonymousType_salesRefundOrderV1ExecutePostBody ) : Int
   }
   service V1ShipmentIdService {
      [[ Loads a specified shipment. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/shipment/{id}")
      operation salesShipmentRepositoryV1GetGet( @PathVariable(value = "id") id : Int ) : sales_data_shipment_interface
   }
   service V1ShipmentsService {
      [[ Lists shipments that match specified search criteria. This call returns an array of objects, but detailed information about each object’s attributes might not be included. See https://devdocs.magento.com/codelinks/attributes.html#ShipmentRepositoryInterface to determine which call to use to get detailed information about all attributes for an object. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/shipments")
      operation salesShipmentRepositoryV1GetListGet(  searchCriteria_filterGroups_0_filters_0_field_ : String,  searchCriteria_filterGroups_0_filters_0_value_ : String,  searchCriteria_filterGroups_0_filters_0_conditionType_ : String,  searchCriteria_sortOrders_0_field_ : String,  searchCriteria_sortOrders_0_direction_ : String,  searchCriteria_pageSize_ : Int,  searchCriteria_currentPage_ : Int ) : sales_data_shipment_search_result_interface
   }
   service V1ShipmentService {
      [[ Performs persist operations for a specified shipment. ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/shipment/")
      operation salesShipmentRepositoryV1SavePost( @RequestBody salesShipmentRepositoryV1SavePostBody : AnonymousType_salesShipmentRepositoryV1SavePostBody ) : sales_data_shipment_interface
   }
   service V1ShipmentIdCommentsService {
      [[ Lists comments for a specified shipment. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/shipment/{id}/comments")
      operation salesShipmentManagementV1GetCommentsListGet( @PathVariable(value = "id") id : Int ) : sales_data_shipment_comment_search_result_interface
      [[ Performs persist operations for a specified shipment comment. ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/shipment/{id}/comments")
      operation salesShipmentCommentRepositoryV1SavePost( @PathVariable(value = "id") id : String, @RequestBody salesShipmentCommentRepositoryV1SavePostBody : AnonymousType_salesShipmentCommentRepositoryV1SavePostBody ) : sales_data_shipment_comment_interface
   }
   service V1ShipmentIdEmailsService {
      [[ Emails user a specified shipment. ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/shipment/{id}/emails")
      operation salesShipmentManagementV1NotifyPost( @PathVariable(value = "id") id : Int ) : Boolean
   }
   service V1ShipmentIdLabelService {
      [[ Gets a specified shipment label. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/shipment/{id}/label")
      operation salesShipmentManagementV1GetLabelGet( @PathVariable(value = "id") id : Int ) : String
   }
   service V1ShipmentTrackService {
      [[ Performs persist operations for a specified shipment track. ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/shipment/track")
      operation salesShipmentTrackRepositoryV1SavePost( @RequestBody salesShipmentTrackRepositoryV1SavePostBody : AnonymousType_salesShipmentTrackRepositoryV1SavePostBody ) : sales_data_shipment_track_interface
   }
   service V1ShipmentTrackIdService {
      [[ Deletes a specified shipment track by ID. ]]
      @HttpOperation(method = "DELETE" , url = "http://localhost/rest/all/V1/shipment/track/{id}")
      operation salesShipmentTrackRepositoryV1DeleteByIdDelete( @PathVariable(value = "id") id : Int ) : Boolean
   }
   service V1OrderOrderIdShipService {
      [[ Creates new Shipment for given Order. ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/order/{orderId}/ship")
      operation salesShipOrderV1ExecutePost( @PathVariable(value = "orderId") orderId : Int, @RequestBody salesShipOrderV1ExecutePostBody : AnonymousType_salesShipOrderV1ExecutePostBody ) : Int
   }
   service V1TransactionsIdService {
      [[ Loads a specified transaction. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/transactions/{id}")
      operation salesTransactionRepositoryV1GetGet( @PathVariable(value = "id") id : Int ) : sales_data_transaction_interface
   }
   service V1TransactionsService {
      [[ Lists transactions that match specified search criteria. This call returns an array of objects, but detailed information about each object’s attributes might not be included. See https://devdocs.magento.com/codelinks/attributes.html#TransactionRepositoryInterface to determine which call to use to get detailed information about all attributes for an object. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/transactions")
      operation salesTransactionRepositoryV1GetListGet(  searchCriteria_filterGroups_0_filters_0_field_ : String,  searchCriteria_filterGroups_0_filters_0_value_ : String,  searchCriteria_filterGroups_0_filters_0_conditionType_ : String,  searchCriteria_sortOrders_0_field_ : String,  searchCriteria_sortOrders_0_direction_ : String,  searchCriteria_pageSize_ : Int,  searchCriteria_currentPage_ : Int ) : sales_data_transaction_search_result_interface
   }
   service V1OrderOrderIdInvoiceService {
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/order/{orderId}/invoice")
      operation salesInvoiceOrderV1ExecutePost( @PathVariable(value = "orderId") orderId : Int, @RequestBody salesInvoiceOrderV1ExecutePostBody : AnonymousType_salesInvoiceOrderV1ExecutePostBody ) : Int
   }
   service V1Guest_cartsCartIdShipping_informationService {
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/guest-carts/{cartId}/shipping-information")
      operation checkoutGuestShippingInformationManagementV1SaveAddressInformationPost( @PathVariable(value = "cartId") cartId : String, @RequestBody checkoutGuestShippingInformationManagementV1SaveAddressInformationPostBody : AnonymousType_checkoutGuestShippingInformationManagementV1SaveAddressInformationPostBody ) : checkout_data_payment_details_interface
   }
   service V1CartsMineShipping_informationService {
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/carts/mine/shipping-information")
      operation checkoutShippingInformationManagementV1SaveAddressInformationPost( @RequestBody checkoutShippingInformationManagementV1SaveAddressInformationPostBody : AnonymousType_checkoutShippingInformationManagementV1SaveAddressInformationPostBody ) : checkout_data_payment_details_interface
   }
   service V1CartsCartIdShipping_informationService {
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/carts/{cartId}/shipping-information")
      operation checkoutShippingInformationManagementV1SaveAddressInformationPost( @PathVariable(value = "cartId") cartId : Int, @RequestBody checkoutShippingInformationManagementV1SaveAddressInformationPostBody : AnonymousType_checkoutShippingInformationManagementV1SaveAddressInformationPostBody ) : checkout_data_payment_details_interface
   }
   service V1CartsCartIdTotals_informationService {
      [[ Calculate quote totals based on address and shipping method. ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/carts/{cartId}/totals-information")
      operation checkoutTotalsInformationManagementV1CalculatePost( @PathVariable(value = "cartId") cartId : Int, @RequestBody checkoutTotalsInformationManagementV1CalculatePostBody : AnonymousType_checkoutTotalsInformationManagementV1CalculatePostBody ) : quote_data_totals_interface
   }
   service V1CartsMineTotals_informationService {
      [[ Calculate quote totals based on address and shipping method. ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/carts/mine/totals-information")
      operation checkoutTotalsInformationManagementV1CalculatePost( @RequestBody checkoutTotalsInformationManagementV1CalculatePostBody : AnonymousType_checkoutTotalsInformationManagementV1CalculatePostBody ) : quote_data_totals_interface
   }
   service V1Guest_cartsCartIdTotals_informationService {
      [[ Calculate quote totals based on address and shipping method. ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/guest-carts/{cartId}/totals-information")
      operation checkoutGuestTotalsInformationManagementV1CalculatePost( @PathVariable(value = "cartId") cartId : String, @RequestBody checkoutGuestTotalsInformationManagementV1CalculatePostBody : AnonymousType_checkoutGuestTotalsInformationManagementV1CalculatePostBody ) : quote_data_totals_interface
   }
   service V1Guest_cartsCartIdPayment_informationService {
      [[ Get payment information ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/guest-carts/{cartId}/payment-information")
      operation checkoutGuestPaymentInformationManagementV1GetPaymentInformationGet( @PathVariable(value = "cartId") cartId : String ) : checkout_data_payment_details_interface
      [[ Set payment information and place order for a specified cart. ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/guest-carts/{cartId}/payment-information")
      operation checkoutGuestPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPost( @PathVariable(value = "cartId") cartId : String, @RequestBody checkoutGuestPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostBody : AnonymousType_checkoutGuestPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostBody ) : Int
   }
   service V1Guest_cartsCartIdSet_payment_informationService {
      [[ Set payment information for a specified cart. ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/guest-carts/{cartId}/set-payment-information")
      operation checkoutGuestPaymentInformationManagementV1SavePaymentInformationPost( @PathVariable(value = "cartId") cartId : String, @RequestBody checkoutGuestPaymentInformationManagementV1SavePaymentInformationPostBody : AnonymousType_checkoutGuestPaymentInformationManagementV1SavePaymentInformationPostBody ) : Int
   }
   service V1CartsMinePayment_informationService {
      [[ Get payment information ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/carts/mine/payment-information")
      operation checkoutPaymentInformationManagementV1GetPaymentInformationGet(  ) : checkout_data_payment_details_interface
      [[ Set payment information and place order for a specified cart. ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/carts/mine/payment-information")
      operation checkoutPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPost( @RequestBody checkoutPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostBody : AnonymousType_checkoutPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostBody ) : Int
   }
   service V1CartsMineSet_payment_informationService {
      [[ Set payment information for a specified cart. ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/carts/mine/set-payment-information")
      operation checkoutPaymentInformationManagementV1SavePaymentInformationPost( @RequestBody checkoutPaymentInformationManagementV1SavePaymentInformationPostBody : AnonymousType_checkoutPaymentInformationManagementV1SavePaymentInformationPostBody ) : Int
   }
   service V1Bundle_productsSkuLinksOptionIdService {
      [[ Add child product to specified Bundle option by product sku ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/bundle-products/{sku}/links/{optionId}")
      operation bundleProductLinkManagementV1AddChildByProductSkuPost( @PathVariable(value = "sku") sku : String, @PathVariable(value = "optionId") optionId : Int, @RequestBody bundleProductLinkManagementV1AddChildByProductSkuPostBody : AnonymousType_bundleProductLinkManagementV1AddChildByProductSkuPostBody ) : Int
   }
   service V1Bundle_productsSkuLinksIdService {
      @HttpOperation(method = "PUT" , url = "http://localhost/rest/all/V1/bundle-products/{sku}/links/{id}")
      operation bundleProductLinkManagementV1SaveChildPut( @PathVariable(value = "sku") sku : String, @PathVariable(value = "id") id : String, @RequestBody bundleProductLinkManagementV1SaveChildPutBody : AnonymousType_bundleProductLinkManagementV1SaveChildPutBody ) : Boolean
   }
   service V1Bundle_productsProductSkuChildrenService {
      [[ Get all children for Bundle product ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/bundle-products/{productSku}/children")
      operation bundleProductLinkManagementV1GetChildrenGet( @PathVariable(value = "productSku") productSku : String,  optionId : Int ) : bundle_data_link_interface[]
   }
   service V1Bundle_productsSkuOptionsOptionIdChildrenChildSkuService {
      [[ Remove product from Bundle product option ]]
      @HttpOperation(method = "DELETE" , url = "http://localhost/rest/all/V1/bundle-products/{sku}/options/{optionId}/children/{childSku}")
      operation bundleProductLinkManagementV1RemoveChildDelete( @PathVariable(value = "sku") sku : String, @PathVariable(value = "optionId") optionId : Int, @PathVariable(value = "childSku") childSku : String ) : Boolean
   }
   service V1Bundle_productsSkuOptionsAllService {
      [[ Get all options for bundle product ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/bundle-products/{sku}/options/all")
      operation bundleProductOptionRepositoryV1GetListGet( @PathVariable(value = "sku") sku : String ) : bundle_data_option_interface[]
   }
   service V1Bundle_productsSkuOptionsOptionIdService {
      [[ Get option for bundle product ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/bundle-products/{sku}/options/{optionId}")
      operation bundleProductOptionRepositoryV1GetGet( @PathVariable(value = "sku") sku : String, @PathVariable(value = "optionId") optionId : Int ) : bundle_data_option_interface
      [[ Remove bundle option ]]
      @HttpOperation(method = "DELETE" , url = "http://localhost/rest/all/V1/bundle-products/{sku}/options/{optionId}")
      operation bundleProductOptionRepositoryV1DeleteByIdDelete( @PathVariable(value = "sku") sku : String, @PathVariable(value = "optionId") optionId : Int ) : Boolean
   }
   service V1Bundle_productsOptionsTypesService {
      [[ Get all types for options for bundle products ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/bundle-products/options/types")
      operation bundleProductOptionTypeListV1GetItemsGet(  ) : bundle_data_option_type_interface[]
   }
   service V1Bundle_productsOptionsAddService {
      [[ Add new option for bundle product ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/bundle-products/options/add")
      operation bundleProductOptionManagementV1SavePost( @RequestBody bundleProductOptionManagementV1SavePostBody : AnonymousType_bundleProductOptionManagementV1SavePostBody ) : Int
   }
   service V1Bundle_productsOptionsOptionIdService {
      [[ Add new option for bundle product ]]
      @HttpOperation(method = "PUT" , url = "http://localhost/rest/all/V1/bundle-products/options/{optionId}")
      operation bundleProductOptionManagementV1SavePut( @PathVariable(value = "optionId") optionId : String, @RequestBody bundleProductOptionManagementV1SavePutBody : AnonymousType_bundleProductOptionManagementV1SavePutBody ) : Int
   }
   service V1IntegrationAdminTokenService {
      [[ Create access token for admin given the admin credentials. ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/integration/admin/token")
      operation integrationAdminTokenServiceV1CreateAdminAccessTokenPost( @RequestBody integrationAdminTokenServiceV1CreateAdminAccessTokenPostBody : AnonymousType_integrationAdminTokenServiceV1CreateAdminAccessTokenPostBody ) : String
   }
   service V1IntegrationCustomerTokenService {
      [[ Create access token for admin given the customer credentials. ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/integration/customer/token")
      operation integrationCustomerTokenServiceV1CreateCustomerAccessTokenPost( @RequestBody integrationCustomerTokenServiceV1CreateCustomerAccessTokenPostBody : AnonymousType_integrationCustomerTokenServiceV1CreateCustomerAccessTokenPostBody ) : String
   }
   service V1ProductsSkuDownloadable_linksService {
      [[ List of links with associated samples ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/products/{sku}/downloadable-links")
      operation downloadableLinkRepositoryV1GetListGet( @PathVariable(value = "sku") sku : String ) : downloadable_data_link_interface[]
      [[ Update downloadable link of the given product (link type and its resources cannot be changed) ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/products/{sku}/downloadable-links")
      operation downloadableLinkRepositoryV1SavePost( @PathVariable(value = "sku") sku : String, @RequestBody downloadableLinkRepositoryV1SavePostBody : AnonymousType_downloadableLinkRepositoryV1SavePostBody ) : Int
   }
   service V1ProductsSkuDownloadable_linksIdService {
      [[ Update downloadable link of the given product (link type and its resources cannot be changed) ]]
      @HttpOperation(method = "PUT" , url = "http://localhost/rest/all/V1/products/{sku}/downloadable-links/{id}")
      operation downloadableLinkRepositoryV1SavePut( @PathVariable(value = "sku") sku : String, @PathVariable(value = "id") id : String, @RequestBody downloadableLinkRepositoryV1SavePutBody : AnonymousType_downloadableLinkRepositoryV1SavePutBody ) : Int
   }
   service V1ProductsDownloadable_linksIdService {
      [[ Delete downloadable link ]]
      @HttpOperation(method = "DELETE" , url = "http://localhost/rest/all/V1/products/downloadable-links/{id}")
      operation downloadableLinkRepositoryV1DeleteDelete( @PathVariable(value = "id") id : Int ) : Boolean
   }
   service V1ProductsSkuDownloadable_linksSamplesService {
      [[ List of samples for downloadable product ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/products/{sku}/downloadable-links/samples")
      operation downloadableSampleRepositoryV1GetListGet( @PathVariable(value = "sku") sku : String ) : downloadable_data_sample_interface[]
      [[ Update downloadable sample of the given product ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/products/{sku}/downloadable-links/samples")
      operation downloadableSampleRepositoryV1SavePost( @PathVariable(value = "sku") sku : String, @RequestBody downloadableSampleRepositoryV1SavePostBody : AnonymousType_downloadableSampleRepositoryV1SavePostBody ) : Int
   }
   service V1ProductsSkuDownloadable_linksSamplesIdService {
      [[ Update downloadable sample of the given product ]]
      @HttpOperation(method = "PUT" , url = "http://localhost/rest/all/V1/products/{sku}/downloadable-links/samples/{id}")
      operation downloadableSampleRepositoryV1SavePut( @PathVariable(value = "sku") sku : String, @PathVariable(value = "id") id : String, @RequestBody downloadableSampleRepositoryV1SavePutBody : AnonymousType_downloadableSampleRepositoryV1SavePutBody ) : Int
   }
   service V1ProductsDownloadable_linksSamplesIdService {
      [[ Delete downloadable sample ]]
      @HttpOperation(method = "DELETE" , url = "http://localhost/rest/all/V1/products/downloadable-links/samples/{id}")
      operation downloadableSampleRepositoryV1DeleteDelete( @PathVariable(value = "id") id : Int ) : Boolean
   }
   service V1CartsCartIdGift_messageService {
      [[ Return the gift message for a specified order. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/carts/{cartId}/gift-message")
      operation giftMessageCartRepositoryV1GetGet( @PathVariable(value = "cartId") cartId : Int ) : gift_message_data_message_interface
      [[ Set the gift message for an entire order. ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/carts/{cartId}/gift-message")
      operation giftMessageCartRepositoryV1SavePost( @PathVariable(value = "cartId") cartId : Int, @RequestBody giftMessageCartRepositoryV1SavePostBody : AnonymousType_giftMessageCartRepositoryV1SavePostBody ) : Boolean
   }
   service V1CartsMineGift_messageService {
      [[ Return the gift message for a specified order. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/carts/mine/gift-message")
      operation giftMessageCartRepositoryV1GetGet(  ) : gift_message_data_message_interface
      [[ Set the gift message for an entire order. ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/carts/mine/gift-message")
      operation giftMessageCartRepositoryV1SavePost( @RequestBody giftMessageCartRepositoryV1SavePostBody : AnonymousType_giftMessageCartRepositoryV1SavePostBody ) : Boolean
   }
   service V1CartsCartIdGift_messageItemIdService {
      [[ Return the gift message for a specified item in a specified shopping cart. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/carts/{cartId}/gift-message/{itemId}")
      operation giftMessageItemRepositoryV1GetGet( @PathVariable(value = "cartId") cartId : Int, @PathVariable(value = "itemId") itemId : Int ) : gift_message_data_message_interface
      [[ Set the gift message for a specified item in a specified shopping cart. ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/carts/{cartId}/gift-message/{itemId}")
      operation giftMessageItemRepositoryV1SavePost( @PathVariable(value = "cartId") cartId : Int, @PathVariable(value = "itemId") itemId : Int, @RequestBody giftMessageItemRepositoryV1SavePostBody : AnonymousType_giftMessageItemRepositoryV1SavePostBody ) : Boolean
   }
   service V1CartsMineGift_messageItemIdService {
      [[ Return the gift message for a specified item in a specified shopping cart. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/carts/mine/gift-message/{itemId}")
      operation giftMessageItemRepositoryV1GetGet( @PathVariable(value = "itemId") itemId : Int ) : gift_message_data_message_interface
      [[ Set the gift message for a specified item in a specified shopping cart. ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/carts/mine/gift-message/{itemId}")
      operation giftMessageItemRepositoryV1SavePost( @PathVariable(value = "itemId") itemId : Int, @RequestBody giftMessageItemRepositoryV1SavePostBody : AnonymousType_giftMessageItemRepositoryV1SavePostBody ) : Boolean
   }
   service V1Guest_cartsCartIdGift_messageService {
      [[ Return the gift message for a specified order. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/guest-carts/{cartId}/gift-message")
      operation giftMessageGuestCartRepositoryV1GetGet( @PathVariable(value = "cartId") cartId : String ) : gift_message_data_message_interface
      [[ Set the gift message for an entire order. ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/guest-carts/{cartId}/gift-message")
      operation giftMessageGuestCartRepositoryV1SavePost( @PathVariable(value = "cartId") cartId : String, @RequestBody giftMessageGuestCartRepositoryV1SavePostBody : AnonymousType_giftMessageGuestCartRepositoryV1SavePostBody ) : Boolean
   }
   service V1Guest_cartsCartIdGift_messageItemIdService {
      [[ Return the gift message for a specified item in a specified shopping cart. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/guest-carts/{cartId}/gift-message/{itemId}")
      operation giftMessageGuestItemRepositoryV1GetGet( @PathVariable(value = "cartId") cartId : String, @PathVariable(value = "itemId") itemId : Int ) : gift_message_data_message_interface
      [[ Set the gift message for a specified item in a specified shopping cart. ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/guest-carts/{cartId}/gift-message/{itemId}")
      operation giftMessageGuestItemRepositoryV1SavePost( @PathVariable(value = "cartId") cartId : String, @PathVariable(value = "itemId") itemId : Int, @RequestBody giftMessageGuestItemRepositoryV1SavePostBody : AnonymousType_giftMessageGuestItemRepositoryV1SavePostBody ) : Boolean
   }
   service V1Configurable_productsSkuChildrenService {
      [[ Get all children for Configurable product ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/configurable-products/{sku}/children")
      operation configurableProductLinkManagementV1GetChildrenGet( @PathVariable(value = "sku") sku : String ) : catalog_data_product_interface[]
   }
   service V1Configurable_productsSkuChildrenChildSkuService {
      [[ Remove configurable product option ]]
      @HttpOperation(method = "DELETE" , url = "http://localhost/rest/all/V1/configurable-products/{sku}/children/{childSku}")
      operation configurableProductLinkManagementV1RemoveChildDelete( @PathVariable(value = "sku") sku : String, @PathVariable(value = "childSku") childSku : String ) : Boolean
   }
   service V1Configurable_productsSkuChildService {
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/configurable-products/{sku}/child")
      operation configurableProductLinkManagementV1AddChildPost( @PathVariable(value = "sku") sku : String, @RequestBody configurableProductLinkManagementV1AddChildPostBody : AnonymousType_configurableProductLinkManagementV1AddChildPostBody ) : Boolean
   }
   service V1Configurable_productsVariationService {
      [[ Generate variation based on same product ]]
      @HttpOperation(method = "PUT" , url = "http://localhost/rest/all/V1/configurable-products/variation")
      operation configurableProductConfigurableProductManagementV1GenerateVariationPut( @RequestBody configurableProductConfigurableProductManagementV1GenerateVariationPutBody : AnonymousType_configurableProductConfigurableProductManagementV1GenerateVariationPutBody ) : catalog_data_product_interface[]
   }
   service V1Configurable_productsSkuOptionsIdService {
      [[ Get option for configurable product ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/configurable-products/{sku}/options/{id}")
      operation configurableProductOptionRepositoryV1GetGet( @PathVariable(value = "sku") sku : String, @PathVariable(value = "id") id : Int ) : configurable_product_data_option_interface
      [[ Save option ]]
      @HttpOperation(method = "PUT" , url = "http://localhost/rest/all/V1/configurable-products/{sku}/options/{id}")
      operation configurableProductOptionRepositoryV1SavePut( @PathVariable(value = "sku") sku : String, @PathVariable(value = "id") id : String, @RequestBody configurableProductOptionRepositoryV1SavePutBody : AnonymousType_configurableProductOptionRepositoryV1SavePutBody ) : Int
      [[ Remove option from configurable product ]]
      @HttpOperation(method = "DELETE" , url = "http://localhost/rest/all/V1/configurable-products/{sku}/options/{id}")
      operation configurableProductOptionRepositoryV1DeleteByIdDelete( @PathVariable(value = "sku") sku : String, @PathVariable(value = "id") id : Int ) : Boolean
   }
   service V1Configurable_productsSkuOptionsAllService {
      [[ Get all options for configurable product ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/configurable-products/{sku}/options/all")
      operation configurableProductOptionRepositoryV1GetListGet( @PathVariable(value = "sku") sku : String ) : configurable_product_data_option_interface[]
   }
   service V1Configurable_productsSkuOptionsService {
      [[ Save option ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/configurable-products/{sku}/options")
      operation configurableProductOptionRepositoryV1SavePost( @PathVariable(value = "sku") sku : String, @RequestBody configurableProductOptionRepositoryV1SavePostBody : AnonymousType_configurableProductOptionRepositoryV1SavePostBody ) : Int
   }
   service V1AnalyticsLinkService {
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/analytics/link")
      operation analyticsLinkProviderV1GetGet(  ) : analytics_data_link_interface
   }
   service V1InventorySourcesService {
      [[ Find Sources by SearchCriteria SearchCriteria is not required because load all stocks is useful case ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/inventory/sources")
      operation inventoryApiSourceRepositoryV1GetListGet(  searchCriteria_filterGroups_0_filters_0_field_ : String,  searchCriteria_filterGroups_0_filters_0_value_ : String,  searchCriteria_filterGroups_0_filters_0_conditionType_ : String,  searchCriteria_sortOrders_0_field_ : String,  searchCriteria_sortOrders_0_direction_ : String,  searchCriteria_pageSize_ : Int,  searchCriteria_currentPage_ : Int ) : inventory_api_data_source_search_results_interface
      [[ Save Source data ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/inventory/sources")
      operation inventoryApiSourceRepositoryV1SavePost( @RequestBody inventoryApiSourceRepositoryV1SavePostBody : AnonymousType_inventoryApiSourceRepositoryV1SavePostBody )
   }
   service V1InventorySourcesSourceCodeService {
      [[ Get Source data by given code. If you want to create plugin on get method, also you need to create separate plugin on getList method, because entity loading way is different for these methods ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/inventory/sources/{sourceCode}")
      operation inventoryApiSourceRepositoryV1GetGet( @PathVariable(value = "sourceCode") sourceCode : String ) : inventory_api_data_source_interface
      [[ Save Source data ]]
      @HttpOperation(method = "PUT" , url = "http://localhost/rest/all/V1/inventory/sources/{sourceCode}")
      operation inventoryApiSourceRepositoryV1SavePut( @PathVariable(value = "sourceCode") sourceCode : String, @RequestBody inventoryApiSourceRepositoryV1SavePutBody : AnonymousType_inventoryApiSourceRepositoryV1SavePutBody )
   }
   service V1InventoryGet_sources_assigned_to_stock_ordered_by_priorityStockIdService {
      [[ Get Sources assigned to Stock ordered by priority If Stock with given id doesn't exist then return an empty array ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/inventory/get-sources-assigned-to-stock-ordered-by-priority/{stockId}")
      operation inventoryApiGetSourcesAssignedToStockOrderedByPriorityV1ExecuteGet( @PathVariable(value = "stockId") stockId : Int ) : inventory_api_data_source_interface[]
   }
   service V1InventoryStocksService {
      [[ Find Stocks by given SearchCriteria SearchCriteria is not required because load all stocks is useful case ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/inventory/stocks")
      operation inventoryApiStockRepositoryV1GetListGet(  searchCriteria_filterGroups_0_filters_0_field_ : String,  searchCriteria_filterGroups_0_filters_0_value_ : String,  searchCriteria_filterGroups_0_filters_0_conditionType_ : String,  searchCriteria_sortOrders_0_field_ : String,  searchCriteria_sortOrders_0_direction_ : String,  searchCriteria_pageSize_ : Int,  searchCriteria_currentPage_ : Int ) : inventory_api_data_stock_search_results_interface
      [[ Save Stock data ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/inventory/stocks")
      operation inventoryApiStockRepositoryV1SavePost( @RequestBody inventoryApiStockRepositoryV1SavePostBody : AnonymousType_inventoryApiStockRepositoryV1SavePostBody ) : Int
   }
   service V1InventoryStocksStockIdService {
      [[ Get Stock data by given stockId. If you want to create plugin on get method, also you need to create separate plugin on getList method, because entity loading way is different for these methods ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/inventory/stocks/{stockId}")
      operation inventoryApiStockRepositoryV1GetGet( @PathVariable(value = "stockId") stockId : Int ) : inventory_api_data_stock_interface
      [[ Save Stock data ]]
      @HttpOperation(method = "PUT" , url = "http://localhost/rest/all/V1/inventory/stocks/{stockId}")
      operation inventoryApiStockRepositoryV1SavePut( @PathVariable(value = "stockId") stockId : String, @RequestBody inventoryApiStockRepositoryV1SavePutBody : AnonymousType_inventoryApiStockRepositoryV1SavePutBody ) : Int
      [[ Delete the Stock data by stockId. If stock is not found do nothing ]]
      @HttpOperation(method = "DELETE" , url = "http://localhost/rest/all/V1/inventory/stocks/{stockId}")
      operation inventoryApiStockRepositoryV1DeleteByIdDelete( @PathVariable(value = "stockId") stockId : Int )
   }
   service V1InventoryStock_source_linksService {
      [[ Find StockSourceLink list by given SearchCriteria ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/inventory/stock-source-links")
      operation inventoryApiGetStockSourceLinksV1ExecuteGet(  searchCriteria_filterGroups_0_filters_0_field_ : String,  searchCriteria_filterGroups_0_filters_0_value_ : String,  searchCriteria_filterGroups_0_filters_0_conditionType_ : String,  searchCriteria_sortOrders_0_field_ : String,  searchCriteria_sortOrders_0_direction_ : String,  searchCriteria_pageSize_ : Int,  searchCriteria_currentPage_ : Int ) : inventory_api_data_stock_source_link_search_results_interface
      [[ Save StockSourceLink list data ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/inventory/stock-source-links")
      operation inventoryApiStockSourceLinksSaveV1ExecutePost( @RequestBody inventoryApiStockSourceLinksSaveV1ExecutePostBody : AnonymousType_inventoryApiStockSourceLinksSaveV1ExecutePostBody )
   }
   service V1InventoryStock_source_links_deleteService {
      [[ Remove StockSourceLink list list ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/inventory/stock-source-links-delete")
      operation inventoryApiStockSourceLinksDeleteV1ExecutePost( @RequestBody inventoryApiStockSourceLinksDeleteV1ExecutePostBody : AnonymousType_inventoryApiStockSourceLinksDeleteV1ExecutePostBody )
   }
   service V1InventorySource_itemsService {
      [[ Find SourceItems by SearchCriteria We need to have this method for direct work with SourceItems because this object contains additional data like as qty, status (for example can be searchable by additional field) ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/inventory/source-items")
      operation inventoryApiSourceItemRepositoryV1GetListGet(  searchCriteria_filterGroups_0_filters_0_field_ : String,  searchCriteria_filterGroups_0_filters_0_value_ : String,  searchCriteria_filterGroups_0_filters_0_conditionType_ : String,  searchCriteria_sortOrders_0_field_ : String,  searchCriteria_sortOrders_0_direction_ : String,  searchCriteria_pageSize_ : Int,  searchCriteria_currentPage_ : Int ) : inventory_api_data_source_item_search_results_interface
      [[ Save Multiple Source item data ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/inventory/source-items")
      operation inventoryApiSourceItemsSaveV1ExecutePost( @RequestBody inventoryApiSourceItemsSaveV1ExecutePostBody : AnonymousType_inventoryApiSourceItemsSaveV1ExecutePostBody )
   }
   service V1InventorySource_items_deleteService {
      [[ Delete Multiple Source item data ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/inventory/source-items-delete")
      operation inventoryApiSourceItemsDeleteV1ExecutePost( @RequestBody inventoryApiSourceItemsDeleteV1ExecutePostBody : AnonymousType_inventoryApiSourceItemsDeleteV1ExecutePostBody )
   }
   service V1InventoryBulk_product_source_assignService {
      [[ Run mass product to source assignment ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/inventory/bulk-product-source-assign")
      operation inventoryCatalogApiBulkSourceAssignV1ExecutePost( @RequestBody inventoryCatalogApiBulkSourceAssignV1ExecutePostBody : AnonymousType_inventoryCatalogApiBulkSourceAssignV1ExecutePostBody ) : Int
   }
   service V1InventoryBulk_product_source_unassignService {
      [[ Run mass product to source un-assignment ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/inventory/bulk-product-source-unassign")
      operation inventoryCatalogApiBulkSourceUnassignV1ExecutePost( @RequestBody inventoryCatalogApiBulkSourceUnassignV1ExecutePostBody : AnonymousType_inventoryCatalogApiBulkSourceUnassignV1ExecutePostBody ) : Int
   }
   service V1InventoryBulk_product_source_transferService {
      [[ Run bulk inventory transfer ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/inventory/bulk-product-source-transfer")
      operation inventoryCatalogApiBulkInventoryTransferV1ExecutePost( @RequestBody inventoryCatalogApiBulkInventoryTransferV1ExecutePostBody : AnonymousType_inventoryCatalogApiBulkInventoryTransferV1ExecutePostBody ) : Boolean
   }
   service V1InventoryBulk_partial_source_transferService {
      [[ Run bulk partial inventory transfer for specified items. ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/inventory/bulk-partial-source-transfer")
      operation inventoryCatalogApiBulkPartialInventoryTransferV1ExecutePost( @RequestBody inventoryCatalogApiBulkPartialInventoryTransferV1ExecutePostBody : AnonymousType_inventoryCatalogApiBulkPartialInventoryTransferV1ExecutePostBody )
   }
   service V1InventoryGet_distance_provider_codeService {
      [[ Get Default distance provider code ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/inventory/get-distance-provider-code")
      operation inventoryDistanceBasedSourceSelectionApiGetDistanceProviderCodeV1ExecuteGet(  ) : String
   }
   service V1InventoryGet_distanceService {
      [[ Get distance between two points ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/inventory/get-distance")
      operation inventoryDistanceBasedSourceSelectionApiGetDistanceV1ExecuteGet(  source_lat_ : Decimal,  source_lng_ : Decimal,  destination_lat_ : Decimal,  destination_lng_ : Decimal ) : Decimal
   }
   service V1InventoryGet_latlng_from_addressService {
      [[ Get latitude and longitude object from address ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/inventory/get-latlng-from-address")
      operation inventoryDistanceBasedSourceSelectionApiGetLatLngFromAddressV1ExecuteGet(  address_country_ : String,  address_postcode_ : String,  address_street_ : String,  address_region_ : String,  address_city_ : String ) : inventory_distance_based_source_selection_api_data_lat_lng_interface
   }
   service V1InventoryGet_latslngs_from_addressService {
      [[ Get all available latitude and longitude objects from address. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/inventory/get-latslngs-from-address")
      operation inventoryDistanceBasedSourceSelectionApiGetLatsLngsFromAddressV1ExecuteGet(  address_country_ : String,  address_postcode_ : String,  address_street_ : String,  address_region_ : String,  address_city_ : String ) : inventory_distance_based_source_selection_api_data_lat_lng_interface[]
   }
   service V1InventoryExport_stock_salable_qtySalesChannelTypeSalesChannelCodeService {
      [[ Export product stock data filtered by search criteria. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/inventory/export-stock-salable-qty/{salesChannelType}/{salesChannelCode}")
      operation inventoryExportStockApiExportStockSalableQtyV1ExecuteGet( @PathVariable(value = "salesChannelType") salesChannelType : String, @PathVariable(value = "salesChannelCode") salesChannelCode : String,  searchCriteria_filterGroups_0_filters_0_field_ : String,  searchCriteria_filterGroups_0_filters_0_value_ : String,  searchCriteria_filterGroups_0_filters_0_conditionType_ : String,  searchCriteria_sortOrders_0_field_ : String,  searchCriteria_sortOrders_0_direction_ : String,  searchCriteria_pageSize_ : Int,  searchCriteria_currentPage_ : Int ) : inventory_export_stock_api_data_export_stock_salable_qty_search_result_interface
   }
   service V1InventoryDump_stock_index_dataSalesChannelTypeSalesChannelCodeService {
      [[ Provides stock index export from inventory_stock_% table ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/inventory/dump-stock-index-data/{salesChannelType}/{salesChannelCode}")
      operation inventoryExportStockApiExportStockIndexDataV1ExecuteGet( @PathVariable(value = "salesChannelType") salesChannelType : String, @PathVariable(value = "salesChannelCode") salesChannelCode : String ) : inventory_export_stock_api_data_product_stock_index_data_interface[]
   }
   service V1InventoryGet_product_salable_quantitySkuStockIdService {
      [[ Get Product Quantity for given SKU and Stock ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/inventory/get-product-salable-quantity/{sku}/{stockId}")
      operation inventorySalesApiGetProductSalableQtyV1ExecuteGet( @PathVariable(value = "sku") sku : String, @PathVariable(value = "stockId") stockId : Int ) : Decimal
   }
   service V1InventoryIs_product_salableSkuStockIdService {
      [[ Get is product in salable for given SKU in a given Stock ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/inventory/is-product-salable/{sku}/{stockId}")
      operation inventorySalesApiIsProductSalableV1ExecuteGet( @PathVariable(value = "sku") sku : String, @PathVariable(value = "stockId") stockId : Int ) : Boolean
   }
   service V1InventoryAre_products_salableService {
      [[ Get products salable status for given SKUs and given Stock. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/inventory/are-products-salable")
      operation inventorySalesApiAreProductsSalableV1ExecuteGet(  skus : String,  stockId : Int ) : inventory_sales_api_data_is_product_salable_result_interface[]
   }
   service V1InventoryIs_product_salable_for_requested_qtySkuStockIdRequestedQtyService {
      [[ Get is product salable for given SKU in a given Stock for a certain Qty ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/inventory/is-product-salable-for-requested-qty/{sku}/{stockId}/{requestedQty}")
      operation inventorySalesApiIsProductSalableForRequestedQtyV1ExecuteGet( @PathVariable(value = "sku") sku : String, @PathVariable(value = "stockId") stockId : Int, @PathVariable(value = "requestedQty") requestedQty : Decimal ) : inventory_sales_api_data_product_salable_result_interface
   }
   service V1InventoryAre_product_salable_for_requested_qtyService {
      [[ Get whether products are salable in requested Qty for given set of SKUs in specified stock. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/inventory/are-product-salable-for-requested-qty/")
      operation inventorySalesApiAreProductsSalableForRequestedQtyV1ExecuteGet(  skuRequests_0_sku_ : String,  skuRequests_0_qty_ : Decimal,  stockId : Int ) : inventory_sales_api_data_is_product_salable_for_requested_qty_result_interface[]
   }
   service V1InventoryStock_resolverTypeCodeService {
      [[ Resolve Stock by Sales Channel type and code ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/inventory/stock-resolver/{type}/{code}")
      operation inventorySalesApiStockResolverV1ExecuteGet( @PathVariable(value = "type") `type` : String, @PathVariable(value = "code") code : String ) : inventory_api_data_stock_interface
   }
   service V1InventoryIn_store_pickupPickup_locationsService {
      [[ Get Pickup Locations according to the results of filtration by Search Request. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/inventory/in-store-pickup/pickup-locations/")
      operation inventoryInStorePickupApiGetPickupLocationsV1ExecuteGet(  searchRequest_area_radius_ : Int,  searchRequest_area_searchTerm_ : String,  searchRequest_filters_country_value_ : String,  searchRequest_filters_country_conditionType_ : String,  searchRequest_filters_postcode_value_ : String,  searchRequest_filters_postcode_conditionType_ : String,  searchRequest_filters_region_value_ : String,  searchRequest_filters_region_conditionType_ : String,  searchRequest_filters_regionId_value_ : String,  searchRequest_filters_regionId_conditionType_ : String,  searchRequest_filters_city_value_ : String,  searchRequest_filters_city_conditionType_ : String,  searchRequest_filters_street_value_ : String,  searchRequest_filters_street_conditionType_ : String,  searchRequest_filters_name_value_ : String,  searchRequest_filters_name_conditionType_ : String,  searchRequest_filters_pickupLocationCode_value_ : String,  searchRequest_filters_pickupLocationCode_conditionType_ : String,  searchRequest_pageSize_ : Int,  searchRequest_currentPage_ : Int,  searchRequest_scopeType_ : String,  searchRequest_scopeCode_ : String,  searchRequest_sort_0_field_ : String,  searchRequest_sort_0_direction_ : String,  searchRequest_extensionAttributes_productsInfo_0_sku_ : String ) : inventory_in_store_pickup_api_data_search_result_interface
   }
   service V1InventorySource_selection_algorithm_listService {
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/inventory/source-selection-algorithm-list")
      operation inventorySourceSelectionApiGetSourceSelectionAlgorithmListV1ExecuteGet(  ) : inventory_source_selection_api_data_source_selection_algorithm_interface[]
   }
   service V1InventorySource_selection_algorithm_resultService {
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/inventory/source-selection-algorithm-result")
      operation inventorySourceSelectionApiSourceSelectionServiceV1ExecutePost( @RequestBody inventorySourceSelectionApiSourceSelectionServiceV1ExecutePostBody : AnonymousType_inventorySourceSelectionApiSourceSelectionServiceV1ExecutePostBody ) : inventory_source_selection_api_data_source_selection_result_interface
   }
   service V1OrderNotify_orders_are_ready_for_pickupService {
      [[ Notify customer that the orders is ready for pickup. ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/order/notify-orders-are-ready-for-pickup")
      operation inventoryInStorePickupSalesApiNotifyOrdersAreReadyForPickupV1ExecutePost( @RequestBody inventoryInStorePickupSalesApiNotifyOrdersAreReadyForPickupV1ExecutePostBody : AnonymousType_inventoryInStorePickupSalesApiNotifyOrdersAreReadyForPickupV1ExecutePostBody ) : inventory_in_store_pickup_sales_api_data_result_interface
   }
   service V1InventoryLow_quantity_notificationSourceCodeSkuService {
      [[ Get the source item configuration ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/inventory/low-quantity-notification/{sourceCode}/{sku}")
      operation inventoryLowQuantityNotificationApiGetSourceItemConfigurationV1ExecuteGet( @PathVariable(value = "sourceCode") sourceCode : String, @PathVariable(value = "sku") sku : String ) : inventory_low_quantity_notification_api_data_source_item_configuration_interface
   }
   service V1InventoryLow_quantity_notificationService {
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/inventory/low-quantity-notification")
      operation inventoryLowQuantityNotificationApiSourceItemConfigurationsSaveV1ExecutePost( @RequestBody inventoryLowQuantityNotificationApiSourceItemConfigurationsSaveV1ExecutePostBody : AnonymousType_inventoryLowQuantityNotificationApiSourceItemConfigurationsSaveV1ExecutePostBody )
   }
   service V1InventoryLow_quantity_notifications_deleteService {
      [[ Delete multiple source items configuration for low quantity ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/inventory/low-quantity-notifications-delete")
      operation inventoryLowQuantityNotificationApiDeleteSourceItemsConfigurationV1ExecutePost( @RequestBody inventoryLowQuantityNotificationApiDeleteSourceItemsConfigurationV1ExecutePostBody : AnonymousType_inventoryLowQuantityNotificationApiDeleteSourceItemsConfigurationV1ExecutePostBody )
   }
   service V1AdobestockAssetIdService {
      [[ Get asset by id ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/adobestock/asset/{id}")
      operation adobeStockAssetApiAssetRepositoryV1GetByIdGet( @PathVariable(value = "id") id : Int ) : adobe_stock_asset_api_data_asset_interface
      [[ Delete asset ]]
      @HttpOperation(method = "DELETE" , url = "http://localhost/rest/all/V1/adobestock/asset/{id}")
      operation adobeStockAssetApiAssetRepositoryV1DeleteByIdDelete( @PathVariable(value = "id") id : Int )
   }
   service V1AdobestockAssetSearchService {
      [[ Get a list of assets ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/adobestock/asset/search")
      operation adobeStockAssetApiAssetRepositoryV1GetListGet(  searchCriteria_filterGroups_0_filters_0_field_ : String,  searchCriteria_filterGroups_0_filters_0_value_ : String,  searchCriteria_filterGroups_0_filters_0_conditionType_ : String,  searchCriteria_sortOrders_0_field_ : String,  searchCriteria_sortOrders_0_direction_ : String,  searchCriteria_pageSize_ : Int,  searchCriteria_currentPage_ : Int ) : adobe_stock_asset_api_data_asset_search_results_interface
   }
   service V1AdobestockAssetListService {
      [[ Search for images based on search criteria ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/adobestock/asset/list")
      operation adobeStockAssetApiGetAssetListV1ExecuteGet(  searchCriteria_requestName_ : String,  searchCriteria_filterGroups_0_filters_0_field_ : String,  searchCriteria_filterGroups_0_filters_0_value_ : String,  searchCriteria_filterGroups_0_filters_0_conditionType_ : String,  searchCriteria_sortOrders_0_field_ : String,  searchCriteria_sortOrders_0_direction_ : String,  searchCriteria_pageSize_ : Int,  searchCriteria_currentPage_ : Int ) : framework_search_search_result_interface
   }
   service V1SalesRulesRuleIdService {
      [[ Get rule by ID. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/salesRules/{ruleId}")
      operation salesRuleRuleRepositoryV1GetByIdGet( @PathVariable(value = "ruleId") ruleId : Int ) : sales_rule_data_rule_interface
      [[ Save sales rule. ]]
      @HttpOperation(method = "PUT" , url = "http://localhost/rest/all/V1/salesRules/{ruleId}")
      operation salesRuleRuleRepositoryV1SavePut( @PathVariable(value = "ruleId") ruleId : String, @RequestBody salesRuleRuleRepositoryV1SavePutBody : AnonymousType_salesRuleRuleRepositoryV1SavePutBody ) : sales_rule_data_rule_interface
      [[ Delete rule by ID. ]]
      @HttpOperation(method = "DELETE" , url = "http://localhost/rest/all/V1/salesRules/{ruleId}")
      operation salesRuleRuleRepositoryV1DeleteByIdDelete( @PathVariable(value = "ruleId") ruleId : Int ) : Boolean
   }
   service V1SalesRulesSearchService {
      [[ Retrieve sales rules that match te specified criteria. This call returns an array of objects, but detailed information about each object’s attributes might not be included. See https://devdocs.magento.com/codelinks/attributes.html#RuleRepositoryInterface to determine which call to use to get detailed information about all attributes for an object. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/salesRules/search")
      operation salesRuleRuleRepositoryV1GetListGet(  searchCriteria_filterGroups_0_filters_0_field_ : String,  searchCriteria_filterGroups_0_filters_0_value_ : String,  searchCriteria_filterGroups_0_filters_0_conditionType_ : String,  searchCriteria_sortOrders_0_field_ : String,  searchCriteria_sortOrders_0_direction_ : String,  searchCriteria_pageSize_ : Int,  searchCriteria_currentPage_ : Int ) : sales_rule_data_rule_search_result_interface
   }
   service V1SalesRulesService {
      [[ Save sales rule. ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/salesRules")
      operation salesRuleRuleRepositoryV1SavePost( @RequestBody salesRuleRuleRepositoryV1SavePostBody : AnonymousType_salesRuleRuleRepositoryV1SavePostBody ) : sales_rule_data_rule_interface
   }
   service V1CouponsCouponIdService {
      [[ Get coupon by coupon id. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/coupons/{couponId}")
      operation salesRuleCouponRepositoryV1GetByIdGet( @PathVariable(value = "couponId") couponId : Int ) : sales_rule_data_coupon_interface
      [[ Save a coupon. ]]
      @HttpOperation(method = "PUT" , url = "http://localhost/rest/all/V1/coupons/{couponId}")
      operation salesRuleCouponRepositoryV1SavePut( @PathVariable(value = "couponId") couponId : String, @RequestBody salesRuleCouponRepositoryV1SavePutBody : AnonymousType_salesRuleCouponRepositoryV1SavePutBody ) : sales_rule_data_coupon_interface
      [[ Delete coupon by coupon id. ]]
      @HttpOperation(method = "DELETE" , url = "http://localhost/rest/all/V1/coupons/{couponId}")
      operation salesRuleCouponRepositoryV1DeleteByIdDelete( @PathVariable(value = "couponId") couponId : Int ) : Boolean
   }
   service V1CouponsSearchService {
      [[ Retrieve a coupon using the specified search criteria. This call returns an array of objects, but detailed information about each object’s attributes might not be included. See https://devdocs.magento.com/codelinks/attributes.html#CouponRepositoryInterface to determine which call to use to get detailed information about all attributes for an object. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/coupons/search")
      operation salesRuleCouponRepositoryV1GetListGet(  searchCriteria_filterGroups_0_filters_0_field_ : String,  searchCriteria_filterGroups_0_filters_0_value_ : String,  searchCriteria_filterGroups_0_filters_0_conditionType_ : String,  searchCriteria_sortOrders_0_field_ : String,  searchCriteria_sortOrders_0_direction_ : String,  searchCriteria_pageSize_ : Int,  searchCriteria_currentPage_ : Int ) : sales_rule_data_coupon_search_result_interface
   }
   service V1CouponsService {
      [[ Save a coupon. ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/coupons")
      operation salesRuleCouponRepositoryV1SavePost( @RequestBody salesRuleCouponRepositoryV1SavePostBody : AnonymousType_salesRuleCouponRepositoryV1SavePostBody ) : sales_rule_data_coupon_interface
   }
   service V1CouponsGenerateService {
      [[ Generate coupon for a rule ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/coupons/generate")
      operation salesRuleCouponManagementV1GeneratePost( @RequestBody salesRuleCouponManagementV1GeneratePostBody : AnonymousType_salesRuleCouponManagementV1GeneratePostBody ) : String[]
   }
   service V1CouponsDeleteByIdsService {
      [[ Delete coupon by coupon ids. ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/coupons/deleteByIds")
      operation salesRuleCouponManagementV1DeleteByIdsPost( @RequestBody salesRuleCouponManagementV1DeleteByIdsPostBody : AnonymousType_salesRuleCouponManagementV1DeleteByIdsPostBody ) : sales_rule_data_coupon_mass_delete_result_interface
   }
   service V1CouponsDeleteByCodesService {
      [[ Delete coupon by coupon codes. ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/coupons/deleteByCodes")
      operation salesRuleCouponManagementV1DeleteByCodesPost( @RequestBody salesRuleCouponManagementV1DeleteByCodesPostBody : AnonymousType_salesRuleCouponManagementV1DeleteByCodesPostBody ) : sales_rule_data_coupon_mass_delete_result_interface
   }
   service V1CartsLicenceService {
      [[ Lists active checkout agreements. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/carts/licence")
      operation checkoutAgreementsCheckoutAgreementsRepositoryV1GetListGet(  ) : checkout_agreements_data_agreement_interface[]
   }
   service V1CartsLicenceListService {
      [[ List of checkout agreements. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/carts/licence/list")
      operation checkoutAgreementsCheckoutAgreementsListV1GetListGet(  searchCriteria_filterGroups_0_filters_0_field_ : String,  searchCriteria_filterGroups_0_filters_0_value_ : String,  searchCriteria_filterGroups_0_filters_0_conditionType_ : String,  searchCriteria_sortOrders_0_field_ : String,  searchCriteria_sortOrders_0_direction_ : String,  searchCriteria_pageSize_ : Int,  searchCriteria_currentPage_ : Int ) : checkout_agreements_data_agreement_interface[]
   }
   service V1TaxRatesService {
      [[ Create or update tax rate ]]
      @HttpOperation(method = "PUT" , url = "http://localhost/rest/all/V1/taxRates")
      operation taxTaxRateRepositoryV1SavePut( @RequestBody taxTaxRateRepositoryV1SavePutBody : AnonymousType_taxTaxRateRepositoryV1SavePutBody ) : tax_data_tax_rate_interface
      [[ Create or update tax rate ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/taxRates")
      operation taxTaxRateRepositoryV1SavePost( @RequestBody taxTaxRateRepositoryV1SavePostBody : AnonymousType_taxTaxRateRepositoryV1SavePostBody ) : tax_data_tax_rate_interface
   }
   service V1TaxRatesRateIdService {
      [[ Get tax rate ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/taxRates/{rateId}")
      operation taxTaxRateRepositoryV1GetGet( @PathVariable(value = "rateId") rateId : Int ) : tax_data_tax_rate_interface
      [[ Delete tax rate ]]
      @HttpOperation(method = "DELETE" , url = "http://localhost/rest/all/V1/taxRates/{rateId}")
      operation taxTaxRateRepositoryV1DeleteByIdDelete( @PathVariable(value = "rateId") rateId : Int ) : Boolean
   }
   service V1TaxRatesSearchService {
      [[ Search TaxRates This call returns an array of objects, but detailed information about each object’s attributes might not be included. See https://devdocs.magento.com/codelinks/attributes.html#TaxRateRepositoryInterface to determine which call to use to get detailed information about all attributes for an object. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/taxRates/search")
      operation taxTaxRateRepositoryV1GetListGet(  searchCriteria_filterGroups_0_filters_0_field_ : String,  searchCriteria_filterGroups_0_filters_0_value_ : String,  searchCriteria_filterGroups_0_filters_0_conditionType_ : String,  searchCriteria_sortOrders_0_field_ : String,  searchCriteria_sortOrders_0_direction_ : String,  searchCriteria_pageSize_ : Int,  searchCriteria_currentPage_ : Int ) : tax_data_tax_rate_search_results_interface
   }
   service V1TaxRulesService {
      [[ Save TaxRule ]]
      @HttpOperation(method = "PUT" , url = "http://localhost/rest/all/V1/taxRules")
      operation taxTaxRuleRepositoryV1SavePut( @RequestBody taxTaxRuleRepositoryV1SavePutBody : AnonymousType_taxTaxRuleRepositoryV1SavePutBody ) : tax_data_tax_rule_interface
      [[ Save TaxRule ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/taxRules")
      operation taxTaxRuleRepositoryV1SavePost( @RequestBody taxTaxRuleRepositoryV1SavePostBody : AnonymousType_taxTaxRuleRepositoryV1SavePostBody ) : tax_data_tax_rule_interface
   }
   service V1TaxRulesRuleIdService {
      [[ Get TaxRule ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/taxRules/{ruleId}")
      operation taxTaxRuleRepositoryV1GetGet( @PathVariable(value = "ruleId") ruleId : Int ) : tax_data_tax_rule_interface
      [[ Delete TaxRule ]]
      @HttpOperation(method = "DELETE" , url = "http://localhost/rest/all/V1/taxRules/{ruleId}")
      operation taxTaxRuleRepositoryV1DeleteByIdDelete( @PathVariable(value = "ruleId") ruleId : Int ) : Boolean
   }
   service V1TaxRulesSearchService {
      [[ Search TaxRules This call returns an array of objects, but detailed information about each object’s attributes might not be included. See https://devdocs.magento.com/codelinks/attributes.html#TaxRuleRepositoryInterface to determine which call to use to get detailed information about all attributes for an object. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/taxRules/search")
      operation taxTaxRuleRepositoryV1GetListGet(  searchCriteria_filterGroups_0_filters_0_field_ : String,  searchCriteria_filterGroups_0_filters_0_value_ : String,  searchCriteria_filterGroups_0_filters_0_conditionType_ : String,  searchCriteria_sortOrders_0_field_ : String,  searchCriteria_sortOrders_0_direction_ : String,  searchCriteria_pageSize_ : Int,  searchCriteria_currentPage_ : Int ) : tax_data_tax_rule_search_results_interface
   }
   service V1TaxClassesService {
      [[ Create a Tax Class ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/taxClasses")
      operation taxTaxClassRepositoryV1SavePost( @RequestBody taxTaxClassRepositoryV1SavePostBody : AnonymousType_taxTaxClassRepositoryV1SavePostBody ) : String
   }
   service V1TaxClassesTaxClassIdService {
      [[ Get a tax class with the given tax class id. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/taxClasses/{taxClassId}")
      operation taxTaxClassRepositoryV1GetGet( @PathVariable(value = "taxClassId") taxClassId : Int ) : tax_data_tax_class_interface
      [[ Delete a tax class with the given tax class id. ]]
      @HttpOperation(method = "DELETE" , url = "http://localhost/rest/all/V1/taxClasses/{taxClassId}")
      operation taxTaxClassRepositoryV1DeleteByIdDelete( @PathVariable(value = "taxClassId") taxClassId : Int ) : Boolean
   }
   service V1TaxClassesClassIdService {
      [[ Create a Tax Class ]]
      @HttpOperation(method = "PUT" , url = "http://localhost/rest/all/V1/taxClasses/{classId}")
      operation taxTaxClassRepositoryV1SavePut( @PathVariable(value = "classId") classId : String, @RequestBody taxTaxClassRepositoryV1SavePutBody : AnonymousType_taxTaxClassRepositoryV1SavePutBody ) : String
   }
   service V1TaxClassesSearchService {
      [[ Retrieve tax classes which match a specific criteria. This call returns an array of objects, but detailed information about each object’s attributes might not be included. See https://devdocs.magento.com/codelinks/attributes.html#TaxClassRepositoryInterface to determine which call to use to get detailed information about all attributes for an object. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/taxClasses/search")
      operation taxTaxClassRepositoryV1GetListGet(  searchCriteria_filterGroups_0_filters_0_field_ : String,  searchCriteria_filterGroups_0_filters_0_value_ : String,  searchCriteria_filterGroups_0_filters_0_conditionType_ : String,  searchCriteria_sortOrders_0_field_ : String,  searchCriteria_sortOrders_0_direction_ : String,  searchCriteria_pageSize_ : Int,  searchCriteria_currentPage_ : Int ) : tax_data_tax_class_search_results_interface
   }
   service V1BulkBulkUuidDetailed_statusService {
      [[ Get Bulk summary data with list of operations items full data. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/bulk/{bulkUuid}/detailed-status")
      operation asynchronousOperationsBulkStatusV1GetBulkDetailedStatusGet( @PathVariable(value = "bulkUuid") bulkUuid : String ) : asynchronous_operations_data_detailed_bulk_operations_status_interface
   }
   service V1BulkBulkUuidStatusService {
      [[ Get Bulk summary data with list of operations items short data. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/bulk/{bulkUuid}/status")
      operation asynchronousOperationsBulkStatusV1GetBulkShortStatusGet( @PathVariable(value = "bulkUuid") bulkUuid : String ) : asynchronous_operations_data_bulk_operations_status_interface
   }
   service V1BulkBulkUuidOperation_statusStatusService {
      [[ Get operations count by bulk uuid and status. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/bulk/{bulkUuid}/operation-status/{status}")
      operation asynchronousOperationsBulkStatusV1GetOperationsCountByBulkIdAndStatusGet( @PathVariable(value = "bulkUuid") bulkUuid : String, @PathVariable(value = "status") status : Int ) : Int
   }
   service V1BulkService {
      [[ Lists the bulk operation items that match specified search criteria. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/bulk")
      operation asynchronousOperationsOperationRepositoryV1GetListGet(  searchCriteria_filterGroups_0_filters_0_field_ : String,  searchCriteria_filterGroups_0_filters_0_value_ : String,  searchCriteria_filterGroups_0_filters_0_conditionType_ : String,  searchCriteria_sortOrders_0_field_ : String,  searchCriteria_sortOrders_0_direction_ : String,  searchCriteria_pageSize_ : Int,  searchCriteria_currentPage_ : Int ) : asynchronous_operations_data_operation_search_results_interface
   }
   service V1Amazon_shipping_addressAmazonOrderReferenceIdService {
      @HttpOperation(method = "PUT" , url = "http://localhost/rest/all/V1/amazon-shipping-address/{amazonOrderReferenceId}")
      operation amazonPaymentAddressManagementV1GetShippingAddressPut( @PathVariable(value = "amazonOrderReferenceId") amazonOrderReferenceId : String, @RequestBody amazonPaymentAddressManagementV1GetShippingAddressPutBody : AnonymousType_amazonPaymentAddressManagementV1GetShippingAddressPutBody ) : String
   }
   service V1Amazon_billing_addressAmazonOrderReferenceIdService {
      @HttpOperation(method = "PUT" , url = "http://localhost/rest/all/V1/amazon-billing-address/{amazonOrderReferenceId}")
      operation amazonPaymentAddressManagementV1GetBillingAddressPut( @PathVariable(value = "amazonOrderReferenceId") amazonOrderReferenceId : String, @RequestBody amazonPaymentAddressManagementV1GetBillingAddressPutBody : AnonymousType_amazonPaymentAddressManagementV1GetBillingAddressPutBody ) : String
   }
   service V1AmazonOrder_refService {
      @HttpOperation(method = "DELETE" , url = "http://localhost/rest/all/V1/amazon/order-ref")
      operation amazonPaymentOrderInformationManagementV1RemoveOrderReferenceDelete(  )
   }
   service V1ApplepayAuthService {
      [[ Returns details required to be able to submit a payment with apple pay. ]]
      @HttpOperation(method = "GET" , url = "http://localhost/rest/all/V1/applepay/auth")
      operation payPalBraintreeAuthV1GetGet(  ) : pay_pal_braintree_data_auth_data_interface
   }
   service V1AddressCleanseService {
      [[ Query Vertex to cleanse an address ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/address/cleanse")
      operation vertexAddressValidationApiCleanseAddressV1CleanseAddressPost( @RequestBody vertexAddressValidationApiCleanseAddressV1CleanseAddressPostBody : AnonymousType_vertexAddressValidationApiCleanseAddressV1CleanseAddressPostBody ) : vertex_address_validation_api_data_cleansed_address_interface
   }
   service V1Guest_addressCleanseService {
      [[ Query Vertex to cleanse an address ]]
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/guest-address/cleanse")
      operation vertexAddressValidationApiGuestCleanseAddressV1CleanseAddressPost( @RequestBody vertexAddressValidationApiGuestCleanseAddressV1CleanseAddressPostBody : AnonymousType_vertexAddressValidationApiGuestCleanseAddressV1CleanseAddressPostBody ) : vertex_address_validation_api_data_cleansed_address_interface
   }
   service V1Vertex_address_validationVertex_addressService {
      @HttpOperation(method = "POST" , url = "http://localhost/rest/all/V1/vertex-address-validation/vertex-address")
      operation vertexAddressValidationAddressManagementV1GetValidAddressPost( @RequestBody vertexAddressValidationAddressManagementV1GetValidAddressPostBody : AnonymousType_vertexAddressValidationAddressManagementV1GetValidAddressPostBody ) : quote_data_address_interface
   }
}